
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMArightIGUALMULTIPLICATIVADIVIDIDAARESTOASUMAARESTAASHIFTDASHIFTIAPANDAXORRABORrightUNARIOleftORleftANDleftBORleftXORRleftPANDleftIGUALQUENIGUALQUEleftMENQUEMAYQUEMEIQUEMAIQUEleftSHIFTDSHIFTIleftMASMENOSleftPORDIVIDIDORESTOrightUMENOSNOTNOTRleftPARIZQPARDERCORIZQCORDERPUNTOFLECHAABOR AND APAND ARESTA ARESTO ASHIFTD ASHIFTI ASUMA AXORR BOR CADENA CADENAR_CHAR CHAR COMA CORDER CORIZQ DECIMAL DIVIDIDA DIVIDIDO DOSP ENTERO FLECHA FLOAT ID IGUAL IGUALQUE IMPRIMIR INT LLAVDER LLAVIZQ MAIQUE MAS MAYQUE MEIQUE MENOS MENQUE MULTIPLICATIVA NIGUALQUE NOT NOTR OR PAND PARDER PARIZQ POR PTCOMA PUNTO RESTO SHIFTD SHIFTI UNARIO VOID XOR XORRinit            : funcionesinit            : emptyfunciones    : funciones funcionfunciones    : funcion empty :funcion    : TIPO ID LLAVIZQ  instrucciones LLAVDER instrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr \n                        | asignacion \n                        | declaracion\n                        | error imprimir_instr     : IMPRIMIR PARIZQ expresion PARDER PTCOMAasignacion : ID IGUAL expresion PTCOMA declaracion : TIPO lista_id PTCOMAdeclaracion : TIPO lista_id IGUAL expresion  PTCOMAlista_id    : lista_id COMA IDlista_id    : ID TIPO : INT \n                | FLOAT \n                | CHAR \n                | VOID expresion : primitiva \n                 | expresion_numerica \n                 | expresion_relacional\n                 | expresion_unaria\n                 | expresion_logica \n                 | expresion_bit_bit expresion_unaria   :   MENOS expresion %prec UMENOSexpresion_logica   : expresion AND expresion \n                          | expresion OR expresion\n                          | expresion XOR expresion expresion_logica   :   NOT expresion %prec NOTexpresion_bit_bit  : expresion PAND expresion \n                          | expresion BOR expresion\n                          | expresion XORR expresion \n                          | expresion SHIFTI expresion\n                          | expresion SHIFTD expresionexpresion_bit_bit   :   NOTR expresion %prec NOTRexpresion_relacional :   expresion MENQUE expresion \n                            |   expresion MAYQUE expresion \n                            |   expresion MEIQUE expresion\n                            |   expresion MAIQUE expresion\n                            |   expresion IGUALQUE expresion \n                            |   expresion NIGUALQUE expresion expresion_numerica   :   expresion MAS expresion \n                            |   expresion MENOS expresion \n                            |   expresion POR expresion\n                            |   expresion DIVIDIDO expresion\n                            |   expresion RESTO expresionprimitiva : ENTERO\n                 | DECIMAL\n                 | CADENA\n                 | CADENAR_CHAR\n                 | ID '
    
_lr_action_items = {'$end':([0,1,2,3,4,10,25,],[-5,0,-1,-2,-4,-3,-6,]),'INT':([0,2,4,10,12,15,16,17,18,19,20,25,26,28,49,73,93,],[6,6,-4,-3,6,6,-8,-9,-10,-11,-12,-6,-7,-15,-14,-16,-13,]),'FLOAT':([0,2,4,10,12,15,16,17,18,19,20,25,26,28,49,73,93,],[7,7,-4,-3,7,7,-8,-9,-10,-11,-12,-6,-7,-15,-14,-16,-13,]),'CHAR':([0,2,4,10,12,15,16,17,18,19,20,25,26,28,49,73,93,],[8,8,-4,-3,8,8,-8,-9,-10,-11,-12,-6,-7,-15,-14,-16,-13,]),'VOID':([0,2,4,10,12,15,16,17,18,19,20,25,26,28,49,73,93,],[9,9,-4,-3,9,9,-8,-9,-10,-11,-12,-6,-7,-15,-14,-16,-13,]),'ID':([5,6,7,8,9,12,13,15,16,17,18,19,20,24,26,27,28,29,30,43,44,45,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,93,],[11,-19,-20,-21,-22,14,23,14,-8,-9,-10,-11,-12,31,-7,31,-15,31,48,31,31,31,-14,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-16,-13,]),'LLAVIZQ':([11,],[12,]),'error':([12,15,16,17,18,19,20,26,28,49,73,93,],[20,20,-8,-9,-10,-11,-12,-7,-15,-14,-16,-13,]),'IMPRIMIR':([12,15,16,17,18,19,20,26,28,49,73,93,],[21,21,-8,-9,-10,-11,-12,-7,-15,-14,-16,-13,]),'IGUAL':([14,22,23,48,],[24,29,-18,-17,]),'LLAVDER':([15,16,17,18,19,20,26,28,49,73,93,],[25,-8,-9,-10,-11,-12,-7,-15,-14,-16,-13,]),'PARIZQ':([21,],[27,]),'PTCOMA':([22,23,31,32,33,34,35,36,37,38,39,40,41,42,47,48,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[28,-18,-55,49,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,73,-17,-29,-33,-39,93,-46,-47,-48,-49,-50,-40,-41,-42,-43,-44,-45,-30,-31,-32,-34,-35,-36,-37,-38,]),'COMA':([22,23,48,],[30,-18,-17,]),'ENTERO':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'DECIMAL':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'CADENA':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'CADENAR_CHAR':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'MENOS':([24,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[43,43,43,-55,51,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,43,43,43,51,51,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-29,-33,-39,-46,-47,-48,-49,-50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'NOT':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NOTR':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'MAS':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,50,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,50,50,-29,-33,-39,-46,-47,-48,-49,-50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'POR':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,52,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,52,52,-29,-33,-39,52,52,-48,-49,-50,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'DIVIDIDO':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,53,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,53,53,-29,-33,-39,53,53,-48,-49,-50,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'RESTO':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,54,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,54,54,-29,-33,-39,54,54,-48,-49,-50,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'MENQUE':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,55,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,55,55,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,55,55,55,55,55,55,55,55,-37,-38,]),'MAYQUE':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,56,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,56,56,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,56,56,56,56,56,56,56,56,-37,-38,]),'MEIQUE':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,57,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,57,57,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,57,57,57,57,57,57,57,57,-37,-38,]),'MAIQUE':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,58,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,58,58,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,58,58,58,58,58,58,58,58,-37,-38,]),'IGUALQUE':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,59,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,59,59,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,-44,-45,59,59,59,59,59,59,-37,-38,]),'NIGUALQUE':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,60,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,60,60,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,-44,-45,60,60,60,60,60,60,-37,-38,]),'AND':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,61,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,61,61,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,-44,-45,-30,61,61,-34,-35,-36,-37,-38,]),'OR':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,62,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,62,62,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,-44,-45,-30,-31,62,-34,-35,-36,-37,-38,]),'XOR':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,63,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,63,63,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,-44,-45,-30,-31,63,-34,-35,-36,-37,-38,]),'PAND':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,64,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,64,64,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,-44,-45,64,64,64,-34,64,64,-37,-38,]),'BOR':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,65,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,65,65,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,-44,-45,65,65,65,-34,-35,-36,-37,-38,]),'XORR':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,66,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,66,66,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,-44,-45,66,66,66,-34,66,-36,-37,-38,]),'SHIFTI':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,67,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,67,67,-29,-33,-39,-46,-47,-48,-49,-50,67,67,67,67,67,67,67,67,67,67,67,67,-37,-38,]),'SHIFTD':([31,32,33,34,35,36,37,38,39,40,41,42,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,68,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,68,68,-29,-33,-39,-46,-47,-48,-49,-50,68,68,68,68,68,68,68,68,68,68,68,68,-37,-38,]),'PARDER':([31,33,34,35,36,37,38,39,40,41,42,46,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,],[-55,-23,-24,-25,-26,-27,-28,-51,-52,-53,-54,72,-29,-33,-39,-46,-47,-48,-49,-50,-40,-41,-42,-43,-44,-45,-30,-31,-32,-34,-35,-36,-37,-38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'funciones':([0,],[2,]),'empty':([0,],[3,]),'funcion':([0,2,],[4,10,]),'TIPO':([0,2,12,15,],[5,5,13,13,]),'instrucciones':([12,],[15,]),'instruccion':([12,15,],[16,26,]),'imprimir_instr':([12,15,],[17,17,]),'asignacion':([12,15,],[18,18,]),'declaracion':([12,15,],[19,19,]),'lista_id':([13,],[22,]),'expresion':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[32,46,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,]),'primitiva':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'expresion_numerica':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'expresion_relacional':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'expresion_unaria':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expresion_logica':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'expresion_bit_bit':([24,27,29,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> funciones','init',1,'p_init','ascendente.py',234),
  ('init -> empty','init',1,'p_init_empty','ascendente.py',238),
  ('funciones -> funciones funcion','funciones',2,'p_etiquetas_lista','ascendente.py',243),
  ('funciones -> funcion','funciones',1,'p_etiquetas','ascendente.py',251),
  ('empty -> <empty>','empty',0,'p_empty','ascendente.py',258),
  ('funcion -> TIPO ID LLAVIZQ instrucciones LLAVDER','funcion',5,'p_etiqueta','ascendente.py',262),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','ascendente.py',271),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','ascendente.py',279),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','ascendente.py',286),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','ascendente.py',287),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','ascendente.py',288),
  ('instruccion -> error','instruccion',1,'p_instruccion','ascendente.py',289),
  ('imprimir_instr -> IMPRIMIR PARIZQ expresion PARDER PTCOMA','imprimir_instr',5,'p_instruccion_imprimir','ascendente.py',296),
  ('asignacion -> ID IGUAL expresion PTCOMA','asignacion',4,'p_asignacion','ascendente.py',304),
  ('declaracion -> TIPO lista_id PTCOMA','declaracion',3,'p_declaracion','ascendente.py',314),
  ('declaracion -> TIPO lista_id IGUAL expresion PTCOMA','declaracion',5,'p_declaracion_asigna','ascendente.py',321),
  ('lista_id -> lista_id COMA ID','lista_id',3,'p_lista','ascendente.py',328),
  ('lista_id -> ID','lista_id',1,'p_lista_id','ascendente.py',336),
  ('TIPO -> INT','TIPO',1,'p_tipo_dato','ascendente.py',343),
  ('TIPO -> FLOAT','TIPO',1,'p_tipo_dato','ascendente.py',344),
  ('TIPO -> CHAR','TIPO',1,'p_tipo_dato','ascendente.py',345),
  ('TIPO -> VOID','TIPO',1,'p_tipo_dato','ascendente.py',346),
  ('expresion -> primitiva','expresion',1,'p_expresion','ascendente.py',356),
  ('expresion -> expresion_numerica','expresion',1,'p_expresion','ascendente.py',357),
  ('expresion -> expresion_relacional','expresion',1,'p_expresion','ascendente.py',358),
  ('expresion -> expresion_unaria','expresion',1,'p_expresion','ascendente.py',359),
  ('expresion -> expresion_logica','expresion',1,'p_expresion','ascendente.py',360),
  ('expresion -> expresion_bit_bit','expresion',1,'p_expresion','ascendente.py',361),
  ('expresion_unaria -> MENOS expresion','expresion_unaria',2,'p_expresion_unaria','ascendente.py',370),
  ('expresion_logica -> expresion AND expresion','expresion_logica',3,'p_expresion_logica','ascendente.py',379),
  ('expresion_logica -> expresion OR expresion','expresion_logica',3,'p_expresion_logica','ascendente.py',380),
  ('expresion_logica -> expresion XOR expresion','expresion_logica',3,'p_expresion_logica','ascendente.py',381),
  ('expresion_logica -> NOT expresion','expresion_logica',2,'p_expresion_negacion','ascendente.py',402),
  ('expresion_bit_bit -> expresion PAND expresion','expresion_bit_bit',3,'p_expresion_bit_bit','ascendente.py',411),
  ('expresion_bit_bit -> expresion BOR expresion','expresion_bit_bit',3,'p_expresion_bit_bit','ascendente.py',412),
  ('expresion_bit_bit -> expresion XORR expresion','expresion_bit_bit',3,'p_expresion_bit_bit','ascendente.py',413),
  ('expresion_bit_bit -> expresion SHIFTI expresion','expresion_bit_bit',3,'p_expresion_bit_bit','ascendente.py',414),
  ('expresion_bit_bit -> expresion SHIFTD expresion','expresion_bit_bit',3,'p_expresion_bit_bit','ascendente.py',415),
  ('expresion_bit_bit -> NOTR expresion','expresion_bit_bit',2,'p_expresion_negacion_bit','ascendente.py',446),
  ('expresion_relacional -> expresion MENQUE expresion','expresion_relacional',3,'p_expresion_relacional','ascendente.py',455),
  ('expresion_relacional -> expresion MAYQUE expresion','expresion_relacional',3,'p_expresion_relacional','ascendente.py',456),
  ('expresion_relacional -> expresion MEIQUE expresion','expresion_relacional',3,'p_expresion_relacional','ascendente.py',457),
  ('expresion_relacional -> expresion MAIQUE expresion','expresion_relacional',3,'p_expresion_relacional','ascendente.py',458),
  ('expresion_relacional -> expresion IGUALQUE expresion','expresion_relacional',3,'p_expresion_relacional','ascendente.py',459),
  ('expresion_relacional -> expresion NIGUALQUE expresion','expresion_relacional',3,'p_expresion_relacional','ascendente.py',460),
  ('expresion_numerica -> expresion MAS expresion','expresion_numerica',3,'p_expresion_numerica','ascendente.py',495),
  ('expresion_numerica -> expresion MENOS expresion','expresion_numerica',3,'p_expresion_numerica','ascendente.py',496),
  ('expresion_numerica -> expresion POR expresion','expresion_numerica',3,'p_expresion_numerica','ascendente.py',497),
  ('expresion_numerica -> expresion DIVIDIDO expresion','expresion_numerica',3,'p_expresion_numerica','ascendente.py',498),
  ('expresion_numerica -> expresion RESTO expresion','expresion_numerica',3,'p_expresion_numerica','ascendente.py',499),
  ('primitiva -> ENTERO','primitiva',1,'p_expresion_primitiva','ascendente.py',532),
  ('primitiva -> DECIMAL','primitiva',1,'p_expresion_primitiva','ascendente.py',533),
  ('primitiva -> CADENA','primitiva',1,'p_expresion_primitiva','ascendente.py',534),
  ('primitiva -> CADENAR_CHAR','primitiva',1,'p_expresion_primitiva','ascendente.py',535),
  ('primitiva -> ID','primitiva',1,'p_expresion_primitiva','ascendente.py',536),
]
