Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORDER
    CORIZQ
    UNARIO

Grammar

Rule 0     S' -> init
Rule 1     init -> globales
Rule 2     init -> empty
Rule 3     globales -> globales iglobal
Rule 4     globales -> iglobal
Rule 5     iglobal -> funcion
Rule 6     iglobal -> declaracion PTCOMA
Rule 7     iglobal -> definicion_struct
Rule 8     definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA
Rule 9     declaraciones -> declaraciones declaracion PTCOMA
Rule 10    declaraciones -> declaracion PTCOMA
Rule 11    empty -> <empty>
Rule 12    funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
Rule 13    funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
Rule 14    parametros -> parametros COMA parametro
Rule 15    parametros -> parametro
Rule 16    parametro -> TIPO ID
Rule 17    instrucciones -> instrucciones instruccion
Rule 18    instrucciones -> instruccion
Rule 19    instruccion -> imprimir_instr
Rule 20    instruccion -> asignacion PTCOMA
Rule 21    instruccion -> declaracion PTCOMA
Rule 22    instruccion -> sentencia_if
Rule 23    instruccion -> sentencia_switch
Rule 24    instruccion -> ins_break
Rule 25    instruccion -> ins_scan
Rule 26    instruccion -> ins_while
Rule 27    instruccion -> ins_for
Rule 28    instruccion -> ins_continue
Rule 29    instruccion -> ins_etiqueta
Rule 30    instruccion -> ins_goto
Rule 31    instruccion -> declaracion_struct PTCOMA
Rule 32    instruccion -> error
Rule 33    declaracion_struct -> ID lista_id
Rule 34    asignacion -> acceso_struct IGUAL expresion
Rule 35    acceso_struct -> ID PUNTO ID
Rule 36    ins_etiqueta -> ID DOSP
Rule 37    ins_goto -> GOTO ID PTCOMA
Rule 38    ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
Rule 39    instruccion_for -> asignacion
Rule 40    instruccion_for -> declaracion
Rule 41    ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 42    ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
Rule 43    ins_continue -> CONTINUE PTCOMA
Rule 44    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
Rule 45    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
Rule 46    lista_case -> lista_case caso
Rule 47    lista_case -> caso
Rule 48    caso -> CASE expresion DOSP instrucciones
Rule 49    caso -> CASE expresion DOSP
Rule 50    default_ins -> DEFAULT DOSP instrucciones
Rule 51    default_ins -> DEFAULT DOSP
Rule 52    ins_break -> BREAK PTCOMA
Rule 53    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 54    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 55    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
Rule 56    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
Rule 57    lelseif -> lelseif elseif
Rule 58    lelseif -> elseif
Rule 59    elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 60    ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
Rule 61    imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
Rule 62    imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA
Rule 63    asignacion -> ID IGUAL expresion
Rule 64    asignacion -> ID MAS MAS
Rule 65    asignacion -> ID MENOS MENOS
Rule 66    asignacion -> ID ASUMA expresion
Rule 67    asignacion -> ID ARESTA expresion
Rule 68    asignacion -> ID MULTIPLICATIVA expresion
Rule 69    asignacion -> ID DIVIDIDA expresion
Rule 70    asignacion -> ID ARESTO expresion
Rule 71    asignacion -> ID ABOR expresion
Rule 72    asignacion -> ID APAND expresion
Rule 73    asignacion -> ID ASHIFTD expresion
Rule 74    asignacion -> ID ASHIFTI expresion
Rule 75    asignacion -> ID AXORR expresion
Rule 76    declaracion -> TIPO lista_id
Rule 77    declaracion -> TIPO lista_id IGUAL expresion
Rule 78    lista_id -> lista_id COMA ID
Rule 79    lista_id -> ID
Rule 80    TIPO -> INT
Rule 81    TIPO -> FLOAT
Rule 82    TIPO -> CHAR
Rule 83    TIPO -> DOOBLE
Rule 84    TIPO -> VOID
Rule 85    expresiones -> expresiones COMA expresion
Rule 86    expresiones -> expresion
Rule 87    expresion -> primitiva
Rule 88    expresion -> expresion_numerica
Rule 89    expresion -> expresion_relacional
Rule 90    expresion -> expresion_unaria
Rule 91    expresion -> expresion_logica
Rule 92    expresion -> expresion_bit_bit
Rule 93    expresion -> PARIZQ expresion PARDER
Rule 94    expresion_unaria -> MENOS expresion
Rule 95    expresion_logica -> expresion AND expresion
Rule 96    expresion_logica -> expresion OR expresion
Rule 97    expresion_logica -> expresion XOR expresion
Rule 98    expresion_logica -> NOT expresion
Rule 99    expresion_bit_bit -> expresion PAND expresion
Rule 100   expresion_bit_bit -> expresion BOR expresion
Rule 101   expresion_bit_bit -> expresion XORR expresion
Rule 102   expresion_bit_bit -> expresion SHIFTI expresion
Rule 103   expresion_bit_bit -> expresion SHIFTD expresion
Rule 104   expresion_bit_bit -> NOTR expresion
Rule 105   expresion_relacional -> expresion MENQUE expresion
Rule 106   expresion_relacional -> expresion MAYQUE expresion
Rule 107   expresion_relacional -> expresion MEIQUE expresion
Rule 108   expresion_relacional -> expresion MAIQUE expresion
Rule 109   expresion_relacional -> expresion IGUALQUE expresion
Rule 110   expresion_relacional -> expresion NIGUALQUE expresion
Rule 111   expresion_numerica -> expresion MAS expresion
Rule 112   expresion_numerica -> expresion MENOS expresion
Rule 113   expresion_numerica -> expresion POR expresion
Rule 114   expresion_numerica -> expresion DIVIDIDO expresion
Rule 115   expresion_numerica -> expresion RESTO expresion
Rule 116   primitiva -> ENTERO
Rule 117   primitiva -> DECIMAL
Rule 118   primitiva -> CADENA
Rule 119   primitiva -> CADENAR_CHAR
Rule 120   primitiva -> ID
Rule 121   primitiva -> acceso_struct

Terminals, with rules where they appear

ABOR                 : 71
AND                  : 95
APAND                : 72
ARESTA               : 67
ARESTO               : 70
ASHIFTD              : 73
ASHIFTI              : 74
ASUMA                : 66
AXORR                : 75
BOR                  : 100
BREAK                : 52
CADENA               : 60 61 62 118
CADENAR_CHAR         : 119
CASE                 : 48 49
CHAR                 : 82
COMA                 : 14 60 61 78 85
CONTINUE             : 43
CORDER               : 
CORIZQ               : 
DECIMAL              : 117
DEFAULT              : 50 51
DIVIDIDA             : 69
DIVIDIDO             : 114
DO                   : 42
DOOBLE               : 83
DOSP                 : 36 48 49 50 51
ELSE                 : 54 55 59
ENTERO               : 116
FLOAT                : 81
FOR                  : 38
GOTO                 : 37
ID                   : 8 12 13 16 33 35 35 36 37 60 63 64 65 66 67 68 69 70 71 72 73 74 75 78 79 120
IF                   : 53 54 55 56 59
IGUAL                : 34 63 77
IGUALQUE             : 109
IMPRIMIR             : 61 62
INT                  : 80
LLAVDER              : 12 13 38 41 42 44 45 53 54 54 55 55 56 59
LLAVIZQ              : 12 13 38 41 42 44 45 53 54 54 55 55 56 59
MAIQUE               : 108
MAS                  : 64 64 111
MAYQUE               : 106
MEIQUE               : 107
MENOS                : 65 65 94 112
MENQUE               : 105
MULTIPLICATIVA       : 68
NIGUALQUE            : 110
NOT                  : 98
NOTR                 : 104
OR                   : 96
PAND                 : 60 99
PARDER               : 8 12 13 38 41 42 44 45 53 54 55 56 59 60 61 62 93
PARIZQ               : 8 12 13 38 41 42 44 45 53 54 55 56 59 60 61 62 93
POR                  : 113
PTCOMA               : 6 8 9 10 20 21 31 37 38 38 42 43 52 60 61 62
PUNTO                : 35
RESTO                : 115
SCAN                 : 60
SHIFTD               : 103
SHIFTI               : 102
STRUCT               : 8
SWITCH               : 44 45
UNARIO               : 
VOID                 : 84
WHILE                : 41 42
XOR                  : 97
XORR                 : 101
error                : 32

Nonterminals, with rules where they appear

TIPO                 : 12 13 16 76 77
acceso_struct        : 34 121
asignacion           : 20 38 39
caso                 : 46 47
declaracion          : 6 9 10 21 40
declaracion_struct   : 31
declaraciones        : 8 9
default_ins          : 44
definicion_struct    : 7
elseif               : 57 58
empty                : 2
expresion            : 34 38 41 42 44 45 48 49 53 54 55 56 59 63 66 67 68 69 70 71 72 73 74 75 77 85 86 93 94 95 95 96 96 97 97 98 99 99 100 100 101 101 102 102 103 103 104 105 105 106 106 107 107 108 108 109 109 110 110 111 111 112 112 113 113 114 114 115 115
expresion_bit_bit    : 92
expresion_logica     : 91
expresion_numerica   : 88
expresion_relacional : 89
expresion_unaria     : 90
expresiones          : 61 85
funcion              : 5
globales             : 1 3
iglobal              : 3 4
imprimir_instr       : 19
init                 : 0
ins_break            : 24
ins_continue         : 28
ins_etiqueta         : 29
ins_for              : 27
ins_goto             : 30
ins_scan             : 25
ins_while            : 26
instruccion          : 17 18
instruccion_for      : 38
instrucciones        : 12 13 17 38 41 42 48 50 53 54 54 55 55 56 59
lelseif              : 55 56 57
lista_case           : 44 45 46
lista_id             : 33 76 77 78
parametro            : 14 15
parametros           : 13 14
primitiva            : 87
sentencia_if         : 22
sentencia_switch     : 23

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . globales
    (2) init -> . empty
    (3) globales -> . globales iglobal
    (4) globales -> . iglobal
    (11) empty -> .
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion PTCOMA
    (7) iglobal -> . definicion_struct
    (12) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (8) definicion_struct -> . STRUCT ID PARIZQ declaraciones PARDER PTCOMA
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    $end            reduce using rule 11 (empty -> .)
    STRUCT          shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    init                           shift and go to state 1
    globales                       shift and go to state 2
    empty                          shift and go to state 3
    iglobal                        shift and go to state 4
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    definicion_struct              shift and go to state 7
    TIPO                           shift and go to state 8

state 1

    (0) S' -> init .



state 2

    (1) init -> globales .
    (3) globales -> globales . iglobal
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion PTCOMA
    (7) iglobal -> . definicion_struct
    (12) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (8) definicion_struct -> . STRUCT ID PARIZQ declaraciones PARDER PTCOMA
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    $end            reduce using rule 1 (init -> globales .)
    STRUCT          shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    iglobal                        shift and go to state 15
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    definicion_struct              shift and go to state 7
    TIPO                           shift and go to state 8

state 3

    (2) init -> empty .

    $end            reduce using rule 2 (init -> empty .)


state 4

    (4) globales -> iglobal .

    STRUCT          reduce using rule 4 (globales -> iglobal .)
    INT             reduce using rule 4 (globales -> iglobal .)
    FLOAT           reduce using rule 4 (globales -> iglobal .)
    CHAR            reduce using rule 4 (globales -> iglobal .)
    DOOBLE          reduce using rule 4 (globales -> iglobal .)
    VOID            reduce using rule 4 (globales -> iglobal .)
    $end            reduce using rule 4 (globales -> iglobal .)


state 5

    (5) iglobal -> funcion .

    STRUCT          reduce using rule 5 (iglobal -> funcion .)
    INT             reduce using rule 5 (iglobal -> funcion .)
    FLOAT           reduce using rule 5 (iglobal -> funcion .)
    CHAR            reduce using rule 5 (iglobal -> funcion .)
    DOOBLE          reduce using rule 5 (iglobal -> funcion .)
    VOID            reduce using rule 5 (iglobal -> funcion .)
    $end            reduce using rule 5 (iglobal -> funcion .)


state 6

    (6) iglobal -> declaracion . PTCOMA

    PTCOMA          shift and go to state 16


state 7

    (7) iglobal -> definicion_struct .

    STRUCT          reduce using rule 7 (iglobal -> definicion_struct .)
    INT             reduce using rule 7 (iglobal -> definicion_struct .)
    FLOAT           reduce using rule 7 (iglobal -> definicion_struct .)
    CHAR            reduce using rule 7 (iglobal -> definicion_struct .)
    DOOBLE          reduce using rule 7 (iglobal -> definicion_struct .)
    VOID            reduce using rule 7 (iglobal -> definicion_struct .)
    $end            reduce using rule 7 (iglobal -> definicion_struct .)


state 8

    (12) funcion -> TIPO . ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO . ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (76) declaracion -> TIPO . lista_id
    (77) declaracion -> TIPO . lista_id IGUAL expresion
    (78) lista_id -> . lista_id COMA ID
    (79) lista_id -> . ID

    ID              shift and go to state 17

    lista_id                       shift and go to state 18

state 9

    (8) definicion_struct -> STRUCT . ID PARIZQ declaraciones PARDER PTCOMA

    ID              shift and go to state 19


state 10

    (80) TIPO -> INT .

    ID              reduce using rule 80 (TIPO -> INT .)


state 11

    (81) TIPO -> FLOAT .

    ID              reduce using rule 81 (TIPO -> FLOAT .)


state 12

    (82) TIPO -> CHAR .

    ID              reduce using rule 82 (TIPO -> CHAR .)


state 13

    (83) TIPO -> DOOBLE .

    ID              reduce using rule 83 (TIPO -> DOOBLE .)


state 14

    (84) TIPO -> VOID .

    ID              reduce using rule 84 (TIPO -> VOID .)


state 15

    (3) globales -> globales iglobal .

    STRUCT          reduce using rule 3 (globales -> globales iglobal .)
    INT             reduce using rule 3 (globales -> globales iglobal .)
    FLOAT           reduce using rule 3 (globales -> globales iglobal .)
    CHAR            reduce using rule 3 (globales -> globales iglobal .)
    DOOBLE          reduce using rule 3 (globales -> globales iglobal .)
    VOID            reduce using rule 3 (globales -> globales iglobal .)
    $end            reduce using rule 3 (globales -> globales iglobal .)


state 16

    (6) iglobal -> declaracion PTCOMA .

    STRUCT          reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    INT             reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    FLOAT           reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    CHAR            reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    VOID            reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    $end            reduce using rule 6 (iglobal -> declaracion PTCOMA .)


state 17

    (12) funcion -> TIPO ID . PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO ID . PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (79) lista_id -> ID .

    PARIZQ          shift and go to state 20
    IGUAL           reduce using rule 79 (lista_id -> ID .)
    COMA            reduce using rule 79 (lista_id -> ID .)
    PTCOMA          reduce using rule 79 (lista_id -> ID .)


state 18

    (76) declaracion -> TIPO lista_id .
    (77) declaracion -> TIPO lista_id . IGUAL expresion
    (78) lista_id -> lista_id . COMA ID

    PTCOMA          reduce using rule 76 (declaracion -> TIPO lista_id .)
    IGUAL           shift and go to state 21
    COMA            shift and go to state 22


state 19

    (8) definicion_struct -> STRUCT ID . PARIZQ declaraciones PARDER PTCOMA

    PARIZQ          shift and go to state 23


state 20

    (12) funcion -> TIPO ID PARIZQ . PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO ID PARIZQ . parametros PARDER LLAVIZQ instrucciones LLAVDER
    (14) parametros -> . parametros COMA parametro
    (15) parametros -> . parametro
    (16) parametro -> . TIPO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    PARDER          shift and go to state 25
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 24
    parametros                     shift and go to state 26
    parametro                      shift and go to state 27

state 21

    (77) declaracion -> TIPO lista_id IGUAL . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 28
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 22

    (78) lista_id -> lista_id COMA . ID

    ID              shift and go to state 45


state 23

    (8) definicion_struct -> STRUCT ID PARIZQ . declaraciones PARDER PTCOMA
    (9) declaraciones -> . declaraciones declaracion PTCOMA
    (10) declaraciones -> . declaracion PTCOMA
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    declaraciones                  shift and go to state 46
    declaracion                    shift and go to state 47
    TIPO                           shift and go to state 48

state 24

    (16) parametro -> TIPO . ID

    ID              shift and go to state 49


state 25

    (12) funcion -> TIPO ID PARIZQ PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 50


state 26

    (13) funcion -> TIPO ID PARIZQ parametros . PARDER LLAVIZQ instrucciones LLAVDER
    (14) parametros -> parametros . COMA parametro

    PARDER          shift and go to state 51
    COMA            shift and go to state 52


state 27

    (15) parametros -> parametro .

    PARDER          reduce using rule 15 (parametros -> parametro .)
    COMA            reduce using rule 15 (parametros -> parametro .)


state 28

    (77) declaracion -> TIPO lista_id IGUAL expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 77 (declaracion -> TIPO lista_id IGUAL expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 29

    (87) expresion -> primitiva .

    MAS             reduce using rule 87 (expresion -> primitiva .)
    MENOS           reduce using rule 87 (expresion -> primitiva .)
    POR             reduce using rule 87 (expresion -> primitiva .)
    DIVIDIDO        reduce using rule 87 (expresion -> primitiva .)
    RESTO           reduce using rule 87 (expresion -> primitiva .)
    MENQUE          reduce using rule 87 (expresion -> primitiva .)
    MAYQUE          reduce using rule 87 (expresion -> primitiva .)
    MEIQUE          reduce using rule 87 (expresion -> primitiva .)
    MAIQUE          reduce using rule 87 (expresion -> primitiva .)
    IGUALQUE        reduce using rule 87 (expresion -> primitiva .)
    NIGUALQUE       reduce using rule 87 (expresion -> primitiva .)
    AND             reduce using rule 87 (expresion -> primitiva .)
    OR              reduce using rule 87 (expresion -> primitiva .)
    XOR             reduce using rule 87 (expresion -> primitiva .)
    PAND            reduce using rule 87 (expresion -> primitiva .)
    BOR             reduce using rule 87 (expresion -> primitiva .)
    XORR            reduce using rule 87 (expresion -> primitiva .)
    SHIFTI          reduce using rule 87 (expresion -> primitiva .)
    SHIFTD          reduce using rule 87 (expresion -> primitiva .)
    PTCOMA          reduce using rule 87 (expresion -> primitiva .)
    PARDER          reduce using rule 87 (expresion -> primitiva .)
    COMA            reduce using rule 87 (expresion -> primitiva .)
    DOSP            reduce using rule 87 (expresion -> primitiva .)


state 30

    (88) expresion -> expresion_numerica .

    MAS             reduce using rule 88 (expresion -> expresion_numerica .)
    MENOS           reduce using rule 88 (expresion -> expresion_numerica .)
    POR             reduce using rule 88 (expresion -> expresion_numerica .)
    DIVIDIDO        reduce using rule 88 (expresion -> expresion_numerica .)
    RESTO           reduce using rule 88 (expresion -> expresion_numerica .)
    MENQUE          reduce using rule 88 (expresion -> expresion_numerica .)
    MAYQUE          reduce using rule 88 (expresion -> expresion_numerica .)
    MEIQUE          reduce using rule 88 (expresion -> expresion_numerica .)
    MAIQUE          reduce using rule 88 (expresion -> expresion_numerica .)
    IGUALQUE        reduce using rule 88 (expresion -> expresion_numerica .)
    NIGUALQUE       reduce using rule 88 (expresion -> expresion_numerica .)
    AND             reduce using rule 88 (expresion -> expresion_numerica .)
    OR              reduce using rule 88 (expresion -> expresion_numerica .)
    XOR             reduce using rule 88 (expresion -> expresion_numerica .)
    PAND            reduce using rule 88 (expresion -> expresion_numerica .)
    BOR             reduce using rule 88 (expresion -> expresion_numerica .)
    XORR            reduce using rule 88 (expresion -> expresion_numerica .)
    SHIFTI          reduce using rule 88 (expresion -> expresion_numerica .)
    SHIFTD          reduce using rule 88 (expresion -> expresion_numerica .)
    PTCOMA          reduce using rule 88 (expresion -> expresion_numerica .)
    PARDER          reduce using rule 88 (expresion -> expresion_numerica .)
    COMA            reduce using rule 88 (expresion -> expresion_numerica .)
    DOSP            reduce using rule 88 (expresion -> expresion_numerica .)


state 31

    (89) expresion -> expresion_relacional .

    MAS             reduce using rule 89 (expresion -> expresion_relacional .)
    MENOS           reduce using rule 89 (expresion -> expresion_relacional .)
    POR             reduce using rule 89 (expresion -> expresion_relacional .)
    DIVIDIDO        reduce using rule 89 (expresion -> expresion_relacional .)
    RESTO           reduce using rule 89 (expresion -> expresion_relacional .)
    MENQUE          reduce using rule 89 (expresion -> expresion_relacional .)
    MAYQUE          reduce using rule 89 (expresion -> expresion_relacional .)
    MEIQUE          reduce using rule 89 (expresion -> expresion_relacional .)
    MAIQUE          reduce using rule 89 (expresion -> expresion_relacional .)
    IGUALQUE        reduce using rule 89 (expresion -> expresion_relacional .)
    NIGUALQUE       reduce using rule 89 (expresion -> expresion_relacional .)
    AND             reduce using rule 89 (expresion -> expresion_relacional .)
    OR              reduce using rule 89 (expresion -> expresion_relacional .)
    XOR             reduce using rule 89 (expresion -> expresion_relacional .)
    PAND            reduce using rule 89 (expresion -> expresion_relacional .)
    BOR             reduce using rule 89 (expresion -> expresion_relacional .)
    XORR            reduce using rule 89 (expresion -> expresion_relacional .)
    SHIFTI          reduce using rule 89 (expresion -> expresion_relacional .)
    SHIFTD          reduce using rule 89 (expresion -> expresion_relacional .)
    PTCOMA          reduce using rule 89 (expresion -> expresion_relacional .)
    PARDER          reduce using rule 89 (expresion -> expresion_relacional .)
    COMA            reduce using rule 89 (expresion -> expresion_relacional .)
    DOSP            reduce using rule 89 (expresion -> expresion_relacional .)


state 32

    (90) expresion -> expresion_unaria .

    MAS             reduce using rule 90 (expresion -> expresion_unaria .)
    MENOS           reduce using rule 90 (expresion -> expresion_unaria .)
    POR             reduce using rule 90 (expresion -> expresion_unaria .)
    DIVIDIDO        reduce using rule 90 (expresion -> expresion_unaria .)
    RESTO           reduce using rule 90 (expresion -> expresion_unaria .)
    MENQUE          reduce using rule 90 (expresion -> expresion_unaria .)
    MAYQUE          reduce using rule 90 (expresion -> expresion_unaria .)
    MEIQUE          reduce using rule 90 (expresion -> expresion_unaria .)
    MAIQUE          reduce using rule 90 (expresion -> expresion_unaria .)
    IGUALQUE        reduce using rule 90 (expresion -> expresion_unaria .)
    NIGUALQUE       reduce using rule 90 (expresion -> expresion_unaria .)
    AND             reduce using rule 90 (expresion -> expresion_unaria .)
    OR              reduce using rule 90 (expresion -> expresion_unaria .)
    XOR             reduce using rule 90 (expresion -> expresion_unaria .)
    PAND            reduce using rule 90 (expresion -> expresion_unaria .)
    BOR             reduce using rule 90 (expresion -> expresion_unaria .)
    XORR            reduce using rule 90 (expresion -> expresion_unaria .)
    SHIFTI          reduce using rule 90 (expresion -> expresion_unaria .)
    SHIFTD          reduce using rule 90 (expresion -> expresion_unaria .)
    PTCOMA          reduce using rule 90 (expresion -> expresion_unaria .)
    PARDER          reduce using rule 90 (expresion -> expresion_unaria .)
    COMA            reduce using rule 90 (expresion -> expresion_unaria .)
    DOSP            reduce using rule 90 (expresion -> expresion_unaria .)


state 33

    (91) expresion -> expresion_logica .

    MAS             reduce using rule 91 (expresion -> expresion_logica .)
    MENOS           reduce using rule 91 (expresion -> expresion_logica .)
    POR             reduce using rule 91 (expresion -> expresion_logica .)
    DIVIDIDO        reduce using rule 91 (expresion -> expresion_logica .)
    RESTO           reduce using rule 91 (expresion -> expresion_logica .)
    MENQUE          reduce using rule 91 (expresion -> expresion_logica .)
    MAYQUE          reduce using rule 91 (expresion -> expresion_logica .)
    MEIQUE          reduce using rule 91 (expresion -> expresion_logica .)
    MAIQUE          reduce using rule 91 (expresion -> expresion_logica .)
    IGUALQUE        reduce using rule 91 (expresion -> expresion_logica .)
    NIGUALQUE       reduce using rule 91 (expresion -> expresion_logica .)
    AND             reduce using rule 91 (expresion -> expresion_logica .)
    OR              reduce using rule 91 (expresion -> expresion_logica .)
    XOR             reduce using rule 91 (expresion -> expresion_logica .)
    PAND            reduce using rule 91 (expresion -> expresion_logica .)
    BOR             reduce using rule 91 (expresion -> expresion_logica .)
    XORR            reduce using rule 91 (expresion -> expresion_logica .)
    SHIFTI          reduce using rule 91 (expresion -> expresion_logica .)
    SHIFTD          reduce using rule 91 (expresion -> expresion_logica .)
    PTCOMA          reduce using rule 91 (expresion -> expresion_logica .)
    PARDER          reduce using rule 91 (expresion -> expresion_logica .)
    COMA            reduce using rule 91 (expresion -> expresion_logica .)
    DOSP            reduce using rule 91 (expresion -> expresion_logica .)


state 34

    (92) expresion -> expresion_bit_bit .

    MAS             reduce using rule 92 (expresion -> expresion_bit_bit .)
    MENOS           reduce using rule 92 (expresion -> expresion_bit_bit .)
    POR             reduce using rule 92 (expresion -> expresion_bit_bit .)
    DIVIDIDO        reduce using rule 92 (expresion -> expresion_bit_bit .)
    RESTO           reduce using rule 92 (expresion -> expresion_bit_bit .)
    MENQUE          reduce using rule 92 (expresion -> expresion_bit_bit .)
    MAYQUE          reduce using rule 92 (expresion -> expresion_bit_bit .)
    MEIQUE          reduce using rule 92 (expresion -> expresion_bit_bit .)
    MAIQUE          reduce using rule 92 (expresion -> expresion_bit_bit .)
    IGUALQUE        reduce using rule 92 (expresion -> expresion_bit_bit .)
    NIGUALQUE       reduce using rule 92 (expresion -> expresion_bit_bit .)
    AND             reduce using rule 92 (expresion -> expresion_bit_bit .)
    OR              reduce using rule 92 (expresion -> expresion_bit_bit .)
    XOR             reduce using rule 92 (expresion -> expresion_bit_bit .)
    PAND            reduce using rule 92 (expresion -> expresion_bit_bit .)
    BOR             reduce using rule 92 (expresion -> expresion_bit_bit .)
    XORR            reduce using rule 92 (expresion -> expresion_bit_bit .)
    SHIFTI          reduce using rule 92 (expresion -> expresion_bit_bit .)
    SHIFTD          reduce using rule 92 (expresion -> expresion_bit_bit .)
    PTCOMA          reduce using rule 92 (expresion -> expresion_bit_bit .)
    PARDER          reduce using rule 92 (expresion -> expresion_bit_bit .)
    COMA            reduce using rule 92 (expresion -> expresion_bit_bit .)
    DOSP            reduce using rule 92 (expresion -> expresion_bit_bit .)


state 35

    (93) expresion -> PARIZQ . expresion PARDER
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 72
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 36

    (116) primitiva -> ENTERO .

    MAS             reduce using rule 116 (primitiva -> ENTERO .)
    MENOS           reduce using rule 116 (primitiva -> ENTERO .)
    POR             reduce using rule 116 (primitiva -> ENTERO .)
    DIVIDIDO        reduce using rule 116 (primitiva -> ENTERO .)
    RESTO           reduce using rule 116 (primitiva -> ENTERO .)
    MENQUE          reduce using rule 116 (primitiva -> ENTERO .)
    MAYQUE          reduce using rule 116 (primitiva -> ENTERO .)
    MEIQUE          reduce using rule 116 (primitiva -> ENTERO .)
    MAIQUE          reduce using rule 116 (primitiva -> ENTERO .)
    IGUALQUE        reduce using rule 116 (primitiva -> ENTERO .)
    NIGUALQUE       reduce using rule 116 (primitiva -> ENTERO .)
    AND             reduce using rule 116 (primitiva -> ENTERO .)
    OR              reduce using rule 116 (primitiva -> ENTERO .)
    XOR             reduce using rule 116 (primitiva -> ENTERO .)
    PAND            reduce using rule 116 (primitiva -> ENTERO .)
    BOR             reduce using rule 116 (primitiva -> ENTERO .)
    XORR            reduce using rule 116 (primitiva -> ENTERO .)
    SHIFTI          reduce using rule 116 (primitiva -> ENTERO .)
    SHIFTD          reduce using rule 116 (primitiva -> ENTERO .)
    PTCOMA          reduce using rule 116 (primitiva -> ENTERO .)
    PARDER          reduce using rule 116 (primitiva -> ENTERO .)
    COMA            reduce using rule 116 (primitiva -> ENTERO .)
    DOSP            reduce using rule 116 (primitiva -> ENTERO .)


state 37

    (117) primitiva -> DECIMAL .

    MAS             reduce using rule 117 (primitiva -> DECIMAL .)
    MENOS           reduce using rule 117 (primitiva -> DECIMAL .)
    POR             reduce using rule 117 (primitiva -> DECIMAL .)
    DIVIDIDO        reduce using rule 117 (primitiva -> DECIMAL .)
    RESTO           reduce using rule 117 (primitiva -> DECIMAL .)
    MENQUE          reduce using rule 117 (primitiva -> DECIMAL .)
    MAYQUE          reduce using rule 117 (primitiva -> DECIMAL .)
    MEIQUE          reduce using rule 117 (primitiva -> DECIMAL .)
    MAIQUE          reduce using rule 117 (primitiva -> DECIMAL .)
    IGUALQUE        reduce using rule 117 (primitiva -> DECIMAL .)
    NIGUALQUE       reduce using rule 117 (primitiva -> DECIMAL .)
    AND             reduce using rule 117 (primitiva -> DECIMAL .)
    OR              reduce using rule 117 (primitiva -> DECIMAL .)
    XOR             reduce using rule 117 (primitiva -> DECIMAL .)
    PAND            reduce using rule 117 (primitiva -> DECIMAL .)
    BOR             reduce using rule 117 (primitiva -> DECIMAL .)
    XORR            reduce using rule 117 (primitiva -> DECIMAL .)
    SHIFTI          reduce using rule 117 (primitiva -> DECIMAL .)
    SHIFTD          reduce using rule 117 (primitiva -> DECIMAL .)
    PTCOMA          reduce using rule 117 (primitiva -> DECIMAL .)
    PARDER          reduce using rule 117 (primitiva -> DECIMAL .)
    COMA            reduce using rule 117 (primitiva -> DECIMAL .)
    DOSP            reduce using rule 117 (primitiva -> DECIMAL .)


state 38

    (118) primitiva -> CADENA .

    MAS             reduce using rule 118 (primitiva -> CADENA .)
    MENOS           reduce using rule 118 (primitiva -> CADENA .)
    POR             reduce using rule 118 (primitiva -> CADENA .)
    DIVIDIDO        reduce using rule 118 (primitiva -> CADENA .)
    RESTO           reduce using rule 118 (primitiva -> CADENA .)
    MENQUE          reduce using rule 118 (primitiva -> CADENA .)
    MAYQUE          reduce using rule 118 (primitiva -> CADENA .)
    MEIQUE          reduce using rule 118 (primitiva -> CADENA .)
    MAIQUE          reduce using rule 118 (primitiva -> CADENA .)
    IGUALQUE        reduce using rule 118 (primitiva -> CADENA .)
    NIGUALQUE       reduce using rule 118 (primitiva -> CADENA .)
    AND             reduce using rule 118 (primitiva -> CADENA .)
    OR              reduce using rule 118 (primitiva -> CADENA .)
    XOR             reduce using rule 118 (primitiva -> CADENA .)
    PAND            reduce using rule 118 (primitiva -> CADENA .)
    BOR             reduce using rule 118 (primitiva -> CADENA .)
    XORR            reduce using rule 118 (primitiva -> CADENA .)
    SHIFTI          reduce using rule 118 (primitiva -> CADENA .)
    SHIFTD          reduce using rule 118 (primitiva -> CADENA .)
    PTCOMA          reduce using rule 118 (primitiva -> CADENA .)
    PARDER          reduce using rule 118 (primitiva -> CADENA .)
    COMA            reduce using rule 118 (primitiva -> CADENA .)
    DOSP            reduce using rule 118 (primitiva -> CADENA .)


state 39

    (119) primitiva -> CADENAR_CHAR .

    MAS             reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    MENOS           reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    POR             reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    DIVIDIDO        reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    RESTO           reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    MENQUE          reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    MAYQUE          reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    MEIQUE          reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    MAIQUE          reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    IGUALQUE        reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    NIGUALQUE       reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    AND             reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    OR              reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    XOR             reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    PAND            reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    BOR             reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    XORR            reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    SHIFTI          reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    SHIFTD          reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    PTCOMA          reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    PARDER          reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    COMA            reduce using rule 119 (primitiva -> CADENAR_CHAR .)
    DOSP            reduce using rule 119 (primitiva -> CADENAR_CHAR .)


state 40

    (120) primitiva -> ID .
    (35) acceso_struct -> ID . PUNTO ID

    MAS             reduce using rule 120 (primitiva -> ID .)
    MENOS           reduce using rule 120 (primitiva -> ID .)
    POR             reduce using rule 120 (primitiva -> ID .)
    DIVIDIDO        reduce using rule 120 (primitiva -> ID .)
    RESTO           reduce using rule 120 (primitiva -> ID .)
    MENQUE          reduce using rule 120 (primitiva -> ID .)
    MAYQUE          reduce using rule 120 (primitiva -> ID .)
    MEIQUE          reduce using rule 120 (primitiva -> ID .)
    MAIQUE          reduce using rule 120 (primitiva -> ID .)
    IGUALQUE        reduce using rule 120 (primitiva -> ID .)
    NIGUALQUE       reduce using rule 120 (primitiva -> ID .)
    AND             reduce using rule 120 (primitiva -> ID .)
    OR              reduce using rule 120 (primitiva -> ID .)
    XOR             reduce using rule 120 (primitiva -> ID .)
    PAND            reduce using rule 120 (primitiva -> ID .)
    BOR             reduce using rule 120 (primitiva -> ID .)
    XORR            reduce using rule 120 (primitiva -> ID .)
    SHIFTI          reduce using rule 120 (primitiva -> ID .)
    SHIFTD          reduce using rule 120 (primitiva -> ID .)
    PTCOMA          reduce using rule 120 (primitiva -> ID .)
    PARDER          reduce using rule 120 (primitiva -> ID .)
    COMA            reduce using rule 120 (primitiva -> ID .)
    DOSP            reduce using rule 120 (primitiva -> ID .)
    PUNTO           shift and go to state 73


state 41

    (121) primitiva -> acceso_struct .

    MAS             reduce using rule 121 (primitiva -> acceso_struct .)
    MENOS           reduce using rule 121 (primitiva -> acceso_struct .)
    POR             reduce using rule 121 (primitiva -> acceso_struct .)
    DIVIDIDO        reduce using rule 121 (primitiva -> acceso_struct .)
    RESTO           reduce using rule 121 (primitiva -> acceso_struct .)
    MENQUE          reduce using rule 121 (primitiva -> acceso_struct .)
    MAYQUE          reduce using rule 121 (primitiva -> acceso_struct .)
    MEIQUE          reduce using rule 121 (primitiva -> acceso_struct .)
    MAIQUE          reduce using rule 121 (primitiva -> acceso_struct .)
    IGUALQUE        reduce using rule 121 (primitiva -> acceso_struct .)
    NIGUALQUE       reduce using rule 121 (primitiva -> acceso_struct .)
    AND             reduce using rule 121 (primitiva -> acceso_struct .)
    OR              reduce using rule 121 (primitiva -> acceso_struct .)
    XOR             reduce using rule 121 (primitiva -> acceso_struct .)
    PAND            reduce using rule 121 (primitiva -> acceso_struct .)
    BOR             reduce using rule 121 (primitiva -> acceso_struct .)
    XORR            reduce using rule 121 (primitiva -> acceso_struct .)
    SHIFTI          reduce using rule 121 (primitiva -> acceso_struct .)
    SHIFTD          reduce using rule 121 (primitiva -> acceso_struct .)
    PTCOMA          reduce using rule 121 (primitiva -> acceso_struct .)
    PARDER          reduce using rule 121 (primitiva -> acceso_struct .)
    COMA            reduce using rule 121 (primitiva -> acceso_struct .)
    DOSP            reduce using rule 121 (primitiva -> acceso_struct .)


state 42

    (94) expresion_unaria -> MENOS . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 74
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 43

    (98) expresion_logica -> NOT . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 75
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 44

    (104) expresion_bit_bit -> NOTR . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 76
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 45

    (78) lista_id -> lista_id COMA ID .

    IGUAL           reduce using rule 78 (lista_id -> lista_id COMA ID .)
    COMA            reduce using rule 78 (lista_id -> lista_id COMA ID .)
    PTCOMA          reduce using rule 78 (lista_id -> lista_id COMA ID .)


state 46

    (8) definicion_struct -> STRUCT ID PARIZQ declaraciones . PARDER PTCOMA
    (9) declaraciones -> declaraciones . declaracion PTCOMA
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    PARDER          shift and go to state 77
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    declaracion                    shift and go to state 78
    TIPO                           shift and go to state 48

state 47

    (10) declaraciones -> declaracion . PTCOMA

    PTCOMA          shift and go to state 79


state 48

    (76) declaracion -> TIPO . lista_id
    (77) declaracion -> TIPO . lista_id IGUAL expresion
    (78) lista_id -> . lista_id COMA ID
    (79) lista_id -> . ID

    ID              shift and go to state 80

    lista_id                       shift and go to state 18

state 49

    (16) parametro -> TIPO ID .

    PARDER          reduce using rule 16 (parametro -> TIPO ID .)
    COMA            reduce using rule 16 (parametro -> TIPO ID .)


state 50

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 48
    instrucciones                  shift and go to state 82
    instruccion                    shift and go to state 83
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99

state 51

    (13) funcion -> TIPO ID PARIZQ parametros PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 109


state 52

    (14) parametros -> parametros COMA . parametro
    (16) parametro -> . TIPO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    parametro                      shift and go to state 110
    TIPO                           shift and go to state 24

state 53

    (111) expresion_numerica -> expresion MAS . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 111
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 54

    (112) expresion_numerica -> expresion MENOS . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 112
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 55

    (113) expresion_numerica -> expresion POR . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 113
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 56

    (114) expresion_numerica -> expresion DIVIDIDO . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 114
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 57

    (115) expresion_numerica -> expresion RESTO . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 115
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 58

    (105) expresion_relacional -> expresion MENQUE . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 116
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 59

    (106) expresion_relacional -> expresion MAYQUE . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 117
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 60

    (107) expresion_relacional -> expresion MEIQUE . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 118
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 61

    (108) expresion_relacional -> expresion MAIQUE . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 119
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 62

    (109) expresion_relacional -> expresion IGUALQUE . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 120
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 63

    (110) expresion_relacional -> expresion NIGUALQUE . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 121
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 64

    (95) expresion_logica -> expresion AND . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 122
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 65

    (96) expresion_logica -> expresion OR . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 123
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 66

    (97) expresion_logica -> expresion XOR . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 124
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 67

    (99) expresion_bit_bit -> expresion PAND . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 125
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 68

    (100) expresion_bit_bit -> expresion BOR . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 126
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 69

    (101) expresion_bit_bit -> expresion XORR . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 127
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 70

    (102) expresion_bit_bit -> expresion SHIFTI . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 128
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 71

    (103) expresion_bit_bit -> expresion SHIFTD . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 129
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 72

    (93) expresion -> PARIZQ expresion . PARDER
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 130
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 73

    (35) acceso_struct -> ID PUNTO . ID

    ID              shift and go to state 131


state 74

    (94) expresion_unaria -> MENOS expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    MENOS           reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    POR             reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    DIVIDIDO        reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    RESTO           reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    MENQUE          reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    MAYQUE          reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    MEIQUE          reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    MAIQUE          reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    IGUALQUE        reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    NIGUALQUE       reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    AND             reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    OR              reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    XOR             reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    PAND            reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    BOR             reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    XORR            reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    SHIFTI          reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    SHIFTD          reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    PTCOMA          reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    PARDER          reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    COMA            reduce using rule 94 (expresion_unaria -> MENOS expresion .)
    DOSP            reduce using rule 94 (expresion_unaria -> MENOS expresion .)

  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! POR             [ shift and go to state 55 ]
  ! DIVIDIDO        [ shift and go to state 56 ]
  ! RESTO           [ shift and go to state 57 ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]
  ! SHIFTI          [ shift and go to state 70 ]
  ! SHIFTD          [ shift and go to state 71 ]


state 75

    (98) expresion_logica -> NOT expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 98 (expresion_logica -> NOT expresion .)
    MENOS           reduce using rule 98 (expresion_logica -> NOT expresion .)
    POR             reduce using rule 98 (expresion_logica -> NOT expresion .)
    DIVIDIDO        reduce using rule 98 (expresion_logica -> NOT expresion .)
    RESTO           reduce using rule 98 (expresion_logica -> NOT expresion .)
    MENQUE          reduce using rule 98 (expresion_logica -> NOT expresion .)
    MAYQUE          reduce using rule 98 (expresion_logica -> NOT expresion .)
    MEIQUE          reduce using rule 98 (expresion_logica -> NOT expresion .)
    MAIQUE          reduce using rule 98 (expresion_logica -> NOT expresion .)
    IGUALQUE        reduce using rule 98 (expresion_logica -> NOT expresion .)
    NIGUALQUE       reduce using rule 98 (expresion_logica -> NOT expresion .)
    AND             reduce using rule 98 (expresion_logica -> NOT expresion .)
    OR              reduce using rule 98 (expresion_logica -> NOT expresion .)
    XOR             reduce using rule 98 (expresion_logica -> NOT expresion .)
    PAND            reduce using rule 98 (expresion_logica -> NOT expresion .)
    BOR             reduce using rule 98 (expresion_logica -> NOT expresion .)
    XORR            reduce using rule 98 (expresion_logica -> NOT expresion .)
    SHIFTI          reduce using rule 98 (expresion_logica -> NOT expresion .)
    SHIFTD          reduce using rule 98 (expresion_logica -> NOT expresion .)
    PTCOMA          reduce using rule 98 (expresion_logica -> NOT expresion .)
    PARDER          reduce using rule 98 (expresion_logica -> NOT expresion .)
    COMA            reduce using rule 98 (expresion_logica -> NOT expresion .)
    DOSP            reduce using rule 98 (expresion_logica -> NOT expresion .)

  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! POR             [ shift and go to state 55 ]
  ! DIVIDIDO        [ shift and go to state 56 ]
  ! RESTO           [ shift and go to state 57 ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]
  ! SHIFTI          [ shift and go to state 70 ]
  ! SHIFTD          [ shift and go to state 71 ]


state 76

    (104) expresion_bit_bit -> NOTR expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    MENOS           reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    POR             reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    DIVIDIDO        reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    RESTO           reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    MENQUE          reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    MAYQUE          reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    MEIQUE          reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    MAIQUE          reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    IGUALQUE        reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    NIGUALQUE       reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    AND             reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    OR              reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    XOR             reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    PAND            reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    BOR             reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    XORR            reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    SHIFTI          reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    SHIFTD          reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    PTCOMA          reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    PARDER          reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    COMA            reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)
    DOSP            reduce using rule 104 (expresion_bit_bit -> NOTR expresion .)

  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! POR             [ shift and go to state 55 ]
  ! DIVIDIDO        [ shift and go to state 56 ]
  ! RESTO           [ shift and go to state 57 ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]
  ! SHIFTI          [ shift and go to state 70 ]
  ! SHIFTD          [ shift and go to state 71 ]


state 77

    (8) definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER . PTCOMA

    PTCOMA          shift and go to state 132


state 78

    (9) declaraciones -> declaraciones declaracion . PTCOMA

    PTCOMA          shift and go to state 133


state 79

    (10) declaraciones -> declaracion PTCOMA .

    PARDER          reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    INT             reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    FLOAT           reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    CHAR            reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    VOID            reduce using rule 10 (declaraciones -> declaracion PTCOMA .)


state 80

    (79) lista_id -> ID .

    IGUAL           reduce using rule 79 (lista_id -> ID .)
    COMA            reduce using rule 79 (lista_id -> ID .)
    PTCOMA          reduce using rule 79 (lista_id -> ID .)


state 81

    (63) asignacion -> ID . IGUAL expresion
    (64) asignacion -> ID . MAS MAS
    (65) asignacion -> ID . MENOS MENOS
    (66) asignacion -> ID . ASUMA expresion
    (67) asignacion -> ID . ARESTA expresion
    (68) asignacion -> ID . MULTIPLICATIVA expresion
    (69) asignacion -> ID . DIVIDIDA expresion
    (70) asignacion -> ID . ARESTO expresion
    (71) asignacion -> ID . ABOR expresion
    (72) asignacion -> ID . APAND expresion
    (73) asignacion -> ID . ASHIFTD expresion
    (74) asignacion -> ID . ASHIFTI expresion
    (75) asignacion -> ID . AXORR expresion
    (36) ins_etiqueta -> ID . DOSP
    (33) declaracion_struct -> ID . lista_id
    (35) acceso_struct -> ID . PUNTO ID
    (78) lista_id -> . lista_id COMA ID
    (79) lista_id -> . ID

    IGUAL           shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    ASUMA           shift and go to state 137
    ARESTA          shift and go to state 138
    MULTIPLICATIVA  shift and go to state 139
    DIVIDIDA        shift and go to state 140
    ARESTO          shift and go to state 141
    ABOR            shift and go to state 142
    APAND           shift and go to state 143
    ASHIFTD         shift and go to state 144
    ASHIFTI         shift and go to state 145
    AXORR           shift and go to state 146
    DOSP            shift and go to state 147
    PUNTO           shift and go to state 73
    ID              shift and go to state 80

    lista_id                       shift and go to state 148

state 82

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         shift and go to state 149
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 48
    instruccion                    shift and go to state 150
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99

state 83

    (18) instrucciones -> instruccion .

    LLAVDER         reduce using rule 18 (instrucciones -> instruccion .)
    error           reduce using rule 18 (instrucciones -> instruccion .)
    IMPRIMIR        reduce using rule 18 (instrucciones -> instruccion .)
    ID              reduce using rule 18 (instrucciones -> instruccion .)
    IF              reduce using rule 18 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 18 (instrucciones -> instruccion .)
    BREAK           reduce using rule 18 (instrucciones -> instruccion .)
    SCAN            reduce using rule 18 (instrucciones -> instruccion .)
    WHILE           reduce using rule 18 (instrucciones -> instruccion .)
    DO              reduce using rule 18 (instrucciones -> instruccion .)
    FOR             reduce using rule 18 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 18 (instrucciones -> instruccion .)
    GOTO            reduce using rule 18 (instrucciones -> instruccion .)
    INT             reduce using rule 18 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 18 (instrucciones -> instruccion .)
    CHAR            reduce using rule 18 (instrucciones -> instruccion .)
    DOOBLE          reduce using rule 18 (instrucciones -> instruccion .)
    VOID            reduce using rule 18 (instrucciones -> instruccion .)
    DEFAULT         reduce using rule 18 (instrucciones -> instruccion .)
    CASE            reduce using rule 18 (instrucciones -> instruccion .)


state 84

    (19) instruccion -> imprimir_instr .

    LLAVDER         reduce using rule 19 (instruccion -> imprimir_instr .)
    error           reduce using rule 19 (instruccion -> imprimir_instr .)
    IMPRIMIR        reduce using rule 19 (instruccion -> imprimir_instr .)
    ID              reduce using rule 19 (instruccion -> imprimir_instr .)
    IF              reduce using rule 19 (instruccion -> imprimir_instr .)
    SWITCH          reduce using rule 19 (instruccion -> imprimir_instr .)
    BREAK           reduce using rule 19 (instruccion -> imprimir_instr .)
    SCAN            reduce using rule 19 (instruccion -> imprimir_instr .)
    WHILE           reduce using rule 19 (instruccion -> imprimir_instr .)
    DO              reduce using rule 19 (instruccion -> imprimir_instr .)
    FOR             reduce using rule 19 (instruccion -> imprimir_instr .)
    CONTINUE        reduce using rule 19 (instruccion -> imprimir_instr .)
    GOTO            reduce using rule 19 (instruccion -> imprimir_instr .)
    INT             reduce using rule 19 (instruccion -> imprimir_instr .)
    FLOAT           reduce using rule 19 (instruccion -> imprimir_instr .)
    CHAR            reduce using rule 19 (instruccion -> imprimir_instr .)
    DOOBLE          reduce using rule 19 (instruccion -> imprimir_instr .)
    VOID            reduce using rule 19 (instruccion -> imprimir_instr .)
    DEFAULT         reduce using rule 19 (instruccion -> imprimir_instr .)
    CASE            reduce using rule 19 (instruccion -> imprimir_instr .)


state 85

    (20) instruccion -> asignacion . PTCOMA

    PTCOMA          shift and go to state 151


state 86

    (21) instruccion -> declaracion . PTCOMA

    PTCOMA          shift and go to state 152


state 87

    (22) instruccion -> sentencia_if .

    LLAVDER         reduce using rule 22 (instruccion -> sentencia_if .)
    error           reduce using rule 22 (instruccion -> sentencia_if .)
    IMPRIMIR        reduce using rule 22 (instruccion -> sentencia_if .)
    ID              reduce using rule 22 (instruccion -> sentencia_if .)
    IF              reduce using rule 22 (instruccion -> sentencia_if .)
    SWITCH          reduce using rule 22 (instruccion -> sentencia_if .)
    BREAK           reduce using rule 22 (instruccion -> sentencia_if .)
    SCAN            reduce using rule 22 (instruccion -> sentencia_if .)
    WHILE           reduce using rule 22 (instruccion -> sentencia_if .)
    DO              reduce using rule 22 (instruccion -> sentencia_if .)
    FOR             reduce using rule 22 (instruccion -> sentencia_if .)
    CONTINUE        reduce using rule 22 (instruccion -> sentencia_if .)
    GOTO            reduce using rule 22 (instruccion -> sentencia_if .)
    INT             reduce using rule 22 (instruccion -> sentencia_if .)
    FLOAT           reduce using rule 22 (instruccion -> sentencia_if .)
    CHAR            reduce using rule 22 (instruccion -> sentencia_if .)
    DOOBLE          reduce using rule 22 (instruccion -> sentencia_if .)
    VOID            reduce using rule 22 (instruccion -> sentencia_if .)
    DEFAULT         reduce using rule 22 (instruccion -> sentencia_if .)
    CASE            reduce using rule 22 (instruccion -> sentencia_if .)


state 88

    (23) instruccion -> sentencia_switch .

    LLAVDER         reduce using rule 23 (instruccion -> sentencia_switch .)
    error           reduce using rule 23 (instruccion -> sentencia_switch .)
    IMPRIMIR        reduce using rule 23 (instruccion -> sentencia_switch .)
    ID              reduce using rule 23 (instruccion -> sentencia_switch .)
    IF              reduce using rule 23 (instruccion -> sentencia_switch .)
    SWITCH          reduce using rule 23 (instruccion -> sentencia_switch .)
    BREAK           reduce using rule 23 (instruccion -> sentencia_switch .)
    SCAN            reduce using rule 23 (instruccion -> sentencia_switch .)
    WHILE           reduce using rule 23 (instruccion -> sentencia_switch .)
    DO              reduce using rule 23 (instruccion -> sentencia_switch .)
    FOR             reduce using rule 23 (instruccion -> sentencia_switch .)
    CONTINUE        reduce using rule 23 (instruccion -> sentencia_switch .)
    GOTO            reduce using rule 23 (instruccion -> sentencia_switch .)
    INT             reduce using rule 23 (instruccion -> sentencia_switch .)
    FLOAT           reduce using rule 23 (instruccion -> sentencia_switch .)
    CHAR            reduce using rule 23 (instruccion -> sentencia_switch .)
    DOOBLE          reduce using rule 23 (instruccion -> sentencia_switch .)
    VOID            reduce using rule 23 (instruccion -> sentencia_switch .)
    DEFAULT         reduce using rule 23 (instruccion -> sentencia_switch .)
    CASE            reduce using rule 23 (instruccion -> sentencia_switch .)


state 89

    (24) instruccion -> ins_break .

    LLAVDER         reduce using rule 24 (instruccion -> ins_break .)
    error           reduce using rule 24 (instruccion -> ins_break .)
    IMPRIMIR        reduce using rule 24 (instruccion -> ins_break .)
    ID              reduce using rule 24 (instruccion -> ins_break .)
    IF              reduce using rule 24 (instruccion -> ins_break .)
    SWITCH          reduce using rule 24 (instruccion -> ins_break .)
    BREAK           reduce using rule 24 (instruccion -> ins_break .)
    SCAN            reduce using rule 24 (instruccion -> ins_break .)
    WHILE           reduce using rule 24 (instruccion -> ins_break .)
    DO              reduce using rule 24 (instruccion -> ins_break .)
    FOR             reduce using rule 24 (instruccion -> ins_break .)
    CONTINUE        reduce using rule 24 (instruccion -> ins_break .)
    GOTO            reduce using rule 24 (instruccion -> ins_break .)
    INT             reduce using rule 24 (instruccion -> ins_break .)
    FLOAT           reduce using rule 24 (instruccion -> ins_break .)
    CHAR            reduce using rule 24 (instruccion -> ins_break .)
    DOOBLE          reduce using rule 24 (instruccion -> ins_break .)
    VOID            reduce using rule 24 (instruccion -> ins_break .)
    DEFAULT         reduce using rule 24 (instruccion -> ins_break .)
    CASE            reduce using rule 24 (instruccion -> ins_break .)


state 90

    (25) instruccion -> ins_scan .

    LLAVDER         reduce using rule 25 (instruccion -> ins_scan .)
    error           reduce using rule 25 (instruccion -> ins_scan .)
    IMPRIMIR        reduce using rule 25 (instruccion -> ins_scan .)
    ID              reduce using rule 25 (instruccion -> ins_scan .)
    IF              reduce using rule 25 (instruccion -> ins_scan .)
    SWITCH          reduce using rule 25 (instruccion -> ins_scan .)
    BREAK           reduce using rule 25 (instruccion -> ins_scan .)
    SCAN            reduce using rule 25 (instruccion -> ins_scan .)
    WHILE           reduce using rule 25 (instruccion -> ins_scan .)
    DO              reduce using rule 25 (instruccion -> ins_scan .)
    FOR             reduce using rule 25 (instruccion -> ins_scan .)
    CONTINUE        reduce using rule 25 (instruccion -> ins_scan .)
    GOTO            reduce using rule 25 (instruccion -> ins_scan .)
    INT             reduce using rule 25 (instruccion -> ins_scan .)
    FLOAT           reduce using rule 25 (instruccion -> ins_scan .)
    CHAR            reduce using rule 25 (instruccion -> ins_scan .)
    DOOBLE          reduce using rule 25 (instruccion -> ins_scan .)
    VOID            reduce using rule 25 (instruccion -> ins_scan .)
    DEFAULT         reduce using rule 25 (instruccion -> ins_scan .)
    CASE            reduce using rule 25 (instruccion -> ins_scan .)


state 91

    (26) instruccion -> ins_while .

    LLAVDER         reduce using rule 26 (instruccion -> ins_while .)
    error           reduce using rule 26 (instruccion -> ins_while .)
    IMPRIMIR        reduce using rule 26 (instruccion -> ins_while .)
    ID              reduce using rule 26 (instruccion -> ins_while .)
    IF              reduce using rule 26 (instruccion -> ins_while .)
    SWITCH          reduce using rule 26 (instruccion -> ins_while .)
    BREAK           reduce using rule 26 (instruccion -> ins_while .)
    SCAN            reduce using rule 26 (instruccion -> ins_while .)
    WHILE           reduce using rule 26 (instruccion -> ins_while .)
    DO              reduce using rule 26 (instruccion -> ins_while .)
    FOR             reduce using rule 26 (instruccion -> ins_while .)
    CONTINUE        reduce using rule 26 (instruccion -> ins_while .)
    GOTO            reduce using rule 26 (instruccion -> ins_while .)
    INT             reduce using rule 26 (instruccion -> ins_while .)
    FLOAT           reduce using rule 26 (instruccion -> ins_while .)
    CHAR            reduce using rule 26 (instruccion -> ins_while .)
    DOOBLE          reduce using rule 26 (instruccion -> ins_while .)
    VOID            reduce using rule 26 (instruccion -> ins_while .)
    DEFAULT         reduce using rule 26 (instruccion -> ins_while .)
    CASE            reduce using rule 26 (instruccion -> ins_while .)


state 92

    (27) instruccion -> ins_for .

    LLAVDER         reduce using rule 27 (instruccion -> ins_for .)
    error           reduce using rule 27 (instruccion -> ins_for .)
    IMPRIMIR        reduce using rule 27 (instruccion -> ins_for .)
    ID              reduce using rule 27 (instruccion -> ins_for .)
    IF              reduce using rule 27 (instruccion -> ins_for .)
    SWITCH          reduce using rule 27 (instruccion -> ins_for .)
    BREAK           reduce using rule 27 (instruccion -> ins_for .)
    SCAN            reduce using rule 27 (instruccion -> ins_for .)
    WHILE           reduce using rule 27 (instruccion -> ins_for .)
    DO              reduce using rule 27 (instruccion -> ins_for .)
    FOR             reduce using rule 27 (instruccion -> ins_for .)
    CONTINUE        reduce using rule 27 (instruccion -> ins_for .)
    GOTO            reduce using rule 27 (instruccion -> ins_for .)
    INT             reduce using rule 27 (instruccion -> ins_for .)
    FLOAT           reduce using rule 27 (instruccion -> ins_for .)
    CHAR            reduce using rule 27 (instruccion -> ins_for .)
    DOOBLE          reduce using rule 27 (instruccion -> ins_for .)
    VOID            reduce using rule 27 (instruccion -> ins_for .)
    DEFAULT         reduce using rule 27 (instruccion -> ins_for .)
    CASE            reduce using rule 27 (instruccion -> ins_for .)


state 93

    (28) instruccion -> ins_continue .

    LLAVDER         reduce using rule 28 (instruccion -> ins_continue .)
    error           reduce using rule 28 (instruccion -> ins_continue .)
    IMPRIMIR        reduce using rule 28 (instruccion -> ins_continue .)
    ID              reduce using rule 28 (instruccion -> ins_continue .)
    IF              reduce using rule 28 (instruccion -> ins_continue .)
    SWITCH          reduce using rule 28 (instruccion -> ins_continue .)
    BREAK           reduce using rule 28 (instruccion -> ins_continue .)
    SCAN            reduce using rule 28 (instruccion -> ins_continue .)
    WHILE           reduce using rule 28 (instruccion -> ins_continue .)
    DO              reduce using rule 28 (instruccion -> ins_continue .)
    FOR             reduce using rule 28 (instruccion -> ins_continue .)
    CONTINUE        reduce using rule 28 (instruccion -> ins_continue .)
    GOTO            reduce using rule 28 (instruccion -> ins_continue .)
    INT             reduce using rule 28 (instruccion -> ins_continue .)
    FLOAT           reduce using rule 28 (instruccion -> ins_continue .)
    CHAR            reduce using rule 28 (instruccion -> ins_continue .)
    DOOBLE          reduce using rule 28 (instruccion -> ins_continue .)
    VOID            reduce using rule 28 (instruccion -> ins_continue .)
    DEFAULT         reduce using rule 28 (instruccion -> ins_continue .)
    CASE            reduce using rule 28 (instruccion -> ins_continue .)


state 94

    (29) instruccion -> ins_etiqueta .

    LLAVDER         reduce using rule 29 (instruccion -> ins_etiqueta .)
    error           reduce using rule 29 (instruccion -> ins_etiqueta .)
    IMPRIMIR        reduce using rule 29 (instruccion -> ins_etiqueta .)
    ID              reduce using rule 29 (instruccion -> ins_etiqueta .)
    IF              reduce using rule 29 (instruccion -> ins_etiqueta .)
    SWITCH          reduce using rule 29 (instruccion -> ins_etiqueta .)
    BREAK           reduce using rule 29 (instruccion -> ins_etiqueta .)
    SCAN            reduce using rule 29 (instruccion -> ins_etiqueta .)
    WHILE           reduce using rule 29 (instruccion -> ins_etiqueta .)
    DO              reduce using rule 29 (instruccion -> ins_etiqueta .)
    FOR             reduce using rule 29 (instruccion -> ins_etiqueta .)
    CONTINUE        reduce using rule 29 (instruccion -> ins_etiqueta .)
    GOTO            reduce using rule 29 (instruccion -> ins_etiqueta .)
    INT             reduce using rule 29 (instruccion -> ins_etiqueta .)
    FLOAT           reduce using rule 29 (instruccion -> ins_etiqueta .)
    CHAR            reduce using rule 29 (instruccion -> ins_etiqueta .)
    DOOBLE          reduce using rule 29 (instruccion -> ins_etiqueta .)
    VOID            reduce using rule 29 (instruccion -> ins_etiqueta .)
    DEFAULT         reduce using rule 29 (instruccion -> ins_etiqueta .)
    CASE            reduce using rule 29 (instruccion -> ins_etiqueta .)


state 95

    (30) instruccion -> ins_goto .

    LLAVDER         reduce using rule 30 (instruccion -> ins_goto .)
    error           reduce using rule 30 (instruccion -> ins_goto .)
    IMPRIMIR        reduce using rule 30 (instruccion -> ins_goto .)
    ID              reduce using rule 30 (instruccion -> ins_goto .)
    IF              reduce using rule 30 (instruccion -> ins_goto .)
    SWITCH          reduce using rule 30 (instruccion -> ins_goto .)
    BREAK           reduce using rule 30 (instruccion -> ins_goto .)
    SCAN            reduce using rule 30 (instruccion -> ins_goto .)
    WHILE           reduce using rule 30 (instruccion -> ins_goto .)
    DO              reduce using rule 30 (instruccion -> ins_goto .)
    FOR             reduce using rule 30 (instruccion -> ins_goto .)
    CONTINUE        reduce using rule 30 (instruccion -> ins_goto .)
    GOTO            reduce using rule 30 (instruccion -> ins_goto .)
    INT             reduce using rule 30 (instruccion -> ins_goto .)
    FLOAT           reduce using rule 30 (instruccion -> ins_goto .)
    CHAR            reduce using rule 30 (instruccion -> ins_goto .)
    DOOBLE          reduce using rule 30 (instruccion -> ins_goto .)
    VOID            reduce using rule 30 (instruccion -> ins_goto .)
    DEFAULT         reduce using rule 30 (instruccion -> ins_goto .)
    CASE            reduce using rule 30 (instruccion -> ins_goto .)


state 96

    (31) instruccion -> declaracion_struct . PTCOMA

    PTCOMA          shift and go to state 153


state 97

    (32) instruccion -> error .

    LLAVDER         reduce using rule 32 (instruccion -> error .)
    error           reduce using rule 32 (instruccion -> error .)
    IMPRIMIR        reduce using rule 32 (instruccion -> error .)
    ID              reduce using rule 32 (instruccion -> error .)
    IF              reduce using rule 32 (instruccion -> error .)
    SWITCH          reduce using rule 32 (instruccion -> error .)
    BREAK           reduce using rule 32 (instruccion -> error .)
    SCAN            reduce using rule 32 (instruccion -> error .)
    WHILE           reduce using rule 32 (instruccion -> error .)
    DO              reduce using rule 32 (instruccion -> error .)
    FOR             reduce using rule 32 (instruccion -> error .)
    CONTINUE        reduce using rule 32 (instruccion -> error .)
    GOTO            reduce using rule 32 (instruccion -> error .)
    INT             reduce using rule 32 (instruccion -> error .)
    FLOAT           reduce using rule 32 (instruccion -> error .)
    CHAR            reduce using rule 32 (instruccion -> error .)
    DOOBLE          reduce using rule 32 (instruccion -> error .)
    VOID            reduce using rule 32 (instruccion -> error .)
    DEFAULT         reduce using rule 32 (instruccion -> error .)
    CASE            reduce using rule 32 (instruccion -> error .)


state 98

    (61) imprimir_instr -> IMPRIMIR . PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> IMPRIMIR . PARIZQ CADENA PARDER PTCOMA

    PARIZQ          shift and go to state 154


state 99

    (34) asignacion -> acceso_struct . IGUAL expresion

    IGUAL           shift and go to state 155


state 100

    (53) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif

    PARIZQ          shift and go to state 156


state 101

    (44) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER

    PARIZQ          shift and go to state 157


state 102

    (52) ins_break -> BREAK . PTCOMA

    PTCOMA          shift and go to state 158


state 103

    (60) ins_scan -> SCAN . PARIZQ CADENA COMA PAND ID PARDER PTCOMA

    PARIZQ          shift and go to state 159


state 104

    (41) ins_while -> WHILE . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 160


state 105

    (42) ins_while -> DO . LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA

    LLAVIZQ         shift and go to state 161


state 106

    (38) ins_for -> FOR . PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 162


state 107

    (43) ins_continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 163


state 108

    (37) ins_goto -> GOTO . ID PTCOMA

    ID              shift and go to state 164


state 109

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 48
    instrucciones                  shift and go to state 165
    instruccion                    shift and go to state 83
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99

state 110

    (14) parametros -> parametros COMA parametro .

    PARDER          reduce using rule 14 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 14 (parametros -> parametros COMA parametro .)


state 111

    (111) expresion_numerica -> expresion MAS expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    MENOS           reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    MENQUE          reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    MAYQUE          reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    MEIQUE          reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    MAIQUE          reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    NIGUALQUE       reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    AND             reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    OR              reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    XOR             reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    PAND            reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    BOR             reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    XORR            reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    SHIFTI          reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    SHIFTD          reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    PTCOMA          reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    PARDER          reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    COMA            reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    DOSP            reduce using rule 111 (expresion_numerica -> expresion MAS expresion .)
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57

  ! POR             [ reduce using rule 111 (expresion_numerica -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 111 (expresion_numerica -> expresion MAS expresion .) ]
  ! RESTO           [ reduce using rule 111 (expresion_numerica -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]
  ! SHIFTI          [ shift and go to state 70 ]
  ! SHIFTD          [ shift and go to state 71 ]


state 112

    (112) expresion_numerica -> expresion MENOS expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    MENOS           reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    MENQUE          reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    MAYQUE          reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    MEIQUE          reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    MAIQUE          reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    NIGUALQUE       reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    AND             reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    OR              reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    XOR             reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    PAND            reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    BOR             reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    XORR            reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTI          reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTD          reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    PARDER          reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    COMA            reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    DOSP            reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .)
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57

  ! POR             [ reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .) ]
  ! RESTO           [ reduce using rule 112 (expresion_numerica -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]
  ! SHIFTI          [ shift and go to state 70 ]
  ! SHIFTD          [ shift and go to state 71 ]


state 113

    (113) expresion_numerica -> expresion POR expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    MENOS           reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    POR             reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    RESTO           reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    MENQUE          reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    MAYQUE          reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    MEIQUE          reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    MAIQUE          reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    IGUALQUE        reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    NIGUALQUE       reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    AND             reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    OR              reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    XOR             reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    PAND            reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    BOR             reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    XORR            reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    SHIFTI          reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    SHIFTD          reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    PTCOMA          reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    PARDER          reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    COMA            reduce using rule 113 (expresion_numerica -> expresion POR expresion .)
    DOSP            reduce using rule 113 (expresion_numerica -> expresion POR expresion .)

  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! POR             [ shift and go to state 55 ]
  ! DIVIDIDO        [ shift and go to state 56 ]
  ! RESTO           [ shift and go to state 57 ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]
  ! SHIFTI          [ shift and go to state 70 ]
  ! SHIFTD          [ shift and go to state 71 ]


state 114

    (114) expresion_numerica -> expresion DIVIDIDO expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    RESTO           reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENQUE          reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAYQUE          reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MEIQUE          reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAIQUE          reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    NIGUALQUE       reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XOR             reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PAND            reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    BOR             reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XORR            reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTI          reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTD          reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DOSP            reduce using rule 114 (expresion_numerica -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! POR             [ shift and go to state 55 ]
  ! DIVIDIDO        [ shift and go to state 56 ]
  ! RESTO           [ shift and go to state 57 ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]
  ! SHIFTI          [ shift and go to state 70 ]
  ! SHIFTD          [ shift and go to state 71 ]


state 115

    (115) expresion_numerica -> expresion RESTO expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    MENOS           reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    POR             reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    DIVIDIDO        reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    RESTO           reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    MENQUE          reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    MAYQUE          reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    MEIQUE          reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    MAIQUE          reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    IGUALQUE        reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    NIGUALQUE       reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    AND             reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    OR              reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    XOR             reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    PAND            reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    BOR             reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    XORR            reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTI          reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTD          reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    PTCOMA          reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    PARDER          reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    COMA            reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)
    DOSP            reduce using rule 115 (expresion_numerica -> expresion RESTO expresion .)

  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! POR             [ shift and go to state 55 ]
  ! DIVIDIDO        [ shift and go to state 56 ]
  ! RESTO           [ shift and go to state 57 ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]
  ! SHIFTI          [ shift and go to state 70 ]
  ! SHIFTD          [ shift and go to state 71 ]


state 116

    (105) expresion_relacional -> expresion MENQUE expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    MAYQUE          reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    MEIQUE          reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    MAIQUE          reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    IGUALQUE        reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    NIGUALQUE       reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    AND             reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    XOR             reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    PAND            reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    BOR             reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    XORR            reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    PTCOMA          reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    PARDER          reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    COMA            reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    DOSP            reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENOS           [ reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! POR             [ reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! RESTO           [ reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 105 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]


state 117

    (106) expresion_relacional -> expresion MAYQUE expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    MAYQUE          reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    MEIQUE          reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    MAIQUE          reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    IGUALQUE        reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    NIGUALQUE       reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    AND             reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    XOR             reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    PAND            reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    BOR             reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    XORR            reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    PTCOMA          reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    PARDER          reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    COMA            reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    DOSP            reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENOS           [ reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! POR             [ reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! RESTO           [ reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 106 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]


state 118

    (107) expresion_relacional -> expresion MEIQUE expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    MAYQUE          reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    MEIQUE          reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    MAIQUE          reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    IGUALQUE        reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    NIGUALQUE       reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    AND             reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    OR              reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    XOR             reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    PAND            reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    BOR             reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    XORR            reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    PTCOMA          reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    PARDER          reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    COMA            reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    DOSP            reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENOS           [ reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! POR             [ reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! RESTO           [ reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 107 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]


state 119

    (108) expresion_relacional -> expresion MAIQUE expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    MAYQUE          reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    MEIQUE          reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    MAIQUE          reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    IGUALQUE        reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    NIGUALQUE       reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    AND             reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    OR              reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    XOR             reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    PAND            reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    BOR             reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    XORR            reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    PTCOMA          reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    PARDER          reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    COMA            reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    DOSP            reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENOS           [ reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! POR             [ reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! RESTO           [ reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 108 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]


state 120

    (109) expresion_relacional -> expresion IGUALQUE expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    IGUALQUE        reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    NIGUALQUE       reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    AND             reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    OR              reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    XOR             reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    PAND            reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    BOR             reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    XORR            reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    DOSP            reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 109 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]


state 121

    (110) expresion_relacional -> expresion NIGUALQUE expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    IGUALQUE        reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    NIGUALQUE       reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    AND             reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    OR              reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XOR             reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PAND            reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    BOR             reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XORR            reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PTCOMA          reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PARDER          reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    COMA            reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    DOSP            reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 110 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]


state 122

    (95) expresion_logica -> expresion AND expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    AND             reduce using rule 95 (expresion_logica -> expresion AND expresion .)
    OR              reduce using rule 95 (expresion_logica -> expresion AND expresion .)
    XOR             reduce using rule 95 (expresion_logica -> expresion AND expresion .)
    PTCOMA          reduce using rule 95 (expresion_logica -> expresion AND expresion .)
    PARDER          reduce using rule 95 (expresion_logica -> expresion AND expresion .)
    COMA            reduce using rule 95 (expresion_logica -> expresion AND expresion .)
    DOSP            reduce using rule 95 (expresion_logica -> expresion AND expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! RESTO           [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! MENQUE          [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! MAYQUE          [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! MEIQUE          [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! MAIQUE          [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! PAND            [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! BOR             [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! XORR            [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTI          [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTD          [ reduce using rule 95 (expresion_logica -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]


state 123

    (96) expresion_logica -> expresion OR expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    OR              reduce using rule 96 (expresion_logica -> expresion OR expresion .)
    XOR             reduce using rule 96 (expresion_logica -> expresion OR expresion .)
    PTCOMA          reduce using rule 96 (expresion_logica -> expresion OR expresion .)
    PARDER          reduce using rule 96 (expresion_logica -> expresion OR expresion .)
    COMA            reduce using rule 96 (expresion_logica -> expresion OR expresion .)
    DOSP            reduce using rule 96 (expresion_logica -> expresion OR expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! RESTO           [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! MENQUE          [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! MAYQUE          [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! MEIQUE          [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! MAIQUE          [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! PAND            [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! BOR             [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! XORR            [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTI          [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTD          [ reduce using rule 96 (expresion_logica -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]


state 124

    (97) expresion_logica -> expresion XOR expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for RESTO resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MEIQUE resolved as shift
  ! shift/reduce conflict for MAIQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for PAND resolved as shift
  ! shift/reduce conflict for BOR resolved as shift
  ! shift/reduce conflict for XORR resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
    PTCOMA          reduce using rule 97 (expresion_logica -> expresion XOR expresion .)
    PARDER          reduce using rule 97 (expresion_logica -> expresion XOR expresion .)
    COMA            reduce using rule 97 (expresion_logica -> expresion XOR expresion .)
    DOSP            reduce using rule 97 (expresion_logica -> expresion XOR expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! MENOS           [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! POR             [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! RESTO           [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! MENQUE          [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! MAYQUE          [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! MEIQUE          [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! MAIQUE          [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! AND             [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! OR              [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! XOR             [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! PAND            [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! BOR             [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! XORR            [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTI          [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTD          [ reduce using rule 97 (expresion_logica -> expresion XOR expresion .) ]


state 125

    (99) expresion_bit_bit -> expresion PAND expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    AND             reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .)
    OR              reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .)
    XOR             reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .)
    PAND            reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .)
    BOR             reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .)
    XORR            reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .)
    PTCOMA          reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .)
    PARDER          reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .)
    COMA            reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .)
    DOSP            reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENOS           [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! POR             [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! RESTO           [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENQUE          [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAYQUE          [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MEIQUE          [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAIQUE          [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! IGUALQUE        [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTI          [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTD          [ reduce using rule 99 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]


state 126

    (100) expresion_bit_bit -> expresion BOR expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    AND             reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .)
    OR              reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .)
    XOR             reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .)
    BOR             reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .)
    PTCOMA          reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .)
    PARDER          reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .)
    COMA            reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .)
    DOSP            reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    PAND            shift and go to state 67
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENOS           [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! POR             [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! RESTO           [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENQUE          [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAYQUE          [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MEIQUE          [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAIQUE          [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! PAND            [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! XORR            [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTI          [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTD          [ reduce using rule 100 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! BOR             [ shift and go to state 68 ]


state 127

    (101) expresion_bit_bit -> expresion XORR expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    AND             reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .)
    OR              reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .)
    XOR             reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .)
    BOR             reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .)
    XORR            reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .)
    PTCOMA          reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .)
    PARDER          reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .)
    COMA            reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .)
    DOSP            reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    PAND            shift and go to state 67
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71

  ! MAS             [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENOS           [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! POR             [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! RESTO           [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENQUE          [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAYQUE          [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MEIQUE          [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAIQUE          [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! IGUALQUE        [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! PAND            [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTI          [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTD          [ reduce using rule 101 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]


state 128

    (102) expresion_bit_bit -> expresion SHIFTI expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAYQUE          reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MEIQUE          reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAIQUE          reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    IGUALQUE        reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    NIGUALQUE       reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    AND             reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    OR              reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XOR             reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PAND            reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    BOR             reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XORR            reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTI          reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTD          reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PTCOMA          reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PARDER          reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    COMA            reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    DOSP            reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57

  ! MAS             [ reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENOS           [ reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! POR             [ reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! DIVIDIDO        [ reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! RESTO           [ reduce using rule 102 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]
  ! SHIFTI          [ shift and go to state 70 ]
  ! SHIFTD          [ shift and go to state 71 ]


state 129

    (103) expresion_bit_bit -> expresion SHIFTD expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAYQUE          reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MEIQUE          reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAIQUE          reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    IGUALQUE        reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    NIGUALQUE       reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    AND             reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    OR              reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XOR             reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PAND            reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    BOR             reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XORR            reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTI          reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTD          reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PTCOMA          reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PARDER          reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    COMA            reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    DOSP            reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57

  ! MAS             [ reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENOS           [ reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! POR             [ reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! DIVIDIDO        [ reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! RESTO           [ reduce using rule 103 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENQUE          [ shift and go to state 58 ]
  ! MAYQUE          [ shift and go to state 59 ]
  ! MEIQUE          [ shift and go to state 60 ]
  ! MAIQUE          [ shift and go to state 61 ]
  ! IGUALQUE        [ shift and go to state 62 ]
  ! NIGUALQUE       [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! XOR             [ shift and go to state 66 ]
  ! PAND            [ shift and go to state 67 ]
  ! BOR             [ shift and go to state 68 ]
  ! XORR            [ shift and go to state 69 ]
  ! SHIFTI          [ shift and go to state 70 ]
  ! SHIFTD          [ shift and go to state 71 ]


state 130

    (93) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    RESTO           reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    MENQUE          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    MAYQUE          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    MEIQUE          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    MAIQUE          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    NIGUALQUE       reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    XOR             reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    PAND            reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    BOR             reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    XORR            reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    SHIFTI          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    SHIFTD          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    DOSP            reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)


state 131

    (35) acceso_struct -> ID PUNTO ID .

    MAS             reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    MENOS           reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    POR             reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    DIVIDIDO        reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    RESTO           reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    MENQUE          reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    MAYQUE          reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    MEIQUE          reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    MAIQUE          reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    IGUALQUE        reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    NIGUALQUE       reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    AND             reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    OR              reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    XOR             reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    PAND            reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    BOR             reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    XORR            reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    SHIFTI          reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    SHIFTD          reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    PTCOMA          reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    PARDER          reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    COMA            reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    DOSP            reduce using rule 35 (acceso_struct -> ID PUNTO ID .)
    IGUAL           reduce using rule 35 (acceso_struct -> ID PUNTO ID .)


state 132

    (8) definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .

    STRUCT          reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    INT             reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    FLOAT           reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    CHAR            reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    DOOBLE          reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    VOID            reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    $end            reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)


state 133

    (9) declaraciones -> declaraciones declaracion PTCOMA .

    PARDER          reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    INT             reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    FLOAT           reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    CHAR            reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    DOOBLE          reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    VOID            reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)


state 134

    (63) asignacion -> ID IGUAL . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 166
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 135

    (64) asignacion -> ID MAS . MAS

    MAS             shift and go to state 167


state 136

    (65) asignacion -> ID MENOS . MENOS

    MENOS           shift and go to state 168


state 137

    (66) asignacion -> ID ASUMA . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 169
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 138

    (67) asignacion -> ID ARESTA . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 170
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 139

    (68) asignacion -> ID MULTIPLICATIVA . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 171
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 140

    (69) asignacion -> ID DIVIDIDA . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 172
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 141

    (70) asignacion -> ID ARESTO . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 173
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 142

    (71) asignacion -> ID ABOR . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 174
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 143

    (72) asignacion -> ID APAND . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 175
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 144

    (73) asignacion -> ID ASHIFTD . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 176
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 145

    (74) asignacion -> ID ASHIFTI . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 177
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 146

    (75) asignacion -> ID AXORR . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 178
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 147

    (36) ins_etiqueta -> ID DOSP .

    LLAVDER         reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    error           reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    IMPRIMIR        reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    ID              reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    IF              reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    SWITCH          reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    BREAK           reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    SCAN            reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    WHILE           reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    DO              reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    FOR             reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    CONTINUE        reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    GOTO            reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    INT             reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    FLOAT           reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    CHAR            reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    DOOBLE          reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    VOID            reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    DEFAULT         reduce using rule 36 (ins_etiqueta -> ID DOSP .)
    CASE            reduce using rule 36 (ins_etiqueta -> ID DOSP .)


state 148

    (33) declaracion_struct -> ID lista_id .
    (78) lista_id -> lista_id . COMA ID

    PTCOMA          reduce using rule 33 (declaracion_struct -> ID lista_id .)
    COMA            shift and go to state 22


state 149

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .

    STRUCT          reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)


state 150

    (17) instrucciones -> instrucciones instruccion .

    LLAVDER         reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    error           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    IMPRIMIR        reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    SCAN            reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    DO              reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    GOTO            reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    DOOBLE          reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    VOID            reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    DEFAULT         reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    CASE            reduce using rule 17 (instrucciones -> instrucciones instruccion .)


state 151

    (20) instruccion -> asignacion PTCOMA .

    LLAVDER         reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    error           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    IMPRIMIR        reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    IF              reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    SWITCH          reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    BREAK           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    SCAN            reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    WHILE           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    DO              reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    FOR             reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    CONTINUE        reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    GOTO            reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    INT             reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    FLOAT           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    CHAR            reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    DOOBLE          reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    VOID            reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    DEFAULT         reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    CASE            reduce using rule 20 (instruccion -> asignacion PTCOMA .)


state 152

    (21) instruccion -> declaracion PTCOMA .

    LLAVDER         reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    error           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    IMPRIMIR        reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    ID              reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    IF              reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    SWITCH          reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    BREAK           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    SCAN            reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    WHILE           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    DO              reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    FOR             reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    CONTINUE        reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    GOTO            reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    INT             reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    FLOAT           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    CHAR            reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    VOID            reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    DEFAULT         reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    CASE            reduce using rule 21 (instruccion -> declaracion PTCOMA .)


state 153

    (31) instruccion -> declaracion_struct PTCOMA .

    LLAVDER         reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    error           reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    IMPRIMIR        reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    ID              reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    IF              reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    SWITCH          reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    BREAK           reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    SCAN            reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    WHILE           reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    DO              reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    FOR             reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    CONTINUE        reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    GOTO            reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    INT             reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    FLOAT           reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    CHAR            reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    DOOBLE          reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    VOID            reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    DEFAULT         reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)
    CASE            reduce using rule 31 (instruccion -> declaracion_struct PTCOMA .)


state 154

    (61) imprimir_instr -> IMPRIMIR PARIZQ . CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> IMPRIMIR PARIZQ . CADENA PARDER PTCOMA

    CADENA          shift and go to state 179


state 155

    (34) asignacion -> acceso_struct IGUAL . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    acceso_struct                  shift and go to state 41
    expresion                      shift and go to state 180
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34

state 156

    (53) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 181
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 157

    (44) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case LLAVDER
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 182
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 158

    (52) ins_break -> BREAK PTCOMA .

    LLAVDER         reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    error           reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    IMPRIMIR        reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    ID              reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    IF              reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    SWITCH          reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    BREAK           reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    SCAN            reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    WHILE           reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    DO              reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    FOR             reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    GOTO            reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    INT             reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    FLOAT           reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    CHAR            reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    DOOBLE          reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    VOID            reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    DEFAULT         reduce using rule 52 (ins_break -> BREAK PTCOMA .)
    CASE            reduce using rule 52 (ins_break -> BREAK PTCOMA .)


state 159

    (60) ins_scan -> SCAN PARIZQ . CADENA COMA PAND ID PARDER PTCOMA

    CADENA          shift and go to state 183


state 160

    (41) ins_while -> WHILE PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 184
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 161

    (42) ins_while -> DO LLAVIZQ . instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 185
    instruccion                    shift and go to state 83
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 162

    (38) ins_for -> FOR PARIZQ . instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (39) instruccion_for -> . asignacion
    (40) instruccion_for -> . declaracion
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    ID              shift and go to state 189
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion_for                shift and go to state 186
    asignacion                     shift and go to state 187
    declaracion                    shift and go to state 188
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 163

    (43) ins_continue -> CONTINUE PTCOMA .

    LLAVDER         reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    error           reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    IMPRIMIR        reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    SWITCH          reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    SCAN            reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    DO              reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    FOR             reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    GOTO            reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    INT             reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    FLOAT           reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    CHAR            reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    DOOBLE          reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    VOID            reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    DEFAULT         reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)
    CASE            reduce using rule 43 (ins_continue -> CONTINUE PTCOMA .)


state 164

    (37) ins_goto -> GOTO ID . PTCOMA

    PTCOMA          shift and go to state 190


state 165

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         shift and go to state 191
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 48
    instruccion                    shift and go to state 150
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99

state 166

    (63) asignacion -> ID IGUAL expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 63 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 63 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 167

    (64) asignacion -> ID MAS MAS .

    PTCOMA          reduce using rule 64 (asignacion -> ID MAS MAS .)
    PARDER          reduce using rule 64 (asignacion -> ID MAS MAS .)


state 168

    (65) asignacion -> ID MENOS MENOS .

    PTCOMA          reduce using rule 65 (asignacion -> ID MENOS MENOS .)
    PARDER          reduce using rule 65 (asignacion -> ID MENOS MENOS .)


state 169

    (66) asignacion -> ID ASUMA expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 66 (asignacion -> ID ASUMA expresion .)
    PARDER          reduce using rule 66 (asignacion -> ID ASUMA expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 170

    (67) asignacion -> ID ARESTA expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 67 (asignacion -> ID ARESTA expresion .)
    PARDER          reduce using rule 67 (asignacion -> ID ARESTA expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 171

    (68) asignacion -> ID MULTIPLICATIVA expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 68 (asignacion -> ID MULTIPLICATIVA expresion .)
    PARDER          reduce using rule 68 (asignacion -> ID MULTIPLICATIVA expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 172

    (69) asignacion -> ID DIVIDIDA expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 69 (asignacion -> ID DIVIDIDA expresion .)
    PARDER          reduce using rule 69 (asignacion -> ID DIVIDIDA expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 173

    (70) asignacion -> ID ARESTO expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 70 (asignacion -> ID ARESTO expresion .)
    PARDER          reduce using rule 70 (asignacion -> ID ARESTO expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 174

    (71) asignacion -> ID ABOR expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 71 (asignacion -> ID ABOR expresion .)
    PARDER          reduce using rule 71 (asignacion -> ID ABOR expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 175

    (72) asignacion -> ID APAND expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 72 (asignacion -> ID APAND expresion .)
    PARDER          reduce using rule 72 (asignacion -> ID APAND expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 176

    (73) asignacion -> ID ASHIFTD expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 73 (asignacion -> ID ASHIFTD expresion .)
    PARDER          reduce using rule 73 (asignacion -> ID ASHIFTD expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 177

    (74) asignacion -> ID ASHIFTI expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 74 (asignacion -> ID ASHIFTI expresion .)
    PARDER          reduce using rule 74 (asignacion -> ID ASHIFTI expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 178

    (75) asignacion -> ID AXORR expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 75 (asignacion -> ID AXORR expresion .)
    PARDER          reduce using rule 75 (asignacion -> ID AXORR expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 179

    (61) imprimir_instr -> IMPRIMIR PARIZQ CADENA . COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> IMPRIMIR PARIZQ CADENA . PARDER PTCOMA

    COMA            shift and go to state 192
    PARDER          shift and go to state 193


state 180

    (34) asignacion -> acceso_struct IGUAL expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 34 (asignacion -> acceso_struct IGUAL expresion .)
    PARDER          reduce using rule 34 (asignacion -> acceso_struct IGUAL expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 181

    (53) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 194
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 182

    (44) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case LLAVDER
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 195
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 183

    (60) ins_scan -> SCAN PARIZQ CADENA . COMA PAND ID PARDER PTCOMA

    COMA            shift and go to state 196


state 184

    (41) ins_while -> WHILE PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 197
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 185

    (42) ins_while -> DO LLAVIZQ instrucciones . LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         shift and go to state 198
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 150
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 186

    (38) ins_for -> FOR PARIZQ instruccion_for . PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PTCOMA          shift and go to state 199


state 187

    (39) instruccion_for -> asignacion .

    PTCOMA          reduce using rule 39 (instruccion_for -> asignacion .)


state 188

    (40) instruccion_for -> declaracion .

    PTCOMA          reduce using rule 40 (instruccion_for -> declaracion .)


state 189

    (63) asignacion -> ID . IGUAL expresion
    (64) asignacion -> ID . MAS MAS
    (65) asignacion -> ID . MENOS MENOS
    (66) asignacion -> ID . ASUMA expresion
    (67) asignacion -> ID . ARESTA expresion
    (68) asignacion -> ID . MULTIPLICATIVA expresion
    (69) asignacion -> ID . DIVIDIDA expresion
    (70) asignacion -> ID . ARESTO expresion
    (71) asignacion -> ID . ABOR expresion
    (72) asignacion -> ID . APAND expresion
    (73) asignacion -> ID . ASHIFTD expresion
    (74) asignacion -> ID . ASHIFTI expresion
    (75) asignacion -> ID . AXORR expresion
    (35) acceso_struct -> ID . PUNTO ID

    IGUAL           shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    ASUMA           shift and go to state 137
    ARESTA          shift and go to state 138
    MULTIPLICATIVA  shift and go to state 139
    DIVIDIDA        shift and go to state 140
    ARESTO          shift and go to state 141
    ABOR            shift and go to state 142
    APAND           shift and go to state 143
    ASHIFTD         shift and go to state 144
    ASHIFTI         shift and go to state 145
    AXORR           shift and go to state 146
    PUNTO           shift and go to state 73


state 190

    (37) ins_goto -> GOTO ID PTCOMA .

    LLAVDER         reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    error           reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    IMPRIMIR        reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    ID              reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    IF              reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    SWITCH          reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    BREAK           reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    SCAN            reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    WHILE           reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    DO              reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    FOR             reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    CONTINUE        reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    GOTO            reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    INT             reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    FLOAT           reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    CHAR            reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    DOOBLE          reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    VOID            reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    DEFAULT         reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)
    CASE            reduce using rule 37 (ins_goto -> GOTO ID PTCOMA .)


state 191

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .

    STRUCT          reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)


state 192

    (61) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA . expresiones PARDER PTCOMA
    (85) expresiones -> . expresiones COMA expresion
    (86) expresiones -> . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresiones                    shift and go to state 200
    expresion                      shift and go to state 201
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 193

    (62) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER . PTCOMA

    PTCOMA          shift and go to state 202


state 194

    (53) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif

    LLAVIZQ         shift and go to state 203


state 195

    (44) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case LLAVDER

    LLAVIZQ         shift and go to state 204


state 196

    (60) ins_scan -> SCAN PARIZQ CADENA COMA . PAND ID PARDER PTCOMA

    PAND            shift and go to state 205


state 197

    (41) ins_while -> WHILE PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 206


state 198

    (42) ins_while -> DO LLAVIZQ instrucciones LLAVDER . WHILE PARIZQ expresion PARDER PTCOMA

    WHILE           shift and go to state 207


state 199

    (38) ins_for -> FOR PARIZQ instruccion_for PTCOMA . expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 208
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 200

    (61) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones . PARDER PTCOMA
    (85) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 210
    COMA            shift and go to state 209


state 201

    (86) expresiones -> expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          reduce using rule 86 (expresiones -> expresion .)
    COMA            reduce using rule 86 (expresiones -> expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 202

    (62) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .

    LLAVDER         reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    error           reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    ID              reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IF              reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    SWITCH          reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    BREAK           reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    SCAN            reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    WHILE           reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DO              reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    FOR             reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CONTINUE        reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    GOTO            reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    INT             reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    FLOAT           reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CHAR            reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DOOBLE          reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    VOID            reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DEFAULT         reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CASE            reduce using rule 62 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)


state 203

    (53) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (54) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 211
    instruccion                    shift and go to state 83
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 204

    (44) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case default_ins LLAVDER
    (45) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case LLAVDER
    (46) lista_case -> . lista_case caso
    (47) lista_case -> . caso
    (48) caso -> . CASE expresion DOSP instrucciones
    (49) caso -> . CASE expresion DOSP

    CASE            shift and go to state 214

    lista_case                     shift and go to state 212
    caso                           shift and go to state 213

state 205

    (60) ins_scan -> SCAN PARIZQ CADENA COMA PAND . ID PARDER PTCOMA

    ID              shift and go to state 215


state 206

    (41) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 216
    instruccion                    shift and go to state 83
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 207

    (42) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 217


state 208

    (38) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion . PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 218
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 209

    (85) expresiones -> expresiones COMA . expresion
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 219
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 210

    (61) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 220


state 211

    (53) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (54) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         shift and go to state 221
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 150
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 212

    (44) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . default_ins LLAVDER
    (45) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . LLAVDER
    (46) lista_case -> lista_case . caso
    (50) default_ins -> . DEFAULT DOSP instrucciones
    (51) default_ins -> . DEFAULT DOSP
    (48) caso -> . CASE expresion DOSP instrucciones
    (49) caso -> . CASE expresion DOSP

    LLAVDER         shift and go to state 223
    DEFAULT         shift and go to state 225
    CASE            shift and go to state 214

    default_ins                    shift and go to state 222
    caso                           shift and go to state 224

state 213

    (47) lista_case -> caso .

    LLAVDER         reduce using rule 47 (lista_case -> caso .)
    DEFAULT         reduce using rule 47 (lista_case -> caso .)
    CASE            reduce using rule 47 (lista_case -> caso .)


state 214

    (48) caso -> CASE . expresion DOSP instrucciones
    (49) caso -> CASE . expresion DOSP
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 226
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 215

    (60) ins_scan -> SCAN PARIZQ CADENA COMA PAND ID . PARDER PTCOMA

    PARDER          shift and go to state 227


state 216

    (41) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         shift and go to state 228
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 150
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 217

    (42) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ . expresion PARDER PTCOMA
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 229
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 218

    (38) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA . asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (35) acceso_struct -> . ID PUNTO ID

    ID              shift and go to state 189

    asignacion                     shift and go to state 230
    acceso_struct                  shift and go to state 99

state 219

    (85) expresiones -> expresiones COMA expresion .
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          reduce using rule 85 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 85 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 220

    (61) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .

    LLAVDER         reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    error           reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    SWITCH          reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    SCAN            reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DO              reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    FOR             reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    GOTO            reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    INT             reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    FLOAT           reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CHAR            reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DOOBLE          reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    VOID            reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DEFAULT         reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CASE            reduce using rule 61 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)


state 221

    (53) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .
    (54) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif
    (57) lelseif -> . lelseif elseif
    (58) lelseif -> . elseif
    (59) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVDER         reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 53 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 231

    lelseif                        shift and go to state 232
    elseif                         shift and go to state 233

state 222

    (44) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins . LLAVDER

    LLAVDER         shift and go to state 234


state 223

    (45) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .

    LLAVDER         reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    error           reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IMPRIMIR        reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    ID              reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IF              reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    SWITCH          reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    BREAK           reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    SCAN            reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    WHILE           reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DO              reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    FOR             reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CONTINUE        reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    GOTO            reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    INT             reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    FLOAT           reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CHAR            reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DOOBLE          reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    VOID            reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DEFAULT         reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CASE            reduce using rule 45 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)


state 224

    (46) lista_case -> lista_case caso .

    LLAVDER         reduce using rule 46 (lista_case -> lista_case caso .)
    DEFAULT         reduce using rule 46 (lista_case -> lista_case caso .)
    CASE            reduce using rule 46 (lista_case -> lista_case caso .)


state 225

    (50) default_ins -> DEFAULT . DOSP instrucciones
    (51) default_ins -> DEFAULT . DOSP

    DOSP            shift and go to state 235


state 226

    (48) caso -> CASE expresion . DOSP instrucciones
    (49) caso -> CASE expresion . DOSP
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    DOSP            shift and go to state 236
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 227

    (60) ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER . PTCOMA

    PTCOMA          shift and go to state 237


state 228

    (41) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 41 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)


state 229

    (42) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion . PARDER PTCOMA
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 238
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 230

    (38) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 239


state 231

    (54) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER
    (59) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 241
    IF              shift and go to state 240


state 232

    (55) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif . ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .
    (57) lelseif -> lelseif . elseif
    (59) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    ELSE            shift and go to state 242
    LLAVDER         reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    error           reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IMPRIMIR        reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    ID              reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IF              reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    SWITCH          reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    BREAK           reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    SCAN            reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    WHILE           reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DO              reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    FOR             reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CONTINUE        reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    GOTO            reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    INT             reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    FLOAT           reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CHAR            reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DOOBLE          reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    VOID            reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DEFAULT         reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CASE            reduce using rule 56 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)

    elseif                         shift and go to state 243

state 233

    (58) lelseif -> elseif .

    ELSE            reduce using rule 58 (lelseif -> elseif .)
    LLAVDER         reduce using rule 58 (lelseif -> elseif .)
    error           reduce using rule 58 (lelseif -> elseif .)
    IMPRIMIR        reduce using rule 58 (lelseif -> elseif .)
    ID              reduce using rule 58 (lelseif -> elseif .)
    IF              reduce using rule 58 (lelseif -> elseif .)
    SWITCH          reduce using rule 58 (lelseif -> elseif .)
    BREAK           reduce using rule 58 (lelseif -> elseif .)
    SCAN            reduce using rule 58 (lelseif -> elseif .)
    WHILE           reduce using rule 58 (lelseif -> elseif .)
    DO              reduce using rule 58 (lelseif -> elseif .)
    FOR             reduce using rule 58 (lelseif -> elseif .)
    CONTINUE        reduce using rule 58 (lelseif -> elseif .)
    GOTO            reduce using rule 58 (lelseif -> elseif .)
    INT             reduce using rule 58 (lelseif -> elseif .)
    FLOAT           reduce using rule 58 (lelseif -> elseif .)
    CHAR            reduce using rule 58 (lelseif -> elseif .)
    DOOBLE          reduce using rule 58 (lelseif -> elseif .)
    VOID            reduce using rule 58 (lelseif -> elseif .)
    DEFAULT         reduce using rule 58 (lelseif -> elseif .)
    CASE            reduce using rule 58 (lelseif -> elseif .)


state 234

    (44) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .

    LLAVDER         reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    error           reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IMPRIMIR        reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    ID              reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IF              reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    SWITCH          reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    BREAK           reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    SCAN            reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    WHILE           reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DO              reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    FOR             reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CONTINUE        reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    GOTO            reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    INT             reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    FLOAT           reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CHAR            reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DOOBLE          reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    VOID            reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DEFAULT         reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CASE            reduce using rule 44 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)


state 235

    (50) default_ins -> DEFAULT DOSP . instrucciones
    (51) default_ins -> DEFAULT DOSP .
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         reduce using rule 51 (default_ins -> DEFAULT DOSP .)
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 244
    instruccion                    shift and go to state 83
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 236

    (48) caso -> CASE expresion DOSP . instrucciones
    (49) caso -> CASE expresion DOSP .
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         reduce using rule 49 (caso -> CASE expresion DOSP .)
    DEFAULT         reduce using rule 49 (caso -> CASE expresion DOSP .)
    CASE            reduce using rule 49 (caso -> CASE expresion DOSP .)
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 245
    instruccion                    shift and go to state 83
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 237

    (60) ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .

    LLAVDER         reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    error           reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    ID              reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    IF              reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    SWITCH          reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    BREAK           reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    SCAN            reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    WHILE           reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    DO              reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    FOR             reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    CONTINUE        reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    GOTO            reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    INT             reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    FLOAT           reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    CHAR            reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    DOOBLE          reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    VOID            reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    DEFAULT         reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    CASE            reduce using rule 60 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)


state 238

    (42) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 246


state 239

    (38) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 247


state 240

    (59) elseif -> ELSE IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 248


state 241

    (54) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 249
    instruccion                    shift and go to state 83
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 242

    (55) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE . LLAVIZQ instrucciones LLAVDER
    (59) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 250
    IF              shift and go to state 240


state 243

    (57) lelseif -> lelseif elseif .

    ELSE            reduce using rule 57 (lelseif -> lelseif elseif .)
    LLAVDER         reduce using rule 57 (lelseif -> lelseif elseif .)
    error           reduce using rule 57 (lelseif -> lelseif elseif .)
    IMPRIMIR        reduce using rule 57 (lelseif -> lelseif elseif .)
    ID              reduce using rule 57 (lelseif -> lelseif elseif .)
    IF              reduce using rule 57 (lelseif -> lelseif elseif .)
    SWITCH          reduce using rule 57 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 57 (lelseif -> lelseif elseif .)
    SCAN            reduce using rule 57 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 57 (lelseif -> lelseif elseif .)
    DO              reduce using rule 57 (lelseif -> lelseif elseif .)
    FOR             reduce using rule 57 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 57 (lelseif -> lelseif elseif .)
    GOTO            reduce using rule 57 (lelseif -> lelseif elseif .)
    INT             reduce using rule 57 (lelseif -> lelseif elseif .)
    FLOAT           reduce using rule 57 (lelseif -> lelseif elseif .)
    CHAR            reduce using rule 57 (lelseif -> lelseif elseif .)
    DOOBLE          reduce using rule 57 (lelseif -> lelseif elseif .)
    VOID            reduce using rule 57 (lelseif -> lelseif elseif .)
    DEFAULT         reduce using rule 57 (lelseif -> lelseif elseif .)
    CASE            reduce using rule 57 (lelseif -> lelseif elseif .)


state 244

    (50) default_ins -> DEFAULT DOSP instrucciones .
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         reduce using rule 50 (default_ins -> DEFAULT DOSP instrucciones .)
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 150
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 245

    (48) caso -> CASE expresion DOSP instrucciones .
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         reduce using rule 48 (caso -> CASE expresion DOSP instrucciones .)
    DEFAULT         reduce using rule 48 (caso -> CASE expresion DOSP instrucciones .)
    CASE            reduce using rule 48 (caso -> CASE expresion DOSP instrucciones .)
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 150
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 246

    (42) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .

    LLAVDER         reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    error           reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    SWITCH          reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    SCAN            reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DO              reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    GOTO            reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    INT             reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    FLOAT           reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DOOBLE          reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    VOID            reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DEFAULT         reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CASE            reduce using rule 42 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)


state 247

    (38) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    asignacion                     shift and go to state 85
    instrucciones                  shift and go to state 251
    instruccion                    shift and go to state 83
    imprimir_instr                 shift and go to state 84
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 248

    (59) elseif -> ELSE IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (87) expresion -> . primitiva
    (88) expresion -> . expresion_numerica
    (89) expresion -> . expresion_relacional
    (90) expresion -> . expresion_unaria
    (91) expresion -> . expresion_logica
    (92) expresion -> . expresion_bit_bit
    (93) expresion -> . PARIZQ expresion PARDER
    (116) primitiva -> . ENTERO
    (117) primitiva -> . DECIMAL
    (118) primitiva -> . CADENA
    (119) primitiva -> . CADENAR_CHAR
    (120) primitiva -> . ID
    (121) primitiva -> . acceso_struct
    (111) expresion_numerica -> . expresion MAS expresion
    (112) expresion_numerica -> . expresion MENOS expresion
    (113) expresion_numerica -> . expresion POR expresion
    (114) expresion_numerica -> . expresion DIVIDIDO expresion
    (115) expresion_numerica -> . expresion RESTO expresion
    (105) expresion_relacional -> . expresion MENQUE expresion
    (106) expresion_relacional -> . expresion MAYQUE expresion
    (107) expresion_relacional -> . expresion MEIQUE expresion
    (108) expresion_relacional -> . expresion MAIQUE expresion
    (109) expresion_relacional -> . expresion IGUALQUE expresion
    (110) expresion_relacional -> . expresion NIGUALQUE expresion
    (94) expresion_unaria -> . MENOS expresion
    (95) expresion_logica -> . expresion AND expresion
    (96) expresion_logica -> . expresion OR expresion
    (97) expresion_logica -> . expresion XOR expresion
    (98) expresion_logica -> . NOT expresion
    (99) expresion_bit_bit -> . expresion PAND expresion
    (100) expresion_bit_bit -> . expresion BOR expresion
    (101) expresion_bit_bit -> . expresion XORR expresion
    (102) expresion_bit_bit -> . expresion SHIFTI expresion
    (103) expresion_bit_bit -> . expresion SHIFTD expresion
    (104) expresion_bit_bit -> . NOTR expresion
    (35) acceso_struct -> . ID PUNTO ID

    PARIZQ          shift and go to state 35
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    CADENA          shift and go to state 38
    CADENAR_CHAR    shift and go to state 39
    ID              shift and go to state 40
    MENOS           shift and go to state 42
    NOT             shift and go to state 43
    NOTR            shift and go to state 44

    expresion                      shift and go to state 252
    primitiva                      shift and go to state 29
    expresion_numerica             shift and go to state 30
    expresion_relacional           shift and go to state 31
    expresion_unaria               shift and go to state 32
    expresion_logica               shift and go to state 33
    expresion_bit_bit              shift and go to state 34
    acceso_struct                  shift and go to state 41

state 249

    (54) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         shift and go to state 253
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 150
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 250

    (55) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 254
    instruccion                    shift and go to state 83
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 251

    (38) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         shift and go to state 255
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    asignacion                     shift and go to state 85
    instruccion                    shift and go to state 150
    imprimir_instr                 shift and go to state 84
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 252

    (59) elseif -> ELSE IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (111) expresion_numerica -> expresion . MAS expresion
    (112) expresion_numerica -> expresion . MENOS expresion
    (113) expresion_numerica -> expresion . POR expresion
    (114) expresion_numerica -> expresion . DIVIDIDO expresion
    (115) expresion_numerica -> expresion . RESTO expresion
    (105) expresion_relacional -> expresion . MENQUE expresion
    (106) expresion_relacional -> expresion . MAYQUE expresion
    (107) expresion_relacional -> expresion . MEIQUE expresion
    (108) expresion_relacional -> expresion . MAIQUE expresion
    (109) expresion_relacional -> expresion . IGUALQUE expresion
    (110) expresion_relacional -> expresion . NIGUALQUE expresion
    (95) expresion_logica -> expresion . AND expresion
    (96) expresion_logica -> expresion . OR expresion
    (97) expresion_logica -> expresion . XOR expresion
    (99) expresion_bit_bit -> expresion . PAND expresion
    (100) expresion_bit_bit -> expresion . BOR expresion
    (101) expresion_bit_bit -> expresion . XORR expresion
    (102) expresion_bit_bit -> expresion . SHIFTI expresion
    (103) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 256
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    POR             shift and go to state 55
    DIVIDIDO        shift and go to state 56
    RESTO           shift and go to state 57
    MENQUE          shift and go to state 58
    MAYQUE          shift and go to state 59
    MEIQUE          shift and go to state 60
    MAIQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    XOR             shift and go to state 66
    PAND            shift and go to state 67
    BOR             shift and go to state 68
    XORR            shift and go to state 69
    SHIFTI          shift and go to state 70
    SHIFTD          shift and go to state 71


state 253

    (54) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 54 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)


state 254

    (55) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         shift and go to state 257
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 150
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 255

    (38) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 38 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)


state 256

    (59) elseif -> ELSE IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 258


state 257

    (55) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 55 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)


state 258

    (59) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 259
    instruccion                    shift and go to state 83
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 259

    (59) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_scan
    (26) instruccion -> . ins_while
    (27) instruccion -> . ins_for
    (28) instruccion -> . ins_continue
    (29) instruccion -> . ins_etiqueta
    (30) instruccion -> . ins_goto
    (31) instruccion -> . declaracion_struct PTCOMA
    (32) instruccion -> . error
    (61) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (62) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (34) asignacion -> . acceso_struct IGUAL expresion
    (63) asignacion -> . ID IGUAL expresion
    (64) asignacion -> . ID MAS MAS
    (65) asignacion -> . ID MENOS MENOS
    (66) asignacion -> . ID ASUMA expresion
    (67) asignacion -> . ID ARESTA expresion
    (68) asignacion -> . ID MULTIPLICATIVA expresion
    (69) asignacion -> . ID DIVIDIDA expresion
    (70) asignacion -> . ID ARESTO expresion
    (71) asignacion -> . ID ABOR expresion
    (72) asignacion -> . ID APAND expresion
    (73) asignacion -> . ID ASHIFTD expresion
    (74) asignacion -> . ID ASHIFTI expresion
    (75) asignacion -> . ID AXORR expresion
    (76) declaracion -> . TIPO lista_id
    (77) declaracion -> . TIPO lista_id IGUAL expresion
    (53) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (54) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (55) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (56) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (44) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (45) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (52) ins_break -> . BREAK PTCOMA
    (60) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (41) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (38) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) ins_continue -> . CONTINUE PTCOMA
    (36) ins_etiqueta -> . ID DOSP
    (37) ins_goto -> . GOTO ID PTCOMA
    (33) declaracion_struct -> . ID lista_id
    (35) acceso_struct -> . ID PUNTO ID
    (80) TIPO -> . INT
    (81) TIPO -> . FLOAT
    (82) TIPO -> . CHAR
    (83) TIPO -> . DOOBLE
    (84) TIPO -> . VOID

    LLAVDER         shift and go to state 260
    error           shift and go to state 97
    IMPRIMIR        shift and go to state 98
    ID              shift and go to state 81
    IF              shift and go to state 100
    SWITCH          shift and go to state 101
    BREAK           shift and go to state 102
    SCAN            shift and go to state 103
    WHILE           shift and go to state 104
    DO              shift and go to state 105
    FOR             shift and go to state 106
    CONTINUE        shift and go to state 107
    GOTO            shift and go to state 108
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 150
    imprimir_instr                 shift and go to state 84
    asignacion                     shift and go to state 85
    declaracion                    shift and go to state 86
    sentencia_if                   shift and go to state 87
    sentencia_switch               shift and go to state 88
    ins_break                      shift and go to state 89
    ins_scan                       shift and go to state 90
    ins_while                      shift and go to state 91
    ins_for                        shift and go to state 92
    ins_continue                   shift and go to state 93
    ins_etiqueta                   shift and go to state 94
    ins_goto                       shift and go to state 95
    declaracion_struct             shift and go to state 96
    acceso_struct                  shift and go to state 99
    TIPO                           shift and go to state 48

state 260

    (59) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    ELSE            reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 59 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 124 resolved as shift
WARNING: shift/reduce conflict for POR in state 124 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 124 resolved as shift
WARNING: shift/reduce conflict for RESTO in state 124 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 124 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 124 resolved as shift
WARNING: shift/reduce conflict for MEIQUE in state 124 resolved as shift
WARNING: shift/reduce conflict for MAIQUE in state 124 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 124 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 124 resolved as shift
WARNING: shift/reduce conflict for AND in state 124 resolved as shift
WARNING: shift/reduce conflict for OR in state 124 resolved as shift
WARNING: shift/reduce conflict for XOR in state 124 resolved as shift
WARNING: shift/reduce conflict for PAND in state 124 resolved as shift
WARNING: shift/reduce conflict for BOR in state 124 resolved as shift
WARNING: shift/reduce conflict for XORR in state 124 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 124 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 124 resolved as shift
