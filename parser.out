Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORDER
    CORIZQ
    PUNTO
    UNARIO

Grammar

Rule 0     S' -> init
Rule 1     init -> globales
Rule 2     init -> empty
Rule 3     globales -> globales iglobal
Rule 4     globales -> iglobal
Rule 5     iglobal -> funcion
Rule 6     iglobal -> declaracion PTCOMA
Rule 7     empty -> <empty>
Rule 8     funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
Rule 9     funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
Rule 10    parametros -> parametros COMA parametro
Rule 11    parametros -> parametro
Rule 12    parametro -> TIPO ID
Rule 13    instrucciones -> instrucciones instruccion
Rule 14    instrucciones -> instruccion
Rule 15    instruccion -> imprimir_instr
Rule 16    instruccion -> asignacion PTCOMA
Rule 17    instruccion -> declaracion PTCOMA
Rule 18    instruccion -> sentencia_if
Rule 19    instruccion -> sentencia_switch
Rule 20    instruccion -> ins_break
Rule 21    instruccion -> ins_scan
Rule 22    instruccion -> ins_while
Rule 23    instruccion -> ins_for
Rule 24    instruccion -> ins_continue
Rule 25    instruccion -> error
Rule 26    ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
Rule 27    instruccion_for -> asignacion
Rule 28    instruccion_for -> declaracion
Rule 29    ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 30    ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
Rule 31    ins_continue -> CONTINUE PTCOMA
Rule 32    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
Rule 33    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
Rule 34    lista_case -> lista_case caso
Rule 35    lista_case -> caso
Rule 36    caso -> CASE expresion DOSP instrucciones
Rule 37    caso -> CASE expresion DOSP
Rule 38    default_ins -> DEFAULT DOSP instrucciones
Rule 39    default_ins -> DEFAULT DOSP
Rule 40    ins_break -> BREAK PTCOMA
Rule 41    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 42    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 43    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
Rule 44    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
Rule 45    lelseif -> lelseif elseif
Rule 46    lelseif -> elseif
Rule 47    elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 48    ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
Rule 49    imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
Rule 50    imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA
Rule 51    asignacion -> ID IGUAL expresion
Rule 52    asignacion -> ID MAS MAS
Rule 53    asignacion -> ID MENOS MENOS
Rule 54    asignacion -> ID ASUMA expresion
Rule 55    asignacion -> ID ARESTA expresion
Rule 56    asignacion -> ID MULTIPLICATIVA expresion
Rule 57    asignacion -> ID DIVIDIDA expresion
Rule 58    asignacion -> ID ARESTO expresion
Rule 59    asignacion -> ID ABOR expresion
Rule 60    asignacion -> ID APAND expresion
Rule 61    asignacion -> ID ASHIFTD expresion
Rule 62    asignacion -> ID ASHIFTI expresion
Rule 63    asignacion -> ID AXORR expresion
Rule 64    declaracion -> TIPO lista_id
Rule 65    declaracion -> TIPO lista_id IGUAL expresion
Rule 66    lista_id -> lista_id COMA ID
Rule 67    lista_id -> ID
Rule 68    TIPO -> INT
Rule 69    TIPO -> FLOAT
Rule 70    TIPO -> CHAR
Rule 71    TIPO -> VOID
Rule 72    expresiones -> expresiones COMA expresion
Rule 73    expresiones -> expresion
Rule 74    expresion -> primitiva
Rule 75    expresion -> expresion_numerica
Rule 76    expresion -> expresion_relacional
Rule 77    expresion -> expresion_unaria
Rule 78    expresion -> expresion_logica
Rule 79    expresion -> expresion_bit_bit
Rule 80    expresion -> PARIZQ expresion PARDER
Rule 81    expresion_unaria -> MENOS expresion
Rule 82    expresion_logica -> expresion AND expresion
Rule 83    expresion_logica -> expresion OR expresion
Rule 84    expresion_logica -> expresion XOR expresion
Rule 85    expresion_logica -> NOT expresion
Rule 86    expresion_bit_bit -> expresion PAND expresion
Rule 87    expresion_bit_bit -> expresion BOR expresion
Rule 88    expresion_bit_bit -> expresion XORR expresion
Rule 89    expresion_bit_bit -> expresion SHIFTI expresion
Rule 90    expresion_bit_bit -> expresion SHIFTD expresion
Rule 91    expresion_bit_bit -> NOTR expresion
Rule 92    expresion_relacional -> expresion MENQUE expresion
Rule 93    expresion_relacional -> expresion MAYQUE expresion
Rule 94    expresion_relacional -> expresion MEIQUE expresion
Rule 95    expresion_relacional -> expresion MAIQUE expresion
Rule 96    expresion_relacional -> expresion IGUALQUE expresion
Rule 97    expresion_relacional -> expresion NIGUALQUE expresion
Rule 98    expresion_numerica -> expresion MAS expresion
Rule 99    expresion_numerica -> expresion MENOS expresion
Rule 100   expresion_numerica -> expresion POR expresion
Rule 101   expresion_numerica -> expresion DIVIDIDO expresion
Rule 102   expresion_numerica -> expresion RESTO expresion
Rule 103   primitiva -> ENTERO
Rule 104   primitiva -> DECIMAL
Rule 105   primitiva -> CADENA
Rule 106   primitiva -> CADENAR_CHAR
Rule 107   primitiva -> ID

Terminals, with rules where they appear

ABOR                 : 59
AND                  : 82
APAND                : 60
ARESTA               : 55
ARESTO               : 58
ASHIFTD              : 61
ASHIFTI              : 62
ASUMA                : 54
AXORR                : 63
BOR                  : 87
BREAK                : 40
CADENA               : 48 49 50 105
CADENAR_CHAR         : 106
CASE                 : 36 37
CHAR                 : 70
COMA                 : 10 48 49 66 72
CONTINUE             : 31
CORDER               : 
CORIZQ               : 
DECIMAL              : 104
DEFAULT              : 38 39
DIVIDIDA             : 57
DIVIDIDO             : 101
DO                   : 30
DOSP                 : 36 37 38 39
ELSE                 : 42 43 47
ENTERO               : 103
FLOAT                : 69
FOR                  : 26
ID                   : 8 9 12 48 51 52 53 54 55 56 57 58 59 60 61 62 63 66 67 107
IF                   : 41 42 43 44 47
IGUAL                : 51 65
IGUALQUE             : 96
IMPRIMIR             : 49 50
INT                  : 68
LLAVDER              : 8 9 26 29 30 32 33 41 42 42 43 43 44 47
LLAVIZQ              : 8 9 26 29 30 32 33 41 42 42 43 43 44 47
MAIQUE               : 95
MAS                  : 52 52 98
MAYQUE               : 93
MEIQUE               : 94
MENOS                : 53 53 81 99
MENQUE               : 92
MULTIPLICATIVA       : 56
NIGUALQUE            : 97
NOT                  : 85
NOTR                 : 91
OR                   : 83
PAND                 : 48 86
PARDER               : 8 9 26 29 30 32 33 41 42 43 44 47 48 49 50 80
PARIZQ               : 8 9 26 29 30 32 33 41 42 43 44 47 48 49 50 80
POR                  : 100
PTCOMA               : 6 16 17 26 26 30 31 40 48 49 50
PUNTO                : 
RESTO                : 102
SCAN                 : 48
SHIFTD               : 90
SHIFTI               : 89
SWITCH               : 32 33
UNARIO               : 
VOID                 : 71
WHILE                : 29 30
XOR                  : 84
XORR                 : 88
error                : 25

Nonterminals, with rules where they appear

TIPO                 : 8 9 12 64 65
asignacion           : 16 26 27
caso                 : 34 35
declaracion          : 6 17 28
default_ins          : 32
elseif               : 45 46
empty                : 2
expresion            : 26 29 30 32 33 36 37 41 42 43 44 47 51 54 55 56 57 58 59 60 61 62 63 65 72 73 80 81 82 82 83 83 84 84 85 86 86 87 87 88 88 89 89 90 90 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102
expresion_bit_bit    : 79
expresion_logica     : 78
expresion_numerica   : 75
expresion_relacional : 76
expresion_unaria     : 77
expresiones          : 49 72
funcion              : 5
globales             : 1 3
iglobal              : 3 4
imprimir_instr       : 15
init                 : 0
ins_break            : 20
ins_continue         : 24
ins_for              : 23
ins_scan             : 21
ins_while            : 22
instruccion          : 13 14
instruccion_for      : 26
instrucciones        : 8 9 13 26 29 30 36 38 41 42 42 43 43 44 47
lelseif              : 43 44 45
lista_case           : 32 33 34
lista_id             : 64 65 66
parametro            : 10 11
parametros           : 9 10
primitiva            : 74
sentencia_if         : 18
sentencia_switch     : 19

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . globales
    (2) init -> . empty
    (3) globales -> . globales iglobal
    (4) globales -> . iglobal
    (7) empty -> .
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion PTCOMA
    (8) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (9) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    $end            reduce using rule 7 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    init                           shift and go to state 1
    globales                       shift and go to state 2
    empty                          shift and go to state 3
    iglobal                        shift and go to state 4
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    TIPO                           shift and go to state 7

state 1

    (0) S' -> init .



state 2

    (1) init -> globales .
    (3) globales -> globales . iglobal
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion PTCOMA
    (8) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (9) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    $end            reduce using rule 1 (init -> globales .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    iglobal                        shift and go to state 12
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    TIPO                           shift and go to state 7

state 3

    (2) init -> empty .

    $end            reduce using rule 2 (init -> empty .)


state 4

    (4) globales -> iglobal .

    INT             reduce using rule 4 (globales -> iglobal .)
    FLOAT           reduce using rule 4 (globales -> iglobal .)
    CHAR            reduce using rule 4 (globales -> iglobal .)
    VOID            reduce using rule 4 (globales -> iglobal .)
    $end            reduce using rule 4 (globales -> iglobal .)


state 5

    (5) iglobal -> funcion .

    INT             reduce using rule 5 (iglobal -> funcion .)
    FLOAT           reduce using rule 5 (iglobal -> funcion .)
    CHAR            reduce using rule 5 (iglobal -> funcion .)
    VOID            reduce using rule 5 (iglobal -> funcion .)
    $end            reduce using rule 5 (iglobal -> funcion .)


state 6

    (6) iglobal -> declaracion . PTCOMA

    PTCOMA          shift and go to state 13


state 7

    (8) funcion -> TIPO . ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (9) funcion -> TIPO . ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (64) declaracion -> TIPO . lista_id
    (65) declaracion -> TIPO . lista_id IGUAL expresion
    (66) lista_id -> . lista_id COMA ID
    (67) lista_id -> . ID

    ID              shift and go to state 14

    lista_id                       shift and go to state 15

state 8

    (68) TIPO -> INT .

    ID              reduce using rule 68 (TIPO -> INT .)


state 9

    (69) TIPO -> FLOAT .

    ID              reduce using rule 69 (TIPO -> FLOAT .)


state 10

    (70) TIPO -> CHAR .

    ID              reduce using rule 70 (TIPO -> CHAR .)


state 11

    (71) TIPO -> VOID .

    ID              reduce using rule 71 (TIPO -> VOID .)


state 12

    (3) globales -> globales iglobal .

    INT             reduce using rule 3 (globales -> globales iglobal .)
    FLOAT           reduce using rule 3 (globales -> globales iglobal .)
    CHAR            reduce using rule 3 (globales -> globales iglobal .)
    VOID            reduce using rule 3 (globales -> globales iglobal .)
    $end            reduce using rule 3 (globales -> globales iglobal .)


state 13

    (6) iglobal -> declaracion PTCOMA .

    INT             reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    FLOAT           reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    CHAR            reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    VOID            reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    $end            reduce using rule 6 (iglobal -> declaracion PTCOMA .)


state 14

    (8) funcion -> TIPO ID . PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (9) funcion -> TIPO ID . PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (67) lista_id -> ID .

    PARIZQ          shift and go to state 16
    IGUAL           reduce using rule 67 (lista_id -> ID .)
    COMA            reduce using rule 67 (lista_id -> ID .)
    PTCOMA          reduce using rule 67 (lista_id -> ID .)


state 15

    (64) declaracion -> TIPO lista_id .
    (65) declaracion -> TIPO lista_id . IGUAL expresion
    (66) lista_id -> lista_id . COMA ID

    PTCOMA          reduce using rule 64 (declaracion -> TIPO lista_id .)
    IGUAL           shift and go to state 17
    COMA            shift and go to state 18


state 16

    (8) funcion -> TIPO ID PARIZQ . PARDER LLAVIZQ instrucciones LLAVDER
    (9) funcion -> TIPO ID PARIZQ . parametros PARDER LLAVIZQ instrucciones LLAVDER
    (10) parametros -> . parametros COMA parametro
    (11) parametros -> . parametro
    (12) parametro -> . TIPO ID
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    PARDER          shift and go to state 20
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    TIPO                           shift and go to state 19
    parametros                     shift and go to state 21
    parametro                      shift and go to state 22

state 17

    (65) declaracion -> TIPO lista_id IGUAL . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 23
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 18

    (66) lista_id -> lista_id COMA . ID

    ID              shift and go to state 39


state 19

    (12) parametro -> TIPO . ID

    ID              shift and go to state 40


state 20

    (8) funcion -> TIPO ID PARIZQ PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 41


state 21

    (9) funcion -> TIPO ID PARIZQ parametros . PARDER LLAVIZQ instrucciones LLAVDER
    (10) parametros -> parametros . COMA parametro

    PARDER          shift and go to state 42
    COMA            shift and go to state 43


state 22

    (11) parametros -> parametro .

    PARDER          reduce using rule 11 (parametros -> parametro .)
    COMA            reduce using rule 11 (parametros -> parametro .)


state 23

    (65) declaracion -> TIPO lista_id IGUAL expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 65 (declaracion -> TIPO lista_id IGUAL expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 24

    (74) expresion -> primitiva .

    MAS             reduce using rule 74 (expresion -> primitiva .)
    MENOS           reduce using rule 74 (expresion -> primitiva .)
    POR             reduce using rule 74 (expresion -> primitiva .)
    DIVIDIDO        reduce using rule 74 (expresion -> primitiva .)
    RESTO           reduce using rule 74 (expresion -> primitiva .)
    MENQUE          reduce using rule 74 (expresion -> primitiva .)
    MAYQUE          reduce using rule 74 (expresion -> primitiva .)
    MEIQUE          reduce using rule 74 (expresion -> primitiva .)
    MAIQUE          reduce using rule 74 (expresion -> primitiva .)
    IGUALQUE        reduce using rule 74 (expresion -> primitiva .)
    NIGUALQUE       reduce using rule 74 (expresion -> primitiva .)
    AND             reduce using rule 74 (expresion -> primitiva .)
    OR              reduce using rule 74 (expresion -> primitiva .)
    XOR             reduce using rule 74 (expresion -> primitiva .)
    PAND            reduce using rule 74 (expresion -> primitiva .)
    BOR             reduce using rule 74 (expresion -> primitiva .)
    XORR            reduce using rule 74 (expresion -> primitiva .)
    SHIFTI          reduce using rule 74 (expresion -> primitiva .)
    SHIFTD          reduce using rule 74 (expresion -> primitiva .)
    PTCOMA          reduce using rule 74 (expresion -> primitiva .)
    PARDER          reduce using rule 74 (expresion -> primitiva .)
    COMA            reduce using rule 74 (expresion -> primitiva .)
    DOSP            reduce using rule 74 (expresion -> primitiva .)


state 25

    (75) expresion -> expresion_numerica .

    MAS             reduce using rule 75 (expresion -> expresion_numerica .)
    MENOS           reduce using rule 75 (expresion -> expresion_numerica .)
    POR             reduce using rule 75 (expresion -> expresion_numerica .)
    DIVIDIDO        reduce using rule 75 (expresion -> expresion_numerica .)
    RESTO           reduce using rule 75 (expresion -> expresion_numerica .)
    MENQUE          reduce using rule 75 (expresion -> expresion_numerica .)
    MAYQUE          reduce using rule 75 (expresion -> expresion_numerica .)
    MEIQUE          reduce using rule 75 (expresion -> expresion_numerica .)
    MAIQUE          reduce using rule 75 (expresion -> expresion_numerica .)
    IGUALQUE        reduce using rule 75 (expresion -> expresion_numerica .)
    NIGUALQUE       reduce using rule 75 (expresion -> expresion_numerica .)
    AND             reduce using rule 75 (expresion -> expresion_numerica .)
    OR              reduce using rule 75 (expresion -> expresion_numerica .)
    XOR             reduce using rule 75 (expresion -> expresion_numerica .)
    PAND            reduce using rule 75 (expresion -> expresion_numerica .)
    BOR             reduce using rule 75 (expresion -> expresion_numerica .)
    XORR            reduce using rule 75 (expresion -> expresion_numerica .)
    SHIFTI          reduce using rule 75 (expresion -> expresion_numerica .)
    SHIFTD          reduce using rule 75 (expresion -> expresion_numerica .)
    PTCOMA          reduce using rule 75 (expresion -> expresion_numerica .)
    PARDER          reduce using rule 75 (expresion -> expresion_numerica .)
    COMA            reduce using rule 75 (expresion -> expresion_numerica .)
    DOSP            reduce using rule 75 (expresion -> expresion_numerica .)


state 26

    (76) expresion -> expresion_relacional .

    MAS             reduce using rule 76 (expresion -> expresion_relacional .)
    MENOS           reduce using rule 76 (expresion -> expresion_relacional .)
    POR             reduce using rule 76 (expresion -> expresion_relacional .)
    DIVIDIDO        reduce using rule 76 (expresion -> expresion_relacional .)
    RESTO           reduce using rule 76 (expresion -> expresion_relacional .)
    MENQUE          reduce using rule 76 (expresion -> expresion_relacional .)
    MAYQUE          reduce using rule 76 (expresion -> expresion_relacional .)
    MEIQUE          reduce using rule 76 (expresion -> expresion_relacional .)
    MAIQUE          reduce using rule 76 (expresion -> expresion_relacional .)
    IGUALQUE        reduce using rule 76 (expresion -> expresion_relacional .)
    NIGUALQUE       reduce using rule 76 (expresion -> expresion_relacional .)
    AND             reduce using rule 76 (expresion -> expresion_relacional .)
    OR              reduce using rule 76 (expresion -> expresion_relacional .)
    XOR             reduce using rule 76 (expresion -> expresion_relacional .)
    PAND            reduce using rule 76 (expresion -> expresion_relacional .)
    BOR             reduce using rule 76 (expresion -> expresion_relacional .)
    XORR            reduce using rule 76 (expresion -> expresion_relacional .)
    SHIFTI          reduce using rule 76 (expresion -> expresion_relacional .)
    SHIFTD          reduce using rule 76 (expresion -> expresion_relacional .)
    PTCOMA          reduce using rule 76 (expresion -> expresion_relacional .)
    PARDER          reduce using rule 76 (expresion -> expresion_relacional .)
    COMA            reduce using rule 76 (expresion -> expresion_relacional .)
    DOSP            reduce using rule 76 (expresion -> expresion_relacional .)


state 27

    (77) expresion -> expresion_unaria .

    MAS             reduce using rule 77 (expresion -> expresion_unaria .)
    MENOS           reduce using rule 77 (expresion -> expresion_unaria .)
    POR             reduce using rule 77 (expresion -> expresion_unaria .)
    DIVIDIDO        reduce using rule 77 (expresion -> expresion_unaria .)
    RESTO           reduce using rule 77 (expresion -> expresion_unaria .)
    MENQUE          reduce using rule 77 (expresion -> expresion_unaria .)
    MAYQUE          reduce using rule 77 (expresion -> expresion_unaria .)
    MEIQUE          reduce using rule 77 (expresion -> expresion_unaria .)
    MAIQUE          reduce using rule 77 (expresion -> expresion_unaria .)
    IGUALQUE        reduce using rule 77 (expresion -> expresion_unaria .)
    NIGUALQUE       reduce using rule 77 (expresion -> expresion_unaria .)
    AND             reduce using rule 77 (expresion -> expresion_unaria .)
    OR              reduce using rule 77 (expresion -> expresion_unaria .)
    XOR             reduce using rule 77 (expresion -> expresion_unaria .)
    PAND            reduce using rule 77 (expresion -> expresion_unaria .)
    BOR             reduce using rule 77 (expresion -> expresion_unaria .)
    XORR            reduce using rule 77 (expresion -> expresion_unaria .)
    SHIFTI          reduce using rule 77 (expresion -> expresion_unaria .)
    SHIFTD          reduce using rule 77 (expresion -> expresion_unaria .)
    PTCOMA          reduce using rule 77 (expresion -> expresion_unaria .)
    PARDER          reduce using rule 77 (expresion -> expresion_unaria .)
    COMA            reduce using rule 77 (expresion -> expresion_unaria .)
    DOSP            reduce using rule 77 (expresion -> expresion_unaria .)


state 28

    (78) expresion -> expresion_logica .

    MAS             reduce using rule 78 (expresion -> expresion_logica .)
    MENOS           reduce using rule 78 (expresion -> expresion_logica .)
    POR             reduce using rule 78 (expresion -> expresion_logica .)
    DIVIDIDO        reduce using rule 78 (expresion -> expresion_logica .)
    RESTO           reduce using rule 78 (expresion -> expresion_logica .)
    MENQUE          reduce using rule 78 (expresion -> expresion_logica .)
    MAYQUE          reduce using rule 78 (expresion -> expresion_logica .)
    MEIQUE          reduce using rule 78 (expresion -> expresion_logica .)
    MAIQUE          reduce using rule 78 (expresion -> expresion_logica .)
    IGUALQUE        reduce using rule 78 (expresion -> expresion_logica .)
    NIGUALQUE       reduce using rule 78 (expresion -> expresion_logica .)
    AND             reduce using rule 78 (expresion -> expresion_logica .)
    OR              reduce using rule 78 (expresion -> expresion_logica .)
    XOR             reduce using rule 78 (expresion -> expresion_logica .)
    PAND            reduce using rule 78 (expresion -> expresion_logica .)
    BOR             reduce using rule 78 (expresion -> expresion_logica .)
    XORR            reduce using rule 78 (expresion -> expresion_logica .)
    SHIFTI          reduce using rule 78 (expresion -> expresion_logica .)
    SHIFTD          reduce using rule 78 (expresion -> expresion_logica .)
    PTCOMA          reduce using rule 78 (expresion -> expresion_logica .)
    PARDER          reduce using rule 78 (expresion -> expresion_logica .)
    COMA            reduce using rule 78 (expresion -> expresion_logica .)
    DOSP            reduce using rule 78 (expresion -> expresion_logica .)


state 29

    (79) expresion -> expresion_bit_bit .

    MAS             reduce using rule 79 (expresion -> expresion_bit_bit .)
    MENOS           reduce using rule 79 (expresion -> expresion_bit_bit .)
    POR             reduce using rule 79 (expresion -> expresion_bit_bit .)
    DIVIDIDO        reduce using rule 79 (expresion -> expresion_bit_bit .)
    RESTO           reduce using rule 79 (expresion -> expresion_bit_bit .)
    MENQUE          reduce using rule 79 (expresion -> expresion_bit_bit .)
    MAYQUE          reduce using rule 79 (expresion -> expresion_bit_bit .)
    MEIQUE          reduce using rule 79 (expresion -> expresion_bit_bit .)
    MAIQUE          reduce using rule 79 (expresion -> expresion_bit_bit .)
    IGUALQUE        reduce using rule 79 (expresion -> expresion_bit_bit .)
    NIGUALQUE       reduce using rule 79 (expresion -> expresion_bit_bit .)
    AND             reduce using rule 79 (expresion -> expresion_bit_bit .)
    OR              reduce using rule 79 (expresion -> expresion_bit_bit .)
    XOR             reduce using rule 79 (expresion -> expresion_bit_bit .)
    PAND            reduce using rule 79 (expresion -> expresion_bit_bit .)
    BOR             reduce using rule 79 (expresion -> expresion_bit_bit .)
    XORR            reduce using rule 79 (expresion -> expresion_bit_bit .)
    SHIFTI          reduce using rule 79 (expresion -> expresion_bit_bit .)
    SHIFTD          reduce using rule 79 (expresion -> expresion_bit_bit .)
    PTCOMA          reduce using rule 79 (expresion -> expresion_bit_bit .)
    PARDER          reduce using rule 79 (expresion -> expresion_bit_bit .)
    COMA            reduce using rule 79 (expresion -> expresion_bit_bit .)
    DOSP            reduce using rule 79 (expresion -> expresion_bit_bit .)


state 30

    (80) expresion -> PARIZQ . expresion PARDER
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 63
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 31

    (103) primitiva -> ENTERO .

    MAS             reduce using rule 103 (primitiva -> ENTERO .)
    MENOS           reduce using rule 103 (primitiva -> ENTERO .)
    POR             reduce using rule 103 (primitiva -> ENTERO .)
    DIVIDIDO        reduce using rule 103 (primitiva -> ENTERO .)
    RESTO           reduce using rule 103 (primitiva -> ENTERO .)
    MENQUE          reduce using rule 103 (primitiva -> ENTERO .)
    MAYQUE          reduce using rule 103 (primitiva -> ENTERO .)
    MEIQUE          reduce using rule 103 (primitiva -> ENTERO .)
    MAIQUE          reduce using rule 103 (primitiva -> ENTERO .)
    IGUALQUE        reduce using rule 103 (primitiva -> ENTERO .)
    NIGUALQUE       reduce using rule 103 (primitiva -> ENTERO .)
    AND             reduce using rule 103 (primitiva -> ENTERO .)
    OR              reduce using rule 103 (primitiva -> ENTERO .)
    XOR             reduce using rule 103 (primitiva -> ENTERO .)
    PAND            reduce using rule 103 (primitiva -> ENTERO .)
    BOR             reduce using rule 103 (primitiva -> ENTERO .)
    XORR            reduce using rule 103 (primitiva -> ENTERO .)
    SHIFTI          reduce using rule 103 (primitiva -> ENTERO .)
    SHIFTD          reduce using rule 103 (primitiva -> ENTERO .)
    PTCOMA          reduce using rule 103 (primitiva -> ENTERO .)
    PARDER          reduce using rule 103 (primitiva -> ENTERO .)
    COMA            reduce using rule 103 (primitiva -> ENTERO .)
    DOSP            reduce using rule 103 (primitiva -> ENTERO .)


state 32

    (104) primitiva -> DECIMAL .

    MAS             reduce using rule 104 (primitiva -> DECIMAL .)
    MENOS           reduce using rule 104 (primitiva -> DECIMAL .)
    POR             reduce using rule 104 (primitiva -> DECIMAL .)
    DIVIDIDO        reduce using rule 104 (primitiva -> DECIMAL .)
    RESTO           reduce using rule 104 (primitiva -> DECIMAL .)
    MENQUE          reduce using rule 104 (primitiva -> DECIMAL .)
    MAYQUE          reduce using rule 104 (primitiva -> DECIMAL .)
    MEIQUE          reduce using rule 104 (primitiva -> DECIMAL .)
    MAIQUE          reduce using rule 104 (primitiva -> DECIMAL .)
    IGUALQUE        reduce using rule 104 (primitiva -> DECIMAL .)
    NIGUALQUE       reduce using rule 104 (primitiva -> DECIMAL .)
    AND             reduce using rule 104 (primitiva -> DECIMAL .)
    OR              reduce using rule 104 (primitiva -> DECIMAL .)
    XOR             reduce using rule 104 (primitiva -> DECIMAL .)
    PAND            reduce using rule 104 (primitiva -> DECIMAL .)
    BOR             reduce using rule 104 (primitiva -> DECIMAL .)
    XORR            reduce using rule 104 (primitiva -> DECIMAL .)
    SHIFTI          reduce using rule 104 (primitiva -> DECIMAL .)
    SHIFTD          reduce using rule 104 (primitiva -> DECIMAL .)
    PTCOMA          reduce using rule 104 (primitiva -> DECIMAL .)
    PARDER          reduce using rule 104 (primitiva -> DECIMAL .)
    COMA            reduce using rule 104 (primitiva -> DECIMAL .)
    DOSP            reduce using rule 104 (primitiva -> DECIMAL .)


state 33

    (105) primitiva -> CADENA .

    MAS             reduce using rule 105 (primitiva -> CADENA .)
    MENOS           reduce using rule 105 (primitiva -> CADENA .)
    POR             reduce using rule 105 (primitiva -> CADENA .)
    DIVIDIDO        reduce using rule 105 (primitiva -> CADENA .)
    RESTO           reduce using rule 105 (primitiva -> CADENA .)
    MENQUE          reduce using rule 105 (primitiva -> CADENA .)
    MAYQUE          reduce using rule 105 (primitiva -> CADENA .)
    MEIQUE          reduce using rule 105 (primitiva -> CADENA .)
    MAIQUE          reduce using rule 105 (primitiva -> CADENA .)
    IGUALQUE        reduce using rule 105 (primitiva -> CADENA .)
    NIGUALQUE       reduce using rule 105 (primitiva -> CADENA .)
    AND             reduce using rule 105 (primitiva -> CADENA .)
    OR              reduce using rule 105 (primitiva -> CADENA .)
    XOR             reduce using rule 105 (primitiva -> CADENA .)
    PAND            reduce using rule 105 (primitiva -> CADENA .)
    BOR             reduce using rule 105 (primitiva -> CADENA .)
    XORR            reduce using rule 105 (primitiva -> CADENA .)
    SHIFTI          reduce using rule 105 (primitiva -> CADENA .)
    SHIFTD          reduce using rule 105 (primitiva -> CADENA .)
    PTCOMA          reduce using rule 105 (primitiva -> CADENA .)
    PARDER          reduce using rule 105 (primitiva -> CADENA .)
    COMA            reduce using rule 105 (primitiva -> CADENA .)
    DOSP            reduce using rule 105 (primitiva -> CADENA .)


state 34

    (106) primitiva -> CADENAR_CHAR .

    MAS             reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    MENOS           reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    POR             reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    DIVIDIDO        reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    RESTO           reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    MENQUE          reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    MAYQUE          reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    MEIQUE          reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    MAIQUE          reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    IGUALQUE        reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    NIGUALQUE       reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    AND             reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    OR              reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    XOR             reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    PAND            reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    BOR             reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    XORR            reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    SHIFTI          reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    SHIFTD          reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    PTCOMA          reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    PARDER          reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    COMA            reduce using rule 106 (primitiva -> CADENAR_CHAR .)
    DOSP            reduce using rule 106 (primitiva -> CADENAR_CHAR .)


state 35

    (107) primitiva -> ID .

    MAS             reduce using rule 107 (primitiva -> ID .)
    MENOS           reduce using rule 107 (primitiva -> ID .)
    POR             reduce using rule 107 (primitiva -> ID .)
    DIVIDIDO        reduce using rule 107 (primitiva -> ID .)
    RESTO           reduce using rule 107 (primitiva -> ID .)
    MENQUE          reduce using rule 107 (primitiva -> ID .)
    MAYQUE          reduce using rule 107 (primitiva -> ID .)
    MEIQUE          reduce using rule 107 (primitiva -> ID .)
    MAIQUE          reduce using rule 107 (primitiva -> ID .)
    IGUALQUE        reduce using rule 107 (primitiva -> ID .)
    NIGUALQUE       reduce using rule 107 (primitiva -> ID .)
    AND             reduce using rule 107 (primitiva -> ID .)
    OR              reduce using rule 107 (primitiva -> ID .)
    XOR             reduce using rule 107 (primitiva -> ID .)
    PAND            reduce using rule 107 (primitiva -> ID .)
    BOR             reduce using rule 107 (primitiva -> ID .)
    XORR            reduce using rule 107 (primitiva -> ID .)
    SHIFTI          reduce using rule 107 (primitiva -> ID .)
    SHIFTD          reduce using rule 107 (primitiva -> ID .)
    PTCOMA          reduce using rule 107 (primitiva -> ID .)
    PARDER          reduce using rule 107 (primitiva -> ID .)
    COMA            reduce using rule 107 (primitiva -> ID .)
    DOSP            reduce using rule 107 (primitiva -> ID .)


state 36

    (81) expresion_unaria -> MENOS . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 64
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 37

    (85) expresion_logica -> NOT . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 65
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 38

    (91) expresion_bit_bit -> NOTR . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 66
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 39

    (66) lista_id -> lista_id COMA ID .

    IGUAL           reduce using rule 66 (lista_id -> lista_id COMA ID .)
    COMA            reduce using rule 66 (lista_id -> lista_id COMA ID .)
    PTCOMA          reduce using rule 66 (lista_id -> lista_id COMA ID .)


state 40

    (12) parametro -> TIPO ID .

    PARDER          reduce using rule 12 (parametro -> TIPO ID .)
    COMA            reduce using rule 12 (parametro -> TIPO ID .)


state 41

    (8) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    TIPO                           shift and go to state 67
    instrucciones                  shift and go to state 69
    instruccion                    shift and go to state 70
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80

state 42

    (9) funcion -> TIPO ID PARIZQ parametros PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 91


state 43

    (10) parametros -> parametros COMA . parametro
    (12) parametro -> . TIPO ID
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    parametro                      shift and go to state 92
    TIPO                           shift and go to state 19

state 44

    (98) expresion_numerica -> expresion MAS . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 93
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 45

    (99) expresion_numerica -> expresion MENOS . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 94
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 46

    (100) expresion_numerica -> expresion POR . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 95
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 47

    (101) expresion_numerica -> expresion DIVIDIDO . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 96
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 48

    (102) expresion_numerica -> expresion RESTO . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 97
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 49

    (92) expresion_relacional -> expresion MENQUE . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 98
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 50

    (93) expresion_relacional -> expresion MAYQUE . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 99
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 51

    (94) expresion_relacional -> expresion MEIQUE . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 100
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 52

    (95) expresion_relacional -> expresion MAIQUE . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 101
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 53

    (96) expresion_relacional -> expresion IGUALQUE . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 102
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 54

    (97) expresion_relacional -> expresion NIGUALQUE . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 103
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 55

    (82) expresion_logica -> expresion AND . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 104
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 56

    (83) expresion_logica -> expresion OR . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 105
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 57

    (84) expresion_logica -> expresion XOR . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 106
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 58

    (86) expresion_bit_bit -> expresion PAND . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 107
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 59

    (87) expresion_bit_bit -> expresion BOR . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 108
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 60

    (88) expresion_bit_bit -> expresion XORR . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 109
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 61

    (89) expresion_bit_bit -> expresion SHIFTI . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 110
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 62

    (90) expresion_bit_bit -> expresion SHIFTD . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 111
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 63

    (80) expresion -> PARIZQ expresion . PARDER
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 112
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 64

    (81) expresion_unaria -> MENOS expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    MENOS           reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    POR             reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    DIVIDIDO        reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    RESTO           reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    MENQUE          reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    MAYQUE          reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    MEIQUE          reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    MAIQUE          reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    IGUALQUE        reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    NIGUALQUE       reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    AND             reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    OR              reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    XOR             reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    PAND            reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    BOR             reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    XORR            reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    SHIFTI          reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    SHIFTD          reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    PTCOMA          reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    PARDER          reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    COMA            reduce using rule 81 (expresion_unaria -> MENOS expresion .)
    DOSP            reduce using rule 81 (expresion_unaria -> MENOS expresion .)

  ! MAS             [ shift and go to state 44 ]
  ! MENOS           [ shift and go to state 45 ]
  ! POR             [ shift and go to state 46 ]
  ! DIVIDIDO        [ shift and go to state 47 ]
  ! RESTO           [ shift and go to state 48 ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]
  ! SHIFTI          [ shift and go to state 61 ]
  ! SHIFTD          [ shift and go to state 62 ]


state 65

    (85) expresion_logica -> NOT expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 85 (expresion_logica -> NOT expresion .)
    MENOS           reduce using rule 85 (expresion_logica -> NOT expresion .)
    POR             reduce using rule 85 (expresion_logica -> NOT expresion .)
    DIVIDIDO        reduce using rule 85 (expresion_logica -> NOT expresion .)
    RESTO           reduce using rule 85 (expresion_logica -> NOT expresion .)
    MENQUE          reduce using rule 85 (expresion_logica -> NOT expresion .)
    MAYQUE          reduce using rule 85 (expresion_logica -> NOT expresion .)
    MEIQUE          reduce using rule 85 (expresion_logica -> NOT expresion .)
    MAIQUE          reduce using rule 85 (expresion_logica -> NOT expresion .)
    IGUALQUE        reduce using rule 85 (expresion_logica -> NOT expresion .)
    NIGUALQUE       reduce using rule 85 (expresion_logica -> NOT expresion .)
    AND             reduce using rule 85 (expresion_logica -> NOT expresion .)
    OR              reduce using rule 85 (expresion_logica -> NOT expresion .)
    XOR             reduce using rule 85 (expresion_logica -> NOT expresion .)
    PAND            reduce using rule 85 (expresion_logica -> NOT expresion .)
    BOR             reduce using rule 85 (expresion_logica -> NOT expresion .)
    XORR            reduce using rule 85 (expresion_logica -> NOT expresion .)
    SHIFTI          reduce using rule 85 (expresion_logica -> NOT expresion .)
    SHIFTD          reduce using rule 85 (expresion_logica -> NOT expresion .)
    PTCOMA          reduce using rule 85 (expresion_logica -> NOT expresion .)
    PARDER          reduce using rule 85 (expresion_logica -> NOT expresion .)
    COMA            reduce using rule 85 (expresion_logica -> NOT expresion .)
    DOSP            reduce using rule 85 (expresion_logica -> NOT expresion .)

  ! MAS             [ shift and go to state 44 ]
  ! MENOS           [ shift and go to state 45 ]
  ! POR             [ shift and go to state 46 ]
  ! DIVIDIDO        [ shift and go to state 47 ]
  ! RESTO           [ shift and go to state 48 ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]
  ! SHIFTI          [ shift and go to state 61 ]
  ! SHIFTD          [ shift and go to state 62 ]


state 66

    (91) expresion_bit_bit -> NOTR expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    MENOS           reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    POR             reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    DIVIDIDO        reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    RESTO           reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    MENQUE          reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    MAYQUE          reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    MEIQUE          reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    MAIQUE          reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    IGUALQUE        reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    NIGUALQUE       reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    AND             reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    OR              reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    XOR             reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    PAND            reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    BOR             reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    XORR            reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    SHIFTI          reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    SHIFTD          reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    PTCOMA          reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    PARDER          reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    COMA            reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)
    DOSP            reduce using rule 91 (expresion_bit_bit -> NOTR expresion .)

  ! MAS             [ shift and go to state 44 ]
  ! MENOS           [ shift and go to state 45 ]
  ! POR             [ shift and go to state 46 ]
  ! DIVIDIDO        [ shift and go to state 47 ]
  ! RESTO           [ shift and go to state 48 ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]
  ! SHIFTI          [ shift and go to state 61 ]
  ! SHIFTD          [ shift and go to state 62 ]


state 67

    (64) declaracion -> TIPO . lista_id
    (65) declaracion -> TIPO . lista_id IGUAL expresion
    (66) lista_id -> . lista_id COMA ID
    (67) lista_id -> . ID

    ID              shift and go to state 113

    lista_id                       shift and go to state 15

state 68

    (51) asignacion -> ID . IGUAL expresion
    (52) asignacion -> ID . MAS MAS
    (53) asignacion -> ID . MENOS MENOS
    (54) asignacion -> ID . ASUMA expresion
    (55) asignacion -> ID . ARESTA expresion
    (56) asignacion -> ID . MULTIPLICATIVA expresion
    (57) asignacion -> ID . DIVIDIDA expresion
    (58) asignacion -> ID . ARESTO expresion
    (59) asignacion -> ID . ABOR expresion
    (60) asignacion -> ID . APAND expresion
    (61) asignacion -> ID . ASHIFTD expresion
    (62) asignacion -> ID . ASHIFTI expresion
    (63) asignacion -> ID . AXORR expresion

    IGUAL           shift and go to state 114
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    ASUMA           shift and go to state 117
    ARESTA          shift and go to state 118
    MULTIPLICATIVA  shift and go to state 119
    DIVIDIDA        shift and go to state 120
    ARESTO          shift and go to state 121
    ABOR            shift and go to state 122
    APAND           shift and go to state 123
    ASHIFTD         shift and go to state 124
    ASHIFTI         shift and go to state 125
    AXORR           shift and go to state 126


state 69

    (8) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         shift and go to state 127
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    TIPO                           shift and go to state 67
    instruccion                    shift and go to state 128
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80

state 70

    (14) instrucciones -> instruccion .

    LLAVDER         reduce using rule 14 (instrucciones -> instruccion .)
    error           reduce using rule 14 (instrucciones -> instruccion .)
    IMPRIMIR        reduce using rule 14 (instrucciones -> instruccion .)
    ID              reduce using rule 14 (instrucciones -> instruccion .)
    IF              reduce using rule 14 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 14 (instrucciones -> instruccion .)
    BREAK           reduce using rule 14 (instrucciones -> instruccion .)
    SCAN            reduce using rule 14 (instrucciones -> instruccion .)
    WHILE           reduce using rule 14 (instrucciones -> instruccion .)
    DO              reduce using rule 14 (instrucciones -> instruccion .)
    FOR             reduce using rule 14 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 14 (instrucciones -> instruccion .)
    INT             reduce using rule 14 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 14 (instrucciones -> instruccion .)
    CHAR            reduce using rule 14 (instrucciones -> instruccion .)
    VOID            reduce using rule 14 (instrucciones -> instruccion .)
    DEFAULT         reduce using rule 14 (instrucciones -> instruccion .)
    CASE            reduce using rule 14 (instrucciones -> instruccion .)


state 71

    (15) instruccion -> imprimir_instr .

    LLAVDER         reduce using rule 15 (instruccion -> imprimir_instr .)
    error           reduce using rule 15 (instruccion -> imprimir_instr .)
    IMPRIMIR        reduce using rule 15 (instruccion -> imprimir_instr .)
    ID              reduce using rule 15 (instruccion -> imprimir_instr .)
    IF              reduce using rule 15 (instruccion -> imprimir_instr .)
    SWITCH          reduce using rule 15 (instruccion -> imprimir_instr .)
    BREAK           reduce using rule 15 (instruccion -> imprimir_instr .)
    SCAN            reduce using rule 15 (instruccion -> imprimir_instr .)
    WHILE           reduce using rule 15 (instruccion -> imprimir_instr .)
    DO              reduce using rule 15 (instruccion -> imprimir_instr .)
    FOR             reduce using rule 15 (instruccion -> imprimir_instr .)
    CONTINUE        reduce using rule 15 (instruccion -> imprimir_instr .)
    INT             reduce using rule 15 (instruccion -> imprimir_instr .)
    FLOAT           reduce using rule 15 (instruccion -> imprimir_instr .)
    CHAR            reduce using rule 15 (instruccion -> imprimir_instr .)
    VOID            reduce using rule 15 (instruccion -> imprimir_instr .)
    DEFAULT         reduce using rule 15 (instruccion -> imprimir_instr .)
    CASE            reduce using rule 15 (instruccion -> imprimir_instr .)


state 72

    (16) instruccion -> asignacion . PTCOMA

    PTCOMA          shift and go to state 129


state 73

    (17) instruccion -> declaracion . PTCOMA

    PTCOMA          shift and go to state 130


state 74

    (18) instruccion -> sentencia_if .

    LLAVDER         reduce using rule 18 (instruccion -> sentencia_if .)
    error           reduce using rule 18 (instruccion -> sentencia_if .)
    IMPRIMIR        reduce using rule 18 (instruccion -> sentencia_if .)
    ID              reduce using rule 18 (instruccion -> sentencia_if .)
    IF              reduce using rule 18 (instruccion -> sentencia_if .)
    SWITCH          reduce using rule 18 (instruccion -> sentencia_if .)
    BREAK           reduce using rule 18 (instruccion -> sentencia_if .)
    SCAN            reduce using rule 18 (instruccion -> sentencia_if .)
    WHILE           reduce using rule 18 (instruccion -> sentencia_if .)
    DO              reduce using rule 18 (instruccion -> sentencia_if .)
    FOR             reduce using rule 18 (instruccion -> sentencia_if .)
    CONTINUE        reduce using rule 18 (instruccion -> sentencia_if .)
    INT             reduce using rule 18 (instruccion -> sentencia_if .)
    FLOAT           reduce using rule 18 (instruccion -> sentencia_if .)
    CHAR            reduce using rule 18 (instruccion -> sentencia_if .)
    VOID            reduce using rule 18 (instruccion -> sentencia_if .)
    DEFAULT         reduce using rule 18 (instruccion -> sentencia_if .)
    CASE            reduce using rule 18 (instruccion -> sentencia_if .)


state 75

    (19) instruccion -> sentencia_switch .

    LLAVDER         reduce using rule 19 (instruccion -> sentencia_switch .)
    error           reduce using rule 19 (instruccion -> sentencia_switch .)
    IMPRIMIR        reduce using rule 19 (instruccion -> sentencia_switch .)
    ID              reduce using rule 19 (instruccion -> sentencia_switch .)
    IF              reduce using rule 19 (instruccion -> sentencia_switch .)
    SWITCH          reduce using rule 19 (instruccion -> sentencia_switch .)
    BREAK           reduce using rule 19 (instruccion -> sentencia_switch .)
    SCAN            reduce using rule 19 (instruccion -> sentencia_switch .)
    WHILE           reduce using rule 19 (instruccion -> sentencia_switch .)
    DO              reduce using rule 19 (instruccion -> sentencia_switch .)
    FOR             reduce using rule 19 (instruccion -> sentencia_switch .)
    CONTINUE        reduce using rule 19 (instruccion -> sentencia_switch .)
    INT             reduce using rule 19 (instruccion -> sentencia_switch .)
    FLOAT           reduce using rule 19 (instruccion -> sentencia_switch .)
    CHAR            reduce using rule 19 (instruccion -> sentencia_switch .)
    VOID            reduce using rule 19 (instruccion -> sentencia_switch .)
    DEFAULT         reduce using rule 19 (instruccion -> sentencia_switch .)
    CASE            reduce using rule 19 (instruccion -> sentencia_switch .)


state 76

    (20) instruccion -> ins_break .

    LLAVDER         reduce using rule 20 (instruccion -> ins_break .)
    error           reduce using rule 20 (instruccion -> ins_break .)
    IMPRIMIR        reduce using rule 20 (instruccion -> ins_break .)
    ID              reduce using rule 20 (instruccion -> ins_break .)
    IF              reduce using rule 20 (instruccion -> ins_break .)
    SWITCH          reduce using rule 20 (instruccion -> ins_break .)
    BREAK           reduce using rule 20 (instruccion -> ins_break .)
    SCAN            reduce using rule 20 (instruccion -> ins_break .)
    WHILE           reduce using rule 20 (instruccion -> ins_break .)
    DO              reduce using rule 20 (instruccion -> ins_break .)
    FOR             reduce using rule 20 (instruccion -> ins_break .)
    CONTINUE        reduce using rule 20 (instruccion -> ins_break .)
    INT             reduce using rule 20 (instruccion -> ins_break .)
    FLOAT           reduce using rule 20 (instruccion -> ins_break .)
    CHAR            reduce using rule 20 (instruccion -> ins_break .)
    VOID            reduce using rule 20 (instruccion -> ins_break .)
    DEFAULT         reduce using rule 20 (instruccion -> ins_break .)
    CASE            reduce using rule 20 (instruccion -> ins_break .)


state 77

    (21) instruccion -> ins_scan .

    LLAVDER         reduce using rule 21 (instruccion -> ins_scan .)
    error           reduce using rule 21 (instruccion -> ins_scan .)
    IMPRIMIR        reduce using rule 21 (instruccion -> ins_scan .)
    ID              reduce using rule 21 (instruccion -> ins_scan .)
    IF              reduce using rule 21 (instruccion -> ins_scan .)
    SWITCH          reduce using rule 21 (instruccion -> ins_scan .)
    BREAK           reduce using rule 21 (instruccion -> ins_scan .)
    SCAN            reduce using rule 21 (instruccion -> ins_scan .)
    WHILE           reduce using rule 21 (instruccion -> ins_scan .)
    DO              reduce using rule 21 (instruccion -> ins_scan .)
    FOR             reduce using rule 21 (instruccion -> ins_scan .)
    CONTINUE        reduce using rule 21 (instruccion -> ins_scan .)
    INT             reduce using rule 21 (instruccion -> ins_scan .)
    FLOAT           reduce using rule 21 (instruccion -> ins_scan .)
    CHAR            reduce using rule 21 (instruccion -> ins_scan .)
    VOID            reduce using rule 21 (instruccion -> ins_scan .)
    DEFAULT         reduce using rule 21 (instruccion -> ins_scan .)
    CASE            reduce using rule 21 (instruccion -> ins_scan .)


state 78

    (22) instruccion -> ins_while .

    LLAVDER         reduce using rule 22 (instruccion -> ins_while .)
    error           reduce using rule 22 (instruccion -> ins_while .)
    IMPRIMIR        reduce using rule 22 (instruccion -> ins_while .)
    ID              reduce using rule 22 (instruccion -> ins_while .)
    IF              reduce using rule 22 (instruccion -> ins_while .)
    SWITCH          reduce using rule 22 (instruccion -> ins_while .)
    BREAK           reduce using rule 22 (instruccion -> ins_while .)
    SCAN            reduce using rule 22 (instruccion -> ins_while .)
    WHILE           reduce using rule 22 (instruccion -> ins_while .)
    DO              reduce using rule 22 (instruccion -> ins_while .)
    FOR             reduce using rule 22 (instruccion -> ins_while .)
    CONTINUE        reduce using rule 22 (instruccion -> ins_while .)
    INT             reduce using rule 22 (instruccion -> ins_while .)
    FLOAT           reduce using rule 22 (instruccion -> ins_while .)
    CHAR            reduce using rule 22 (instruccion -> ins_while .)
    VOID            reduce using rule 22 (instruccion -> ins_while .)
    DEFAULT         reduce using rule 22 (instruccion -> ins_while .)
    CASE            reduce using rule 22 (instruccion -> ins_while .)


state 79

    (23) instruccion -> ins_for .

    LLAVDER         reduce using rule 23 (instruccion -> ins_for .)
    error           reduce using rule 23 (instruccion -> ins_for .)
    IMPRIMIR        reduce using rule 23 (instruccion -> ins_for .)
    ID              reduce using rule 23 (instruccion -> ins_for .)
    IF              reduce using rule 23 (instruccion -> ins_for .)
    SWITCH          reduce using rule 23 (instruccion -> ins_for .)
    BREAK           reduce using rule 23 (instruccion -> ins_for .)
    SCAN            reduce using rule 23 (instruccion -> ins_for .)
    WHILE           reduce using rule 23 (instruccion -> ins_for .)
    DO              reduce using rule 23 (instruccion -> ins_for .)
    FOR             reduce using rule 23 (instruccion -> ins_for .)
    CONTINUE        reduce using rule 23 (instruccion -> ins_for .)
    INT             reduce using rule 23 (instruccion -> ins_for .)
    FLOAT           reduce using rule 23 (instruccion -> ins_for .)
    CHAR            reduce using rule 23 (instruccion -> ins_for .)
    VOID            reduce using rule 23 (instruccion -> ins_for .)
    DEFAULT         reduce using rule 23 (instruccion -> ins_for .)
    CASE            reduce using rule 23 (instruccion -> ins_for .)


state 80

    (24) instruccion -> ins_continue .

    LLAVDER         reduce using rule 24 (instruccion -> ins_continue .)
    error           reduce using rule 24 (instruccion -> ins_continue .)
    IMPRIMIR        reduce using rule 24 (instruccion -> ins_continue .)
    ID              reduce using rule 24 (instruccion -> ins_continue .)
    IF              reduce using rule 24 (instruccion -> ins_continue .)
    SWITCH          reduce using rule 24 (instruccion -> ins_continue .)
    BREAK           reduce using rule 24 (instruccion -> ins_continue .)
    SCAN            reduce using rule 24 (instruccion -> ins_continue .)
    WHILE           reduce using rule 24 (instruccion -> ins_continue .)
    DO              reduce using rule 24 (instruccion -> ins_continue .)
    FOR             reduce using rule 24 (instruccion -> ins_continue .)
    CONTINUE        reduce using rule 24 (instruccion -> ins_continue .)
    INT             reduce using rule 24 (instruccion -> ins_continue .)
    FLOAT           reduce using rule 24 (instruccion -> ins_continue .)
    CHAR            reduce using rule 24 (instruccion -> ins_continue .)
    VOID            reduce using rule 24 (instruccion -> ins_continue .)
    DEFAULT         reduce using rule 24 (instruccion -> ins_continue .)
    CASE            reduce using rule 24 (instruccion -> ins_continue .)


state 81

    (25) instruccion -> error .

    LLAVDER         reduce using rule 25 (instruccion -> error .)
    error           reduce using rule 25 (instruccion -> error .)
    IMPRIMIR        reduce using rule 25 (instruccion -> error .)
    ID              reduce using rule 25 (instruccion -> error .)
    IF              reduce using rule 25 (instruccion -> error .)
    SWITCH          reduce using rule 25 (instruccion -> error .)
    BREAK           reduce using rule 25 (instruccion -> error .)
    SCAN            reduce using rule 25 (instruccion -> error .)
    WHILE           reduce using rule 25 (instruccion -> error .)
    DO              reduce using rule 25 (instruccion -> error .)
    FOR             reduce using rule 25 (instruccion -> error .)
    CONTINUE        reduce using rule 25 (instruccion -> error .)
    INT             reduce using rule 25 (instruccion -> error .)
    FLOAT           reduce using rule 25 (instruccion -> error .)
    CHAR            reduce using rule 25 (instruccion -> error .)
    VOID            reduce using rule 25 (instruccion -> error .)
    DEFAULT         reduce using rule 25 (instruccion -> error .)
    CASE            reduce using rule 25 (instruccion -> error .)


state 82

    (49) imprimir_instr -> IMPRIMIR . PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> IMPRIMIR . PARIZQ CADENA PARDER PTCOMA

    PARIZQ          shift and go to state 131


state 83

    (41) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif

    PARIZQ          shift and go to state 132


state 84

    (32) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER

    PARIZQ          shift and go to state 133


state 85

    (40) ins_break -> BREAK . PTCOMA

    PTCOMA          shift and go to state 134


state 86

    (48) ins_scan -> SCAN . PARIZQ CADENA COMA PAND ID PARDER PTCOMA

    PARIZQ          shift and go to state 135


state 87

    (29) ins_while -> WHILE . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 136


state 88

    (30) ins_while -> DO . LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA

    LLAVIZQ         shift and go to state 137


state 89

    (26) ins_for -> FOR . PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 138


state 90

    (31) ins_continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 139


state 91

    (9) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    TIPO                           shift and go to state 67
    instrucciones                  shift and go to state 140
    instruccion                    shift and go to state 70
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80

state 92

    (10) parametros -> parametros COMA parametro .

    PARDER          reduce using rule 10 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 10 (parametros -> parametros COMA parametro .)


state 93

    (98) expresion_numerica -> expresion MAS expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    MENOS           reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    MENQUE          reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    MAYQUE          reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    MEIQUE          reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    MAIQUE          reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    NIGUALQUE       reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    AND             reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    OR              reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    XOR             reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    PAND            reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    BOR             reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    XORR            reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    SHIFTI          reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    SHIFTD          reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    PTCOMA          reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    PARDER          reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    COMA            reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    DOSP            reduce using rule 98 (expresion_numerica -> expresion MAS expresion .)
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48

  ! POR             [ reduce using rule 98 (expresion_numerica -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 98 (expresion_numerica -> expresion MAS expresion .) ]
  ! RESTO           [ reduce using rule 98 (expresion_numerica -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 44 ]
  ! MENOS           [ shift and go to state 45 ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]
  ! SHIFTI          [ shift and go to state 61 ]
  ! SHIFTD          [ shift and go to state 62 ]


state 94

    (99) expresion_numerica -> expresion MENOS expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    MENOS           reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    MENQUE          reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    MAYQUE          reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    MEIQUE          reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    MAIQUE          reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    NIGUALQUE       reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    AND             reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    OR              reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    XOR             reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    PAND            reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    BOR             reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    XORR            reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTI          reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTD          reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    PARDER          reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    COMA            reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    DOSP            reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .)
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48

  ! POR             [ reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .) ]
  ! RESTO           [ reduce using rule 99 (expresion_numerica -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 44 ]
  ! MENOS           [ shift and go to state 45 ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]
  ! SHIFTI          [ shift and go to state 61 ]
  ! SHIFTD          [ shift and go to state 62 ]


state 95

    (100) expresion_numerica -> expresion POR expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    MENOS           reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    POR             reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    RESTO           reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    MENQUE          reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    MAYQUE          reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    MEIQUE          reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    MAIQUE          reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    IGUALQUE        reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    NIGUALQUE       reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    AND             reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    OR              reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    XOR             reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    PAND            reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    BOR             reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    XORR            reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    SHIFTI          reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    SHIFTD          reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    PTCOMA          reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    PARDER          reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    COMA            reduce using rule 100 (expresion_numerica -> expresion POR expresion .)
    DOSP            reduce using rule 100 (expresion_numerica -> expresion POR expresion .)

  ! MAS             [ shift and go to state 44 ]
  ! MENOS           [ shift and go to state 45 ]
  ! POR             [ shift and go to state 46 ]
  ! DIVIDIDO        [ shift and go to state 47 ]
  ! RESTO           [ shift and go to state 48 ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]
  ! SHIFTI          [ shift and go to state 61 ]
  ! SHIFTD          [ shift and go to state 62 ]


state 96

    (101) expresion_numerica -> expresion DIVIDIDO expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    RESTO           reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENQUE          reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAYQUE          reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MEIQUE          reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAIQUE          reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    NIGUALQUE       reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XOR             reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PAND            reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    BOR             reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XORR            reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTI          reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTD          reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DOSP            reduce using rule 101 (expresion_numerica -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 44 ]
  ! MENOS           [ shift and go to state 45 ]
  ! POR             [ shift and go to state 46 ]
  ! DIVIDIDO        [ shift and go to state 47 ]
  ! RESTO           [ shift and go to state 48 ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]
  ! SHIFTI          [ shift and go to state 61 ]
  ! SHIFTD          [ shift and go to state 62 ]


state 97

    (102) expresion_numerica -> expresion RESTO expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MAS             reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    MENOS           reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    POR             reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    DIVIDIDO        reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    RESTO           reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    MENQUE          reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    MAYQUE          reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    MEIQUE          reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    MAIQUE          reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    IGUALQUE        reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    NIGUALQUE       reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    AND             reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    OR              reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    XOR             reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    PAND            reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    BOR             reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    XORR            reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTI          reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTD          reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    PTCOMA          reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    PARDER          reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    COMA            reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)
    DOSP            reduce using rule 102 (expresion_numerica -> expresion RESTO expresion .)

  ! MAS             [ shift and go to state 44 ]
  ! MENOS           [ shift and go to state 45 ]
  ! POR             [ shift and go to state 46 ]
  ! DIVIDIDO        [ shift and go to state 47 ]
  ! RESTO           [ shift and go to state 48 ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]
  ! SHIFTI          [ shift and go to state 61 ]
  ! SHIFTD          [ shift and go to state 62 ]


state 98

    (92) expresion_relacional -> expresion MENQUE expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    MAYQUE          reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    MEIQUE          reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    MAIQUE          reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    IGUALQUE        reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    NIGUALQUE       reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    AND             reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    XOR             reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    PAND            reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    BOR             reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    XORR            reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    PTCOMA          reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    PARDER          reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    COMA            reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    DOSP            reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENOS           [ reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! POR             [ reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! RESTO           [ reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]


state 99

    (93) expresion_relacional -> expresion MAYQUE expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    MAYQUE          reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    MEIQUE          reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    MAIQUE          reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    IGUALQUE        reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    NIGUALQUE       reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    AND             reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    XOR             reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    PAND            reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    BOR             reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    XORR            reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    PTCOMA          reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    PARDER          reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    COMA            reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    DOSP            reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENOS           [ reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! POR             [ reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! RESTO           [ reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 93 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]


state 100

    (94) expresion_relacional -> expresion MEIQUE expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    MAYQUE          reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    MEIQUE          reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    MAIQUE          reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    IGUALQUE        reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    NIGUALQUE       reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    AND             reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    OR              reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    XOR             reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    PAND            reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    BOR             reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    XORR            reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    PTCOMA          reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    PARDER          reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    COMA            reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    DOSP            reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENOS           [ reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! POR             [ reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! RESTO           [ reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 94 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]


state 101

    (95) expresion_relacional -> expresion MAIQUE expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    MAYQUE          reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    MEIQUE          reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    MAIQUE          reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    IGUALQUE        reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    NIGUALQUE       reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    AND             reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    OR              reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    XOR             reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    PAND            reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    BOR             reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    XORR            reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    PTCOMA          reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    PARDER          reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    COMA            reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    DOSP            reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! POR             [ reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! RESTO           [ reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 95 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]


state 102

    (96) expresion_relacional -> expresion IGUALQUE expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    IGUALQUE        reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    NIGUALQUE       reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    AND             reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    OR              reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    XOR             reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    PAND            reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    BOR             reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    XORR            reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    DOSP            reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 96 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]


state 103

    (97) expresion_relacional -> expresion NIGUALQUE expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    IGUALQUE        reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    NIGUALQUE       reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    AND             reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    OR              reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XOR             reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PAND            reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    BOR             reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XORR            reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PTCOMA          reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PARDER          reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    COMA            reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    DOSP            reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 97 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]


state 104

    (82) expresion_logica -> expresion AND expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    AND             reduce using rule 82 (expresion_logica -> expresion AND expresion .)
    OR              reduce using rule 82 (expresion_logica -> expresion AND expresion .)
    XOR             reduce using rule 82 (expresion_logica -> expresion AND expresion .)
    PTCOMA          reduce using rule 82 (expresion_logica -> expresion AND expresion .)
    PARDER          reduce using rule 82 (expresion_logica -> expresion AND expresion .)
    COMA            reduce using rule 82 (expresion_logica -> expresion AND expresion .)
    DOSP            reduce using rule 82 (expresion_logica -> expresion AND expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! RESTO           [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! MENQUE          [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! MAYQUE          [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! MEIQUE          [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! MAIQUE          [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! PAND            [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! BOR             [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! XORR            [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTI          [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTD          [ reduce using rule 82 (expresion_logica -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]


state 105

    (83) expresion_logica -> expresion OR expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    OR              reduce using rule 83 (expresion_logica -> expresion OR expresion .)
    XOR             reduce using rule 83 (expresion_logica -> expresion OR expresion .)
    PTCOMA          reduce using rule 83 (expresion_logica -> expresion OR expresion .)
    PARDER          reduce using rule 83 (expresion_logica -> expresion OR expresion .)
    COMA            reduce using rule 83 (expresion_logica -> expresion OR expresion .)
    DOSP            reduce using rule 83 (expresion_logica -> expresion OR expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! RESTO           [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! MENQUE          [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! MAYQUE          [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! MEIQUE          [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! MAIQUE          [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! PAND            [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! BOR             [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! XORR            [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTI          [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTD          [ reduce using rule 83 (expresion_logica -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]


state 106

    (84) expresion_logica -> expresion XOR expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for RESTO resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MEIQUE resolved as shift
  ! shift/reduce conflict for MAIQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for PAND resolved as shift
  ! shift/reduce conflict for BOR resolved as shift
  ! shift/reduce conflict for XORR resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
    PTCOMA          reduce using rule 84 (expresion_logica -> expresion XOR expresion .)
    PARDER          reduce using rule 84 (expresion_logica -> expresion XOR expresion .)
    COMA            reduce using rule 84 (expresion_logica -> expresion XOR expresion .)
    DOSP            reduce using rule 84 (expresion_logica -> expresion XOR expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! MENOS           [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! POR             [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! RESTO           [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! MENQUE          [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! MAYQUE          [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! MEIQUE          [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! MAIQUE          [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! AND             [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! OR              [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! XOR             [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! PAND            [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! BOR             [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! XORR            [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTI          [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTD          [ reduce using rule 84 (expresion_logica -> expresion XOR expresion .) ]


state 107

    (86) expresion_bit_bit -> expresion PAND expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    AND             reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .)
    OR              reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .)
    XOR             reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .)
    PAND            reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .)
    BOR             reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .)
    XORR            reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .)
    PTCOMA          reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .)
    PARDER          reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .)
    COMA            reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .)
    DOSP            reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENOS           [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! POR             [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! RESTO           [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENQUE          [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAYQUE          [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MEIQUE          [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAIQUE          [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! IGUALQUE        [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTI          [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTD          [ reduce using rule 86 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]


state 108

    (87) expresion_bit_bit -> expresion BOR expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    AND             reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .)
    OR              reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .)
    XOR             reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .)
    BOR             reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .)
    PTCOMA          reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .)
    PARDER          reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .)
    COMA            reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .)
    DOSP            reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    PAND            shift and go to state 58
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENOS           [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! POR             [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! RESTO           [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENQUE          [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAYQUE          [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MEIQUE          [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAIQUE          [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! PAND            [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! XORR            [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTI          [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTD          [ reduce using rule 87 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! BOR             [ shift and go to state 59 ]


state 109

    (88) expresion_bit_bit -> expresion XORR expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    AND             reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .)
    OR              reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .)
    XOR             reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .)
    BOR             reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .)
    XORR            reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .)
    PTCOMA          reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .)
    PARDER          reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .)
    COMA            reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .)
    DOSP            reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    PAND            shift and go to state 58
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62

  ! MAS             [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENOS           [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! POR             [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! RESTO           [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENQUE          [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAYQUE          [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MEIQUE          [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAIQUE          [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! IGUALQUE        [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! PAND            [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTI          [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTD          [ reduce using rule 88 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]


state 110

    (89) expresion_bit_bit -> expresion SHIFTI expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAYQUE          reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MEIQUE          reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAIQUE          reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    IGUALQUE        reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    NIGUALQUE       reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    AND             reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    OR              reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XOR             reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PAND            reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    BOR             reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XORR            reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTI          reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTD          reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PTCOMA          reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PARDER          reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    COMA            reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    DOSP            reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48

  ! MAS             [ reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENOS           [ reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! POR             [ reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! DIVIDIDO        [ reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! RESTO           [ reduce using rule 89 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]
  ! SHIFTI          [ shift and go to state 61 ]
  ! SHIFTD          [ shift and go to state 62 ]


state 111

    (90) expresion_bit_bit -> expresion SHIFTD expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    MENQUE          reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAYQUE          reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MEIQUE          reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAIQUE          reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    IGUALQUE        reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    NIGUALQUE       reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    AND             reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    OR              reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XOR             reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PAND            reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    BOR             reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XORR            reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTI          reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTD          reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PTCOMA          reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PARDER          reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    COMA            reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    DOSP            reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48

  ! MAS             [ reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENOS           [ reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! POR             [ reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! DIVIDIDO        [ reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! RESTO           [ reduce using rule 90 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENQUE          [ shift and go to state 49 ]
  ! MAYQUE          [ shift and go to state 50 ]
  ! MEIQUE          [ shift and go to state 51 ]
  ! MAIQUE          [ shift and go to state 52 ]
  ! IGUALQUE        [ shift and go to state 53 ]
  ! NIGUALQUE       [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! XOR             [ shift and go to state 57 ]
  ! PAND            [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 59 ]
  ! XORR            [ shift and go to state 60 ]
  ! SHIFTI          [ shift and go to state 61 ]
  ! SHIFTD          [ shift and go to state 62 ]


state 112

    (80) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    RESTO           reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MENQUE          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MAYQUE          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MEIQUE          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    MAIQUE          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    NIGUALQUE       reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    XOR             reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    PAND            reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    BOR             reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    XORR            reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    SHIFTI          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    SHIFTD          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)
    DOSP            reduce using rule 80 (expresion -> PARIZQ expresion PARDER .)


state 113

    (67) lista_id -> ID .

    IGUAL           reduce using rule 67 (lista_id -> ID .)
    COMA            reduce using rule 67 (lista_id -> ID .)
    PTCOMA          reduce using rule 67 (lista_id -> ID .)


state 114

    (51) asignacion -> ID IGUAL . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 141
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 115

    (52) asignacion -> ID MAS . MAS

    MAS             shift and go to state 142


state 116

    (53) asignacion -> ID MENOS . MENOS

    MENOS           shift and go to state 143


state 117

    (54) asignacion -> ID ASUMA . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 144
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 118

    (55) asignacion -> ID ARESTA . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 145
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 119

    (56) asignacion -> ID MULTIPLICATIVA . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 146
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 120

    (57) asignacion -> ID DIVIDIDA . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 147
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 121

    (58) asignacion -> ID ARESTO . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 148
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 122

    (59) asignacion -> ID ABOR . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 149
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 123

    (60) asignacion -> ID APAND . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 150
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 124

    (61) asignacion -> ID ASHIFTD . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 151
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 125

    (62) asignacion -> ID ASHIFTI . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 152
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 126

    (63) asignacion -> ID AXORR . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 153
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 127

    (8) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .

    INT             reduce using rule 8 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 8 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 8 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 8 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 8 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)


state 128

    (13) instrucciones -> instrucciones instruccion .

    LLAVDER         reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    error           reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    IMPRIMIR        reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    SCAN            reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    DO              reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    VOID            reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    DEFAULT         reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    CASE            reduce using rule 13 (instrucciones -> instrucciones instruccion .)


state 129

    (16) instruccion -> asignacion PTCOMA .

    LLAVDER         reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    error           reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    IMPRIMIR        reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    IF              reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    SWITCH          reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    BREAK           reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    SCAN            reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    WHILE           reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    DO              reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    FOR             reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    CONTINUE        reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    INT             reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    FLOAT           reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    CHAR            reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    VOID            reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    DEFAULT         reduce using rule 16 (instruccion -> asignacion PTCOMA .)
    CASE            reduce using rule 16 (instruccion -> asignacion PTCOMA .)


state 130

    (17) instruccion -> declaracion PTCOMA .

    LLAVDER         reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    error           reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    IMPRIMIR        reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    ID              reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    IF              reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    SWITCH          reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    BREAK           reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    SCAN            reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    WHILE           reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    DO              reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    FOR             reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    CONTINUE        reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    INT             reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    FLOAT           reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    CHAR            reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    VOID            reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    DEFAULT         reduce using rule 17 (instruccion -> declaracion PTCOMA .)
    CASE            reduce using rule 17 (instruccion -> declaracion PTCOMA .)


state 131

    (49) imprimir_instr -> IMPRIMIR PARIZQ . CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> IMPRIMIR PARIZQ . CADENA PARDER PTCOMA

    CADENA          shift and go to state 154


state 132

    (41) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 155
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 133

    (32) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case LLAVDER
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 156
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 134

    (40) ins_break -> BREAK PTCOMA .

    LLAVDER         reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    error           reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    IMPRIMIR        reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    ID              reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    IF              reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    SWITCH          reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    BREAK           reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    SCAN            reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    WHILE           reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    DO              reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    FOR             reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    INT             reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    FLOAT           reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    CHAR            reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    VOID            reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    DEFAULT         reduce using rule 40 (ins_break -> BREAK PTCOMA .)
    CASE            reduce using rule 40 (ins_break -> BREAK PTCOMA .)


state 135

    (48) ins_scan -> SCAN PARIZQ . CADENA COMA PAND ID PARDER PTCOMA

    CADENA          shift and go to state 157


state 136

    (29) ins_while -> WHILE PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 158
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 137

    (30) ins_while -> DO LLAVIZQ . instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 159
    instruccion                    shift and go to state 70
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 138

    (26) ins_for -> FOR PARIZQ . instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (27) instruccion_for -> . asignacion
    (28) instruccion_for -> . declaracion
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    ID              shift and go to state 68
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion_for                shift and go to state 160
    asignacion                     shift and go to state 161
    declaracion                    shift and go to state 162
    TIPO                           shift and go to state 67

state 139

    (31) ins_continue -> CONTINUE PTCOMA .

    LLAVDER         reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    error           reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    IMPRIMIR        reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    SWITCH          reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    SCAN            reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    DO              reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    FOR             reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    INT             reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    FLOAT           reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    CHAR            reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    VOID            reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    DEFAULT         reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)
    CASE            reduce using rule 31 (ins_continue -> CONTINUE PTCOMA .)


state 140

    (9) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         shift and go to state 163
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    TIPO                           shift and go to state 67
    instruccion                    shift and go to state 128
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80

state 141

    (51) asignacion -> ID IGUAL expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 51 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 51 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 142

    (52) asignacion -> ID MAS MAS .

    PTCOMA          reduce using rule 52 (asignacion -> ID MAS MAS .)
    PARDER          reduce using rule 52 (asignacion -> ID MAS MAS .)


state 143

    (53) asignacion -> ID MENOS MENOS .

    PTCOMA          reduce using rule 53 (asignacion -> ID MENOS MENOS .)
    PARDER          reduce using rule 53 (asignacion -> ID MENOS MENOS .)


state 144

    (54) asignacion -> ID ASUMA expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 54 (asignacion -> ID ASUMA expresion .)
    PARDER          reduce using rule 54 (asignacion -> ID ASUMA expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 145

    (55) asignacion -> ID ARESTA expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 55 (asignacion -> ID ARESTA expresion .)
    PARDER          reduce using rule 55 (asignacion -> ID ARESTA expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 146

    (56) asignacion -> ID MULTIPLICATIVA expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 56 (asignacion -> ID MULTIPLICATIVA expresion .)
    PARDER          reduce using rule 56 (asignacion -> ID MULTIPLICATIVA expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 147

    (57) asignacion -> ID DIVIDIDA expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 57 (asignacion -> ID DIVIDIDA expresion .)
    PARDER          reduce using rule 57 (asignacion -> ID DIVIDIDA expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 148

    (58) asignacion -> ID ARESTO expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 58 (asignacion -> ID ARESTO expresion .)
    PARDER          reduce using rule 58 (asignacion -> ID ARESTO expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 149

    (59) asignacion -> ID ABOR expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 59 (asignacion -> ID ABOR expresion .)
    PARDER          reduce using rule 59 (asignacion -> ID ABOR expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 150

    (60) asignacion -> ID APAND expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 60 (asignacion -> ID APAND expresion .)
    PARDER          reduce using rule 60 (asignacion -> ID APAND expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 151

    (61) asignacion -> ID ASHIFTD expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 61 (asignacion -> ID ASHIFTD expresion .)
    PARDER          reduce using rule 61 (asignacion -> ID ASHIFTD expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 152

    (62) asignacion -> ID ASHIFTI expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 62 (asignacion -> ID ASHIFTI expresion .)
    PARDER          reduce using rule 62 (asignacion -> ID ASHIFTI expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 153

    (63) asignacion -> ID AXORR expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 63 (asignacion -> ID AXORR expresion .)
    PARDER          reduce using rule 63 (asignacion -> ID AXORR expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 154

    (49) imprimir_instr -> IMPRIMIR PARIZQ CADENA . COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> IMPRIMIR PARIZQ CADENA . PARDER PTCOMA

    COMA            shift and go to state 164
    PARDER          shift and go to state 165


state 155

    (41) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 166
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 156

    (32) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case LLAVDER
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 167
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 157

    (48) ins_scan -> SCAN PARIZQ CADENA . COMA PAND ID PARDER PTCOMA

    COMA            shift and go to state 168


state 158

    (29) ins_while -> WHILE PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 169
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 159

    (30) ins_while -> DO LLAVIZQ instrucciones . LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         shift and go to state 170
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 128
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 160

    (26) ins_for -> FOR PARIZQ instruccion_for . PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PTCOMA          shift and go to state 171


state 161

    (27) instruccion_for -> asignacion .

    PTCOMA          reduce using rule 27 (instruccion_for -> asignacion .)


state 162

    (28) instruccion_for -> declaracion .

    PTCOMA          reduce using rule 28 (instruccion_for -> declaracion .)


state 163

    (9) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .

    INT             reduce using rule 9 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 9 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 9 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 9 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 9 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)


state 164

    (49) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA . expresiones PARDER PTCOMA
    (72) expresiones -> . expresiones COMA expresion
    (73) expresiones -> . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresiones                    shift and go to state 172
    expresion                      shift and go to state 173
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 165

    (50) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER . PTCOMA

    PTCOMA          shift and go to state 174


state 166

    (41) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif

    LLAVIZQ         shift and go to state 175


state 167

    (32) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case LLAVDER

    LLAVIZQ         shift and go to state 176


state 168

    (48) ins_scan -> SCAN PARIZQ CADENA COMA . PAND ID PARDER PTCOMA

    PAND            shift and go to state 177


state 169

    (29) ins_while -> WHILE PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 178


state 170

    (30) ins_while -> DO LLAVIZQ instrucciones LLAVDER . WHILE PARIZQ expresion PARDER PTCOMA

    WHILE           shift and go to state 179


state 171

    (26) ins_for -> FOR PARIZQ instruccion_for PTCOMA . expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 180
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 172

    (49) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones . PARDER PTCOMA
    (72) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 182
    COMA            shift and go to state 181


state 173

    (73) expresiones -> expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          reduce using rule 73 (expresiones -> expresion .)
    COMA            reduce using rule 73 (expresiones -> expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 174

    (50) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .

    LLAVDER         reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    error           reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    ID              reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IF              reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    SWITCH          reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    BREAK           reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    SCAN            reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    WHILE           reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DO              reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    FOR             reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CONTINUE        reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    INT             reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    FLOAT           reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CHAR            reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    VOID            reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DEFAULT         reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CASE            reduce using rule 50 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)


state 175

    (41) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (42) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 183
    instruccion                    shift and go to state 70
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 176

    (32) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case default_ins LLAVDER
    (33) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case LLAVDER
    (34) lista_case -> . lista_case caso
    (35) lista_case -> . caso
    (36) caso -> . CASE expresion DOSP instrucciones
    (37) caso -> . CASE expresion DOSP

    CASE            shift and go to state 186

    lista_case                     shift and go to state 184
    caso                           shift and go to state 185

state 177

    (48) ins_scan -> SCAN PARIZQ CADENA COMA PAND . ID PARDER PTCOMA

    ID              shift and go to state 187


state 178

    (29) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 188
    instruccion                    shift and go to state 70
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 179

    (30) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 189


state 180

    (26) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion . PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 190
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 181

    (72) expresiones -> expresiones COMA . expresion
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 191
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 182

    (49) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 192


state 183

    (41) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (42) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         shift and go to state 193
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 128
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 184

    (32) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . default_ins LLAVDER
    (33) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . LLAVDER
    (34) lista_case -> lista_case . caso
    (38) default_ins -> . DEFAULT DOSP instrucciones
    (39) default_ins -> . DEFAULT DOSP
    (36) caso -> . CASE expresion DOSP instrucciones
    (37) caso -> . CASE expresion DOSP

    LLAVDER         shift and go to state 195
    DEFAULT         shift and go to state 197
    CASE            shift and go to state 186

    default_ins                    shift and go to state 194
    caso                           shift and go to state 196

state 185

    (35) lista_case -> caso .

    LLAVDER         reduce using rule 35 (lista_case -> caso .)
    DEFAULT         reduce using rule 35 (lista_case -> caso .)
    CASE            reduce using rule 35 (lista_case -> caso .)


state 186

    (36) caso -> CASE . expresion DOSP instrucciones
    (37) caso -> CASE . expresion DOSP
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 198
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 187

    (48) ins_scan -> SCAN PARIZQ CADENA COMA PAND ID . PARDER PTCOMA

    PARDER          shift and go to state 199


state 188

    (29) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         shift and go to state 200
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 128
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 189

    (30) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ . expresion PARDER PTCOMA
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 201
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 190

    (26) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA . asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion

    ID              shift and go to state 68

    asignacion                     shift and go to state 202

state 191

    (72) expresiones -> expresiones COMA expresion .
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          reduce using rule 72 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 72 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 192

    (49) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .

    LLAVDER         reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    error           reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    SWITCH          reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    SCAN            reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DO              reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    FOR             reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    INT             reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    FLOAT           reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CHAR            reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    VOID            reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DEFAULT         reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CASE            reduce using rule 49 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)


state 193

    (41) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .
    (42) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif
    (45) lelseif -> . lelseif elseif
    (46) lelseif -> . elseif
    (47) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVDER         reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 41 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 203

    lelseif                        shift and go to state 204
    elseif                         shift and go to state 205

state 194

    (32) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins . LLAVDER

    LLAVDER         shift and go to state 206


state 195

    (33) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .

    LLAVDER         reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    error           reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IMPRIMIR        reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    ID              reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IF              reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    SWITCH          reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    BREAK           reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    SCAN            reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    WHILE           reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DO              reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    FOR             reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CONTINUE        reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    INT             reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    FLOAT           reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CHAR            reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    VOID            reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DEFAULT         reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CASE            reduce using rule 33 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)


state 196

    (34) lista_case -> lista_case caso .

    LLAVDER         reduce using rule 34 (lista_case -> lista_case caso .)
    DEFAULT         reduce using rule 34 (lista_case -> lista_case caso .)
    CASE            reduce using rule 34 (lista_case -> lista_case caso .)


state 197

    (38) default_ins -> DEFAULT . DOSP instrucciones
    (39) default_ins -> DEFAULT . DOSP

    DOSP            shift and go to state 207


state 198

    (36) caso -> CASE expresion . DOSP instrucciones
    (37) caso -> CASE expresion . DOSP
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    DOSP            shift and go to state 208
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 199

    (48) ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER . PTCOMA

    PTCOMA          shift and go to state 209


state 200

    (29) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 29 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)


state 201

    (30) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion . PARDER PTCOMA
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 210
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 202

    (26) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 211


state 203

    (42) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER
    (47) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 213
    IF              shift and go to state 212


state 204

    (43) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif . ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .
    (45) lelseif -> lelseif . elseif
    (47) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    ELSE            shift and go to state 214
    LLAVDER         reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    error           reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IMPRIMIR        reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    ID              reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IF              reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    SWITCH          reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    BREAK           reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    SCAN            reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    WHILE           reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DO              reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    FOR             reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CONTINUE        reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    INT             reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    FLOAT           reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CHAR            reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    VOID            reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DEFAULT         reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CASE            reduce using rule 44 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)

    elseif                         shift and go to state 215

state 205

    (46) lelseif -> elseif .

    ELSE            reduce using rule 46 (lelseif -> elseif .)
    LLAVDER         reduce using rule 46 (lelseif -> elseif .)
    error           reduce using rule 46 (lelseif -> elseif .)
    IMPRIMIR        reduce using rule 46 (lelseif -> elseif .)
    ID              reduce using rule 46 (lelseif -> elseif .)
    IF              reduce using rule 46 (lelseif -> elseif .)
    SWITCH          reduce using rule 46 (lelseif -> elseif .)
    BREAK           reduce using rule 46 (lelseif -> elseif .)
    SCAN            reduce using rule 46 (lelseif -> elseif .)
    WHILE           reduce using rule 46 (lelseif -> elseif .)
    DO              reduce using rule 46 (lelseif -> elseif .)
    FOR             reduce using rule 46 (lelseif -> elseif .)
    CONTINUE        reduce using rule 46 (lelseif -> elseif .)
    INT             reduce using rule 46 (lelseif -> elseif .)
    FLOAT           reduce using rule 46 (lelseif -> elseif .)
    CHAR            reduce using rule 46 (lelseif -> elseif .)
    VOID            reduce using rule 46 (lelseif -> elseif .)
    DEFAULT         reduce using rule 46 (lelseif -> elseif .)
    CASE            reduce using rule 46 (lelseif -> elseif .)


state 206

    (32) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .

    LLAVDER         reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    error           reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IMPRIMIR        reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    ID              reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IF              reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    SWITCH          reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    BREAK           reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    SCAN            reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    WHILE           reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DO              reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    FOR             reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CONTINUE        reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    INT             reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    FLOAT           reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CHAR            reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    VOID            reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DEFAULT         reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CASE            reduce using rule 32 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)


state 207

    (38) default_ins -> DEFAULT DOSP . instrucciones
    (39) default_ins -> DEFAULT DOSP .
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         reduce using rule 39 (default_ins -> DEFAULT DOSP .)
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 216
    instruccion                    shift and go to state 70
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 208

    (36) caso -> CASE expresion DOSP . instrucciones
    (37) caso -> CASE expresion DOSP .
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         reduce using rule 37 (caso -> CASE expresion DOSP .)
    DEFAULT         reduce using rule 37 (caso -> CASE expresion DOSP .)
    CASE            reduce using rule 37 (caso -> CASE expresion DOSP .)
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 217
    instruccion                    shift and go to state 70
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 209

    (48) ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .

    LLAVDER         reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    error           reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    ID              reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    IF              reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    SWITCH          reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    BREAK           reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    SCAN            reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    WHILE           reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    DO              reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    FOR             reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    CONTINUE        reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    INT             reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    FLOAT           reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    CHAR            reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    VOID            reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    DEFAULT         reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    CASE            reduce using rule 48 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)


state 210

    (30) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 218


state 211

    (26) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 219


state 212

    (47) elseif -> ELSE IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 220


state 213

    (42) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 221
    instruccion                    shift and go to state 70
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 214

    (43) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE . LLAVIZQ instrucciones LLAVDER
    (47) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 222
    IF              shift and go to state 212


state 215

    (45) lelseif -> lelseif elseif .

    ELSE            reduce using rule 45 (lelseif -> lelseif elseif .)
    LLAVDER         reduce using rule 45 (lelseif -> lelseif elseif .)
    error           reduce using rule 45 (lelseif -> lelseif elseif .)
    IMPRIMIR        reduce using rule 45 (lelseif -> lelseif elseif .)
    ID              reduce using rule 45 (lelseif -> lelseif elseif .)
    IF              reduce using rule 45 (lelseif -> lelseif elseif .)
    SWITCH          reduce using rule 45 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 45 (lelseif -> lelseif elseif .)
    SCAN            reduce using rule 45 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 45 (lelseif -> lelseif elseif .)
    DO              reduce using rule 45 (lelseif -> lelseif elseif .)
    FOR             reduce using rule 45 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 45 (lelseif -> lelseif elseif .)
    INT             reduce using rule 45 (lelseif -> lelseif elseif .)
    FLOAT           reduce using rule 45 (lelseif -> lelseif elseif .)
    CHAR            reduce using rule 45 (lelseif -> lelseif elseif .)
    VOID            reduce using rule 45 (lelseif -> lelseif elseif .)
    DEFAULT         reduce using rule 45 (lelseif -> lelseif elseif .)
    CASE            reduce using rule 45 (lelseif -> lelseif elseif .)


state 216

    (38) default_ins -> DEFAULT DOSP instrucciones .
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         reduce using rule 38 (default_ins -> DEFAULT DOSP instrucciones .)
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 128
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 217

    (36) caso -> CASE expresion DOSP instrucciones .
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         reduce using rule 36 (caso -> CASE expresion DOSP instrucciones .)
    DEFAULT         reduce using rule 36 (caso -> CASE expresion DOSP instrucciones .)
    CASE            reduce using rule 36 (caso -> CASE expresion DOSP instrucciones .)
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 128
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 218

    (30) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .

    LLAVDER         reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    error           reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    SWITCH          reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    SCAN            reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DO              reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    INT             reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    FLOAT           reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    VOID            reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DEFAULT         reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CASE            reduce using rule 30 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)


state 219

    (26) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    asignacion                     shift and go to state 72
    instrucciones                  shift and go to state 223
    instruccion                    shift and go to state 70
    imprimir_instr                 shift and go to state 71
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 220

    (47) elseif -> ELSE IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (74) expresion -> . primitiva
    (75) expresion -> . expresion_numerica
    (76) expresion -> . expresion_relacional
    (77) expresion -> . expresion_unaria
    (78) expresion -> . expresion_logica
    (79) expresion -> . expresion_bit_bit
    (80) expresion -> . PARIZQ expresion PARDER
    (103) primitiva -> . ENTERO
    (104) primitiva -> . DECIMAL
    (105) primitiva -> . CADENA
    (106) primitiva -> . CADENAR_CHAR
    (107) primitiva -> . ID
    (98) expresion_numerica -> . expresion MAS expresion
    (99) expresion_numerica -> . expresion MENOS expresion
    (100) expresion_numerica -> . expresion POR expresion
    (101) expresion_numerica -> . expresion DIVIDIDO expresion
    (102) expresion_numerica -> . expresion RESTO expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYQUE expresion
    (94) expresion_relacional -> . expresion MEIQUE expresion
    (95) expresion_relacional -> . expresion MAIQUE expresion
    (96) expresion_relacional -> . expresion IGUALQUE expresion
    (97) expresion_relacional -> . expresion NIGUALQUE expresion
    (81) expresion_unaria -> . MENOS expresion
    (82) expresion_logica -> . expresion AND expresion
    (83) expresion_logica -> . expresion OR expresion
    (84) expresion_logica -> . expresion XOR expresion
    (85) expresion_logica -> . NOT expresion
    (86) expresion_bit_bit -> . expresion PAND expresion
    (87) expresion_bit_bit -> . expresion BOR expresion
    (88) expresion_bit_bit -> . expresion XORR expresion
    (89) expresion_bit_bit -> . expresion SHIFTI expresion
    (90) expresion_bit_bit -> . expresion SHIFTD expresion
    (91) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 224
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 221

    (42) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         shift and go to state 225
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 128
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 222

    (43) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 226
    instruccion                    shift and go to state 70
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 223

    (26) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         shift and go to state 227
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    asignacion                     shift and go to state 72
    instruccion                    shift and go to state 128
    imprimir_instr                 shift and go to state 71
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 224

    (47) elseif -> ELSE IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (98) expresion_numerica -> expresion . MAS expresion
    (99) expresion_numerica -> expresion . MENOS expresion
    (100) expresion_numerica -> expresion . POR expresion
    (101) expresion_numerica -> expresion . DIVIDIDO expresion
    (102) expresion_numerica -> expresion . RESTO expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYQUE expresion
    (94) expresion_relacional -> expresion . MEIQUE expresion
    (95) expresion_relacional -> expresion . MAIQUE expresion
    (96) expresion_relacional -> expresion . IGUALQUE expresion
    (97) expresion_relacional -> expresion . NIGUALQUE expresion
    (82) expresion_logica -> expresion . AND expresion
    (83) expresion_logica -> expresion . OR expresion
    (84) expresion_logica -> expresion . XOR expresion
    (86) expresion_bit_bit -> expresion . PAND expresion
    (87) expresion_bit_bit -> expresion . BOR expresion
    (88) expresion_bit_bit -> expresion . XORR expresion
    (89) expresion_bit_bit -> expresion . SHIFTI expresion
    (90) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 228
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    POR             shift and go to state 46
    DIVIDIDO        shift and go to state 47
    RESTO           shift and go to state 48
    MENQUE          shift and go to state 49
    MAYQUE          shift and go to state 50
    MEIQUE          shift and go to state 51
    MAIQUE          shift and go to state 52
    IGUALQUE        shift and go to state 53
    NIGUALQUE       shift and go to state 54
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    PAND            shift and go to state 58
    BOR             shift and go to state 59
    XORR            shift and go to state 60
    SHIFTI          shift and go to state 61
    SHIFTD          shift and go to state 62


state 225

    (42) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 42 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)


state 226

    (43) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         shift and go to state 229
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 128
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 227

    (26) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 26 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)


state 228

    (47) elseif -> ELSE IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 230


state 229

    (43) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 43 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)


state 230

    (47) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 231
    instruccion                    shift and go to state 70
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 231

    (47) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion PTCOMA
    (17) instruccion -> . declaracion PTCOMA
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . ins_while
    (23) instruccion -> . ins_for
    (24) instruccion -> . ins_continue
    (25) instruccion -> . error
    (49) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (50) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (51) asignacion -> . ID IGUAL expresion
    (52) asignacion -> . ID MAS MAS
    (53) asignacion -> . ID MENOS MENOS
    (54) asignacion -> . ID ASUMA expresion
    (55) asignacion -> . ID ARESTA expresion
    (56) asignacion -> . ID MULTIPLICATIVA expresion
    (57) asignacion -> . ID DIVIDIDA expresion
    (58) asignacion -> . ID ARESTO expresion
    (59) asignacion -> . ID ABOR expresion
    (60) asignacion -> . ID APAND expresion
    (61) asignacion -> . ID ASHIFTD expresion
    (62) asignacion -> . ID ASHIFTI expresion
    (63) asignacion -> . ID AXORR expresion
    (64) declaracion -> . TIPO lista_id
    (65) declaracion -> . TIPO lista_id IGUAL expresion
    (41) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (42) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (43) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (44) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (32) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (33) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (40) ins_break -> . BREAK PTCOMA
    (48) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (29) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (30) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (26) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (31) ins_continue -> . CONTINUE PTCOMA
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR
    (71) TIPO -> . VOID

    LLAVDER         shift and go to state 232
    error           shift and go to state 81
    IMPRIMIR        shift and go to state 82
    ID              shift and go to state 68
    IF              shift and go to state 83
    SWITCH          shift and go to state 84
    BREAK           shift and go to state 85
    SCAN            shift and go to state 86
    WHILE           shift and go to state 87
    DO              shift and go to state 88
    FOR             shift and go to state 89
    CONTINUE        shift and go to state 90
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 128
    imprimir_instr                 shift and go to state 71
    asignacion                     shift and go to state 72
    declaracion                    shift and go to state 73
    sentencia_if                   shift and go to state 74
    sentencia_switch               shift and go to state 75
    ins_break                      shift and go to state 76
    ins_scan                       shift and go to state 77
    ins_while                      shift and go to state 78
    ins_for                        shift and go to state 79
    ins_continue                   shift and go to state 80
    TIPO                           shift and go to state 67

state 232

    (47) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    ELSE            reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 47 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 106 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 106 resolved as shift
WARNING: shift/reduce conflict for POR in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 106 resolved as shift
WARNING: shift/reduce conflict for RESTO in state 106 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 106 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 106 resolved as shift
WARNING: shift/reduce conflict for MEIQUE in state 106 resolved as shift
WARNING: shift/reduce conflict for MAIQUE in state 106 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 106 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for XOR in state 106 resolved as shift
WARNING: shift/reduce conflict for PAND in state 106 resolved as shift
WARNING: shift/reduce conflict for BOR in state 106 resolved as shift
WARNING: shift/reduce conflict for XORR in state 106 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 106 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 106 resolved as shift
