Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    UNARIO

Grammar

Rule 0     S' -> init
Rule 1     init -> globales
Rule 2     init -> empty
Rule 3     globales -> globales iglobal
Rule 4     globales -> iglobal
Rule 5     iglobal -> funcion
Rule 6     iglobal -> declaracion PTCOMA
Rule 7     iglobal -> definicion_struct
Rule 8     definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA
Rule 9     declaraciones -> declaraciones declaracion PTCOMA
Rule 10    declaraciones -> declaracion PTCOMA
Rule 11    empty -> <empty>
Rule 12    funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
Rule 13    funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
Rule 14    parametros -> parametros COMA parametro
Rule 15    parametros -> parametro
Rule 16    parametro -> TIPO ID
Rule 17    instrucciones -> instrucciones instruccion
Rule 18    instrucciones -> instruccion
Rule 19    instruccion -> imprimir_instr
Rule 20    instruccion -> asignacion PTCOMA
Rule 21    instruccion -> declaracion PTCOMA
Rule 22    instruccion -> sentencia_if
Rule 23    instruccion -> sentencia_switch
Rule 24    instruccion -> ins_break
Rule 25    instruccion -> ins_while
Rule 26    instruccion -> ins_for
Rule 27    instruccion -> ins_continue
Rule 28    instruccion -> ins_etiqueta
Rule 29    instruccion -> ins_goto
Rule 30    instruccion -> declaracion_struct PTCOMA
Rule 31    instruccion -> llamada PTCOMA
Rule 32    instruccion -> ins_return
Rule 33    instruccion -> error
Rule 34    llamada -> ID PARIZQ expresiones PARDER
Rule 35    llamada -> ID PARIZQ PARDER
Rule 36    ins_return -> RETURN expresion PTCOMA
Rule 37    declaracion_struct -> STRUCT ID lista_id
Rule 38    asignacion -> acceso_struct IGUAL expresion
Rule 39    asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
Rule 40    acceso_struct -> tipo_var PUNTO tipo_var
Rule 41    ins_etiqueta -> ID DOSP
Rule 42    ins_goto -> GOTO ID PTCOMA
Rule 43    ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
Rule 44    instruccion_for -> asignacion
Rule 45    instruccion_for -> declaracion
Rule 46    ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 47    ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
Rule 48    ins_continue -> CONTINUE PTCOMA
Rule 49    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
Rule 50    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
Rule 51    lista_case -> lista_case caso
Rule 52    lista_case -> caso
Rule 53    caso -> CASE expresion DOSP LLAVIZQ instrucciones LLAVDER
Rule 54    caso -> CASE expresion DOSP instruccion
Rule 55    caso -> CASE expresion DOSP
Rule 56    default_ins -> DEFAULT DOSP instruccion
Rule 57    default_ins -> DEFAULT DOSP LLAVIZQ instrucciones LLAVDER
Rule 58    default_ins -> DEFAULT DOSP
Rule 59    ins_break -> BREAK PTCOMA
Rule 60    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 61    sentencia_if -> IF PARIZQ expresion PARDER instruccion
Rule 62    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 63    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
Rule 64    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
Rule 65    lelseif -> lelseif elseif
Rule 66    lelseif -> elseif
Rule 67    elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 68    imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
Rule 69    imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA
Rule 70    asignacion -> ID IGUAL expresion
Rule 71    asignacion -> ID IGUAL PARIZQ TIPO_DATO PARDER expresion
Rule 72    asignacion -> acceso_lista IGUAL expresion
Rule 73    asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
Rule 74    asignacion -> ID IGUAL SCAN PARIZQ PARDER
Rule 75    asignacion -> ID MAS MAS
Rule 76    asignacion -> ID MENOS MENOS
Rule 77    asignacion -> ID ASUMA expresion
Rule 78    asignacion -> ID ARESTA expresion
Rule 79    asignacion -> ID MULTIPLICATIVA expresion
Rule 80    asignacion -> ID DIVIDIDA expresion
Rule 81    asignacion -> ID ARESTO expresion
Rule 82    asignacion -> ID ABOR expresion
Rule 83    asignacion -> ID APAND expresion
Rule 84    asignacion -> ID ASHIFTD expresion
Rule 85    asignacion -> ID ASHIFTI expresion
Rule 86    asignacion -> ID AXORR expresion
Rule 87    accesos -> accesos acceso
Rule 88    accesos -> acceso
Rule 89    acceso -> CORIZQ expresion CORDER
Rule 90    acceso_lista -> ID accesos
Rule 91    acceso_lista -> STRUCT ID accesos
Rule 92    declaracion -> TIPO lista_id
Rule 93    declaracion -> TIPO lista_id IGUAL expresion
Rule 94    declaracion -> TIPO lista_id IGUAL SCAN PARIZQ PARDER
Rule 95    lista_id -> lista_id COMA tipo_var
Rule 96    lista_id -> tipo_var
Rule 97    tipo_var -> ID
Rule 98    tipo_var -> acceso_lista
Rule 99    TIPO_DATO -> INT
Rule 100   TIPO_DATO -> FLOAT
Rule 101   TIPO_DATO -> CHAR
Rule 102   TIPO_DATO -> DOOBLE
Rule 103   TIPO_DATO -> VOID
Rule 104   TIPO -> INT
Rule 105   TIPO -> FLOAT
Rule 106   TIPO -> CHAR
Rule 107   TIPO -> DOOBLE
Rule 108   TIPO -> VOID
Rule 109   expresiones -> expresiones COMA expresion
Rule 110   expresiones -> expresion
Rule 111   expresion -> primitiva
Rule 112   expresion -> expresion_numerica
Rule 113   expresion -> expresion_relacional
Rule 114   expresion -> expresion_unaria
Rule 115   expresion -> expresion_logica
Rule 116   expresion -> expresion_bit_bit
Rule 117   expresion -> PARIZQ expresion PARDER
Rule 118   expresion_unaria -> MENOS expresion
Rule 119   expresion_logica -> expresion AND expresion
Rule 120   expresion_logica -> expresion OR expresion
Rule 121   expresion_logica -> expresion XOR expresion
Rule 122   expresion_logica -> NOT expresion
Rule 123   expresion_bit_bit -> expresion PAND expresion
Rule 124   expresion_bit_bit -> expresion BOR expresion
Rule 125   expresion_bit_bit -> expresion XORR expresion
Rule 126   expresion_bit_bit -> expresion SHIFTI expresion
Rule 127   expresion_bit_bit -> expresion SHIFTD expresion
Rule 128   expresion_bit_bit -> NOTR expresion
Rule 129   expresion_relacional -> expresion MENQUE expresion
Rule 130   expresion_relacional -> expresion MAYQUE expresion
Rule 131   expresion_relacional -> expresion MEIQUE expresion
Rule 132   expresion_relacional -> expresion MAIQUE expresion
Rule 133   expresion_relacional -> expresion IGUALQUE expresion
Rule 134   expresion_relacional -> expresion NIGUALQUE expresion
Rule 135   expresion_numerica -> expresion MAS expresion
Rule 136   expresion_numerica -> expresion MENOS expresion
Rule 137   expresion_numerica -> expresion POR expresion
Rule 138   expresion_numerica -> expresion DIVIDIDO expresion
Rule 139   expresion_numerica -> expresion RESTO expresion
Rule 140   primitiva -> ENTERO
Rule 141   primitiva -> DECIMAL
Rule 142   primitiva -> CADENA
Rule 143   primitiva -> CADENAR_CHAR
Rule 144   primitiva -> ID
Rule 145   primitiva -> acceso_struct
Rule 146   primitiva -> llamada
Rule 147   primitiva -> acceso_lista
Rule 148   primitiva -> array
Rule 149   array -> LLAVIZQ expresiones LLAVDER

Terminals, with rules where they appear

ABOR                 : 82
AND                  : 119
APAND                : 83
ARESTA               : 78
ARESTO               : 81
ASHIFTD              : 84
ASHIFTI              : 85
ASUMA                : 77
AXORR                : 86
BOR                  : 124
BREAK                : 59
CADENA               : 68 69 142
CADENAR_CHAR         : 143
CASE                 : 53 54 55
CHAR                 : 101 106
COMA                 : 14 68 95 109
CONTINUE             : 48
CORDER               : 89
CORIZQ               : 89
DECIMAL              : 141
DEFAULT              : 56 57 58
DIVIDIDA             : 80
DIVIDIDO             : 138
DO                   : 47
DOOBLE               : 102 107
DOSP                 : 41 53 54 55 56 57 58
ELSE                 : 62 63 67
ENTERO               : 140
FLOAT                : 100 105
FOR                  : 43
GOTO                 : 42
ID                   : 8 12 13 16 34 35 37 41 42 70 71 74 75 76 77 78 79 80 81 82 83 84 85 86 90 91 97 144
IF                   : 60 61 62 63 64 67
IGUAL                : 38 39 70 71 72 73 74 93 94
IGUALQUE             : 133
IMPRIMIR             : 68 69
INT                  : 99 104
LLAVDER              : 8 12 13 43 46 47 49 50 53 57 60 62 62 63 63 64 67 149
LLAVIZQ              : 8 12 13 43 46 47 49 50 53 57 60 62 62 63 63 64 67 149
MAIQUE               : 132
MAS                  : 75 75 135
MAYQUE               : 130
MEIQUE               : 131
MENOS                : 76 76 118 136
MENQUE               : 129
MULTIPLICATIVA       : 79
NIGUALQUE            : 134
NOT                  : 122
NOTR                 : 128
OR                   : 120
PAND                 : 123
PARDER               : 12 13 34 35 39 43 46 47 49 50 60 61 62 63 64 67 68 69 71 73 74 94 117
PARIZQ               : 12 13 34 35 39 43 46 47 49 50 60 61 62 63 64 67 68 69 71 73 74 94 117
POR                  : 137
PTCOMA               : 6 8 9 10 20 21 30 31 36 42 43 43 47 48 59 68 69
PUNTO                : 40
RESTO                : 139
RETURN               : 36
SCAN                 : 74 94
SHIFTD               : 127
SHIFTI               : 126
STRUCT               : 8 37 91
SWITCH               : 49 50
UNARIO               : 
VOID                 : 103 108
WHILE                : 46 47
XOR                  : 121
XORR                 : 125
error                : 33

Nonterminals, with rules where they appear

TIPO                 : 12 13 16 92 93 94
TIPO_DATO            : 39 71 73
acceso               : 87 88
acceso_lista         : 72 73 98 147
acceso_struct        : 38 39 145
accesos              : 87 90 91
array                : 148
asignacion           : 20 43 44
caso                 : 51 52
declaracion          : 6 9 10 21 45
declaracion_struct   : 30
declaraciones        : 8 9
default_ins          : 49
definicion_struct    : 7
elseif               : 65 66
empty                : 2
expresion            : 36 38 39 43 46 47 49 50 53 54 55 60 61 62 63 64 67 70 71 72 73 77 78 79 80 81 82 83 84 85 86 89 93 109 110 117 118 119 119 120 120 121 121 122 123 123 124 124 125 125 126 126 127 127 128 129 129 130 130 131 131 132 132 133 133 134 134 135 135 136 136 137 137 138 138 139 139
expresion_bit_bit    : 116
expresion_logica     : 115
expresion_numerica   : 112
expresion_relacional : 113
expresion_unaria     : 114
expresiones          : 34 68 109 149
funcion              : 5
globales             : 1 3
iglobal              : 3 4
imprimir_instr       : 19
init                 : 0
ins_break            : 24
ins_continue         : 27
ins_etiqueta         : 28
ins_for              : 26
ins_goto             : 29
ins_return           : 32
ins_while            : 25
instruccion          : 17 18 54 56 61
instruccion_for      : 43
instrucciones        : 12 13 17 43 46 47 53 57 60 62 62 63 63 64 67
lelseif              : 63 64 65
lista_case           : 49 50 51
lista_id             : 37 92 93 94 95
llamada              : 31 146
parametro            : 14 15
parametros           : 13 14
primitiva            : 111
sentencia_if         : 22
sentencia_switch     : 23
tipo_var             : 40 40 95 96

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . globales
    (2) init -> . empty
    (3) globales -> . globales iglobal
    (4) globales -> . iglobal
    (11) empty -> .
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion PTCOMA
    (7) iglobal -> . definicion_struct
    (12) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (8) definicion_struct -> . STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID

    $end            reduce using rule 11 (empty -> .)
    STRUCT          shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    init                           shift and go to state 1
    globales                       shift and go to state 2
    empty                          shift and go to state 3
    iglobal                        shift and go to state 4
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    definicion_struct              shift and go to state 7
    TIPO                           shift and go to state 8

state 1

    (0) S' -> init .



state 2

    (1) init -> globales .
    (3) globales -> globales . iglobal
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion PTCOMA
    (7) iglobal -> . definicion_struct
    (12) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (8) definicion_struct -> . STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID

    $end            reduce using rule 1 (init -> globales .)
    STRUCT          shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    iglobal                        shift and go to state 15
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    definicion_struct              shift and go to state 7
    TIPO                           shift and go to state 8

state 3

    (2) init -> empty .

    $end            reduce using rule 2 (init -> empty .)


state 4

    (4) globales -> iglobal .

    STRUCT          reduce using rule 4 (globales -> iglobal .)
    INT             reduce using rule 4 (globales -> iglobal .)
    FLOAT           reduce using rule 4 (globales -> iglobal .)
    CHAR            reduce using rule 4 (globales -> iglobal .)
    DOOBLE          reduce using rule 4 (globales -> iglobal .)
    VOID            reduce using rule 4 (globales -> iglobal .)
    $end            reduce using rule 4 (globales -> iglobal .)


state 5

    (5) iglobal -> funcion .

    STRUCT          reduce using rule 5 (iglobal -> funcion .)
    INT             reduce using rule 5 (iglobal -> funcion .)
    FLOAT           reduce using rule 5 (iglobal -> funcion .)
    CHAR            reduce using rule 5 (iglobal -> funcion .)
    DOOBLE          reduce using rule 5 (iglobal -> funcion .)
    VOID            reduce using rule 5 (iglobal -> funcion .)
    $end            reduce using rule 5 (iglobal -> funcion .)


state 6

    (6) iglobal -> declaracion . PTCOMA

    PTCOMA          shift and go to state 16


state 7

    (7) iglobal -> definicion_struct .

    STRUCT          reduce using rule 7 (iglobal -> definicion_struct .)
    INT             reduce using rule 7 (iglobal -> definicion_struct .)
    FLOAT           reduce using rule 7 (iglobal -> definicion_struct .)
    CHAR            reduce using rule 7 (iglobal -> definicion_struct .)
    DOOBLE          reduce using rule 7 (iglobal -> definicion_struct .)
    VOID            reduce using rule 7 (iglobal -> definicion_struct .)
    $end            reduce using rule 7 (iglobal -> definicion_struct .)


state 8

    (12) funcion -> TIPO . ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO . ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (92) declaracion -> TIPO . lista_id
    (93) declaracion -> TIPO . lista_id IGUAL expresion
    (94) declaracion -> TIPO . lista_id IGUAL SCAN PARIZQ PARDER
    (95) lista_id -> . lista_id COMA tipo_var
    (96) lista_id -> . tipo_var
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos

    ID              shift and go to state 17
    STRUCT          shift and go to state 21

    lista_id                       shift and go to state 18
    tipo_var                       shift and go to state 19
    acceso_lista                   shift and go to state 20

state 9

    (8) definicion_struct -> STRUCT . ID LLAVIZQ declaraciones LLAVDER PTCOMA

    ID              shift and go to state 22


state 10

    (104) TIPO -> INT .

    ID              reduce using rule 104 (TIPO -> INT .)
    STRUCT          reduce using rule 104 (TIPO -> INT .)


state 11

    (105) TIPO -> FLOAT .

    ID              reduce using rule 105 (TIPO -> FLOAT .)
    STRUCT          reduce using rule 105 (TIPO -> FLOAT .)


state 12

    (106) TIPO -> CHAR .

    ID              reduce using rule 106 (TIPO -> CHAR .)
    STRUCT          reduce using rule 106 (TIPO -> CHAR .)


state 13

    (107) TIPO -> DOOBLE .

    ID              reduce using rule 107 (TIPO -> DOOBLE .)
    STRUCT          reduce using rule 107 (TIPO -> DOOBLE .)


state 14

    (108) TIPO -> VOID .

    ID              reduce using rule 108 (TIPO -> VOID .)
    STRUCT          reduce using rule 108 (TIPO -> VOID .)


state 15

    (3) globales -> globales iglobal .

    STRUCT          reduce using rule 3 (globales -> globales iglobal .)
    INT             reduce using rule 3 (globales -> globales iglobal .)
    FLOAT           reduce using rule 3 (globales -> globales iglobal .)
    CHAR            reduce using rule 3 (globales -> globales iglobal .)
    DOOBLE          reduce using rule 3 (globales -> globales iglobal .)
    VOID            reduce using rule 3 (globales -> globales iglobal .)
    $end            reduce using rule 3 (globales -> globales iglobal .)


state 16

    (6) iglobal -> declaracion PTCOMA .

    STRUCT          reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    INT             reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    FLOAT           reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    CHAR            reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    VOID            reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    $end            reduce using rule 6 (iglobal -> declaracion PTCOMA .)


state 17

    (12) funcion -> TIPO ID . PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO ID . PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (97) tipo_var -> ID .
    (90) acceso_lista -> ID . accesos
    (87) accesos -> . accesos acceso
    (88) accesos -> . acceso
    (89) acceso -> . CORIZQ expresion CORDER

    PARIZQ          shift and go to state 23
    IGUAL           reduce using rule 97 (tipo_var -> ID .)
    COMA            reduce using rule 97 (tipo_var -> ID .)
    PTCOMA          reduce using rule 97 (tipo_var -> ID .)
    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 24
    acceso                         shift and go to state 25

state 18

    (92) declaracion -> TIPO lista_id .
    (93) declaracion -> TIPO lista_id . IGUAL expresion
    (94) declaracion -> TIPO lista_id . IGUAL SCAN PARIZQ PARDER
    (95) lista_id -> lista_id . COMA tipo_var

    PTCOMA          reduce using rule 92 (declaracion -> TIPO lista_id .)
    IGUAL           shift and go to state 27
    COMA            shift and go to state 28


state 19

    (96) lista_id -> tipo_var .

    IGUAL           reduce using rule 96 (lista_id -> tipo_var .)
    COMA            reduce using rule 96 (lista_id -> tipo_var .)
    PTCOMA          reduce using rule 96 (lista_id -> tipo_var .)


state 20

    (98) tipo_var -> acceso_lista .

    IGUAL           reduce using rule 98 (tipo_var -> acceso_lista .)
    COMA            reduce using rule 98 (tipo_var -> acceso_lista .)
    PTCOMA          reduce using rule 98 (tipo_var -> acceso_lista .)
    CORDER          reduce using rule 98 (tipo_var -> acceso_lista .)
    MAS             reduce using rule 98 (tipo_var -> acceso_lista .)
    MENOS           reduce using rule 98 (tipo_var -> acceso_lista .)
    POR             reduce using rule 98 (tipo_var -> acceso_lista .)
    DIVIDIDO        reduce using rule 98 (tipo_var -> acceso_lista .)
    RESTO           reduce using rule 98 (tipo_var -> acceso_lista .)
    MENQUE          reduce using rule 98 (tipo_var -> acceso_lista .)
    MAYQUE          reduce using rule 98 (tipo_var -> acceso_lista .)
    MEIQUE          reduce using rule 98 (tipo_var -> acceso_lista .)
    MAIQUE          reduce using rule 98 (tipo_var -> acceso_lista .)
    IGUALQUE        reduce using rule 98 (tipo_var -> acceso_lista .)
    NIGUALQUE       reduce using rule 98 (tipo_var -> acceso_lista .)
    AND             reduce using rule 98 (tipo_var -> acceso_lista .)
    OR              reduce using rule 98 (tipo_var -> acceso_lista .)
    XOR             reduce using rule 98 (tipo_var -> acceso_lista .)
    PAND            reduce using rule 98 (tipo_var -> acceso_lista .)
    BOR             reduce using rule 98 (tipo_var -> acceso_lista .)
    XORR            reduce using rule 98 (tipo_var -> acceso_lista .)
    SHIFTI          reduce using rule 98 (tipo_var -> acceso_lista .)
    SHIFTD          reduce using rule 98 (tipo_var -> acceso_lista .)
    PARDER          reduce using rule 98 (tipo_var -> acceso_lista .)
    LLAVDER         reduce using rule 98 (tipo_var -> acceso_lista .)
    DOSP            reduce using rule 98 (tipo_var -> acceso_lista .)


state 21

    (91) acceso_lista -> STRUCT . ID accesos

    ID              shift and go to state 29


state 22

    (8) definicion_struct -> STRUCT ID . LLAVIZQ declaraciones LLAVDER PTCOMA

    LLAVIZQ         shift and go to state 30


state 23

    (12) funcion -> TIPO ID PARIZQ . PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO ID PARIZQ . parametros PARDER LLAVIZQ instrucciones LLAVDER
    (14) parametros -> . parametros COMA parametro
    (15) parametros -> . parametro
    (16) parametro -> . TIPO ID
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID

    PARDER          shift and go to state 32
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 31
    parametros                     shift and go to state 33
    parametro                      shift and go to state 34

state 24

    (90) acceso_lista -> ID accesos .
    (87) accesos -> accesos . acceso
    (89) acceso -> . CORIZQ expresion CORDER

    IGUAL           reduce using rule 90 (acceso_lista -> ID accesos .)
    COMA            reduce using rule 90 (acceso_lista -> ID accesos .)
    PTCOMA          reduce using rule 90 (acceso_lista -> ID accesos .)
    CORDER          reduce using rule 90 (acceso_lista -> ID accesos .)
    MAS             reduce using rule 90 (acceso_lista -> ID accesos .)
    MENOS           reduce using rule 90 (acceso_lista -> ID accesos .)
    POR             reduce using rule 90 (acceso_lista -> ID accesos .)
    DIVIDIDO        reduce using rule 90 (acceso_lista -> ID accesos .)
    RESTO           reduce using rule 90 (acceso_lista -> ID accesos .)
    MENQUE          reduce using rule 90 (acceso_lista -> ID accesos .)
    MAYQUE          reduce using rule 90 (acceso_lista -> ID accesos .)
    MEIQUE          reduce using rule 90 (acceso_lista -> ID accesos .)
    MAIQUE          reduce using rule 90 (acceso_lista -> ID accesos .)
    IGUALQUE        reduce using rule 90 (acceso_lista -> ID accesos .)
    NIGUALQUE       reduce using rule 90 (acceso_lista -> ID accesos .)
    AND             reduce using rule 90 (acceso_lista -> ID accesos .)
    OR              reduce using rule 90 (acceso_lista -> ID accesos .)
    XOR             reduce using rule 90 (acceso_lista -> ID accesos .)
    PAND            reduce using rule 90 (acceso_lista -> ID accesos .)
    BOR             reduce using rule 90 (acceso_lista -> ID accesos .)
    XORR            reduce using rule 90 (acceso_lista -> ID accesos .)
    SHIFTI          reduce using rule 90 (acceso_lista -> ID accesos .)
    SHIFTD          reduce using rule 90 (acceso_lista -> ID accesos .)
    PUNTO           reduce using rule 90 (acceso_lista -> ID accesos .)
    PARDER          reduce using rule 90 (acceso_lista -> ID accesos .)
    LLAVDER         reduce using rule 90 (acceso_lista -> ID accesos .)
    DOSP            reduce using rule 90 (acceso_lista -> ID accesos .)
    CORIZQ          shift and go to state 26

    acceso                         shift and go to state 35

state 25

    (88) accesos -> acceso .

    CORIZQ          reduce using rule 88 (accesos -> acceso .)
    IGUAL           reduce using rule 88 (accesos -> acceso .)
    COMA            reduce using rule 88 (accesos -> acceso .)
    PTCOMA          reduce using rule 88 (accesos -> acceso .)
    CORDER          reduce using rule 88 (accesos -> acceso .)
    MAS             reduce using rule 88 (accesos -> acceso .)
    MENOS           reduce using rule 88 (accesos -> acceso .)
    POR             reduce using rule 88 (accesos -> acceso .)
    DIVIDIDO        reduce using rule 88 (accesos -> acceso .)
    RESTO           reduce using rule 88 (accesos -> acceso .)
    MENQUE          reduce using rule 88 (accesos -> acceso .)
    MAYQUE          reduce using rule 88 (accesos -> acceso .)
    MEIQUE          reduce using rule 88 (accesos -> acceso .)
    MAIQUE          reduce using rule 88 (accesos -> acceso .)
    IGUALQUE        reduce using rule 88 (accesos -> acceso .)
    NIGUALQUE       reduce using rule 88 (accesos -> acceso .)
    AND             reduce using rule 88 (accesos -> acceso .)
    OR              reduce using rule 88 (accesos -> acceso .)
    XOR             reduce using rule 88 (accesos -> acceso .)
    PAND            reduce using rule 88 (accesos -> acceso .)
    BOR             reduce using rule 88 (accesos -> acceso .)
    XORR            reduce using rule 88 (accesos -> acceso .)
    SHIFTI          reduce using rule 88 (accesos -> acceso .)
    SHIFTD          reduce using rule 88 (accesos -> acceso .)
    PUNTO           reduce using rule 88 (accesos -> acceso .)
    PARDER          reduce using rule 88 (accesos -> acceso .)
    LLAVDER         reduce using rule 88 (accesos -> acceso .)
    DOSP            reduce using rule 88 (accesos -> acceso .)


state 26

    (89) acceso -> CORIZQ . expresion CORDER
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 36
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 27

    (93) declaracion -> TIPO lista_id IGUAL . expresion
    (94) declaracion -> TIPO lista_id IGUAL . SCAN PARIZQ PARDER
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    SCAN            shift and go to state 59
    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 58
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 28

    (95) lista_id -> lista_id COMA . tipo_var
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos

    ID              shift and go to state 61
    STRUCT          shift and go to state 21

    tipo_var                       shift and go to state 60
    acceso_lista                   shift and go to state 20

state 29

    (91) acceso_lista -> STRUCT ID . accesos
    (87) accesos -> . accesos acceso
    (88) accesos -> . acceso
    (89) acceso -> . CORIZQ expresion CORDER

    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 62
    acceso                         shift and go to state 25

state 30

    (8) definicion_struct -> STRUCT ID LLAVIZQ . declaraciones LLAVDER PTCOMA
    (9) declaraciones -> . declaraciones declaracion PTCOMA
    (10) declaraciones -> . declaracion PTCOMA
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    declaraciones                  shift and go to state 63
    declaracion                    shift and go to state 64
    TIPO                           shift and go to state 65

state 31

    (16) parametro -> TIPO . ID

    ID              shift and go to state 66


state 32

    (12) funcion -> TIPO ID PARIZQ PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 67


state 33

    (13) funcion -> TIPO ID PARIZQ parametros . PARDER LLAVIZQ instrucciones LLAVDER
    (14) parametros -> parametros . COMA parametro

    PARDER          shift and go to state 68
    COMA            shift and go to state 69


state 34

    (15) parametros -> parametro .

    PARDER          reduce using rule 15 (parametros -> parametro .)
    COMA            reduce using rule 15 (parametros -> parametro .)


state 35

    (87) accesos -> accesos acceso .

    CORIZQ          reduce using rule 87 (accesos -> accesos acceso .)
    IGUAL           reduce using rule 87 (accesos -> accesos acceso .)
    COMA            reduce using rule 87 (accesos -> accesos acceso .)
    PTCOMA          reduce using rule 87 (accesos -> accesos acceso .)
    CORDER          reduce using rule 87 (accesos -> accesos acceso .)
    MAS             reduce using rule 87 (accesos -> accesos acceso .)
    MENOS           reduce using rule 87 (accesos -> accesos acceso .)
    POR             reduce using rule 87 (accesos -> accesos acceso .)
    DIVIDIDO        reduce using rule 87 (accesos -> accesos acceso .)
    RESTO           reduce using rule 87 (accesos -> accesos acceso .)
    MENQUE          reduce using rule 87 (accesos -> accesos acceso .)
    MAYQUE          reduce using rule 87 (accesos -> accesos acceso .)
    MEIQUE          reduce using rule 87 (accesos -> accesos acceso .)
    MAIQUE          reduce using rule 87 (accesos -> accesos acceso .)
    IGUALQUE        reduce using rule 87 (accesos -> accesos acceso .)
    NIGUALQUE       reduce using rule 87 (accesos -> accesos acceso .)
    AND             reduce using rule 87 (accesos -> accesos acceso .)
    OR              reduce using rule 87 (accesos -> accesos acceso .)
    XOR             reduce using rule 87 (accesos -> accesos acceso .)
    PAND            reduce using rule 87 (accesos -> accesos acceso .)
    BOR             reduce using rule 87 (accesos -> accesos acceso .)
    XORR            reduce using rule 87 (accesos -> accesos acceso .)
    SHIFTI          reduce using rule 87 (accesos -> accesos acceso .)
    SHIFTD          reduce using rule 87 (accesos -> accesos acceso .)
    PUNTO           reduce using rule 87 (accesos -> accesos acceso .)
    PARDER          reduce using rule 87 (accesos -> accesos acceso .)
    LLAVDER         reduce using rule 87 (accesos -> accesos acceso .)
    DOSP            reduce using rule 87 (accesos -> accesos acceso .)


state 36

    (89) acceso -> CORIZQ expresion . CORDER
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          shift and go to state 70
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 37

    (111) expresion -> primitiva .

    CORDER          reduce using rule 111 (expresion -> primitiva .)
    MAS             reduce using rule 111 (expresion -> primitiva .)
    MENOS           reduce using rule 111 (expresion -> primitiva .)
    POR             reduce using rule 111 (expresion -> primitiva .)
    DIVIDIDO        reduce using rule 111 (expresion -> primitiva .)
    RESTO           reduce using rule 111 (expresion -> primitiva .)
    MENQUE          reduce using rule 111 (expresion -> primitiva .)
    MAYQUE          reduce using rule 111 (expresion -> primitiva .)
    MEIQUE          reduce using rule 111 (expresion -> primitiva .)
    MAIQUE          reduce using rule 111 (expresion -> primitiva .)
    IGUALQUE        reduce using rule 111 (expresion -> primitiva .)
    NIGUALQUE       reduce using rule 111 (expresion -> primitiva .)
    AND             reduce using rule 111 (expresion -> primitiva .)
    OR              reduce using rule 111 (expresion -> primitiva .)
    XOR             reduce using rule 111 (expresion -> primitiva .)
    PAND            reduce using rule 111 (expresion -> primitiva .)
    BOR             reduce using rule 111 (expresion -> primitiva .)
    XORR            reduce using rule 111 (expresion -> primitiva .)
    SHIFTI          reduce using rule 111 (expresion -> primitiva .)
    SHIFTD          reduce using rule 111 (expresion -> primitiva .)
    PTCOMA          reduce using rule 111 (expresion -> primitiva .)
    PARDER          reduce using rule 111 (expresion -> primitiva .)
    LLAVDER         reduce using rule 111 (expresion -> primitiva .)
    COMA            reduce using rule 111 (expresion -> primitiva .)
    DOSP            reduce using rule 111 (expresion -> primitiva .)


state 38

    (112) expresion -> expresion_numerica .

    CORDER          reduce using rule 112 (expresion -> expresion_numerica .)
    MAS             reduce using rule 112 (expresion -> expresion_numerica .)
    MENOS           reduce using rule 112 (expresion -> expresion_numerica .)
    POR             reduce using rule 112 (expresion -> expresion_numerica .)
    DIVIDIDO        reduce using rule 112 (expresion -> expresion_numerica .)
    RESTO           reduce using rule 112 (expresion -> expresion_numerica .)
    MENQUE          reduce using rule 112 (expresion -> expresion_numerica .)
    MAYQUE          reduce using rule 112 (expresion -> expresion_numerica .)
    MEIQUE          reduce using rule 112 (expresion -> expresion_numerica .)
    MAIQUE          reduce using rule 112 (expresion -> expresion_numerica .)
    IGUALQUE        reduce using rule 112 (expresion -> expresion_numerica .)
    NIGUALQUE       reduce using rule 112 (expresion -> expresion_numerica .)
    AND             reduce using rule 112 (expresion -> expresion_numerica .)
    OR              reduce using rule 112 (expresion -> expresion_numerica .)
    XOR             reduce using rule 112 (expresion -> expresion_numerica .)
    PAND            reduce using rule 112 (expresion -> expresion_numerica .)
    BOR             reduce using rule 112 (expresion -> expresion_numerica .)
    XORR            reduce using rule 112 (expresion -> expresion_numerica .)
    SHIFTI          reduce using rule 112 (expresion -> expresion_numerica .)
    SHIFTD          reduce using rule 112 (expresion -> expresion_numerica .)
    PTCOMA          reduce using rule 112 (expresion -> expresion_numerica .)
    PARDER          reduce using rule 112 (expresion -> expresion_numerica .)
    LLAVDER         reduce using rule 112 (expresion -> expresion_numerica .)
    COMA            reduce using rule 112 (expresion -> expresion_numerica .)
    DOSP            reduce using rule 112 (expresion -> expresion_numerica .)


state 39

    (113) expresion -> expresion_relacional .

    CORDER          reduce using rule 113 (expresion -> expresion_relacional .)
    MAS             reduce using rule 113 (expresion -> expresion_relacional .)
    MENOS           reduce using rule 113 (expresion -> expresion_relacional .)
    POR             reduce using rule 113 (expresion -> expresion_relacional .)
    DIVIDIDO        reduce using rule 113 (expresion -> expresion_relacional .)
    RESTO           reduce using rule 113 (expresion -> expresion_relacional .)
    MENQUE          reduce using rule 113 (expresion -> expresion_relacional .)
    MAYQUE          reduce using rule 113 (expresion -> expresion_relacional .)
    MEIQUE          reduce using rule 113 (expresion -> expresion_relacional .)
    MAIQUE          reduce using rule 113 (expresion -> expresion_relacional .)
    IGUALQUE        reduce using rule 113 (expresion -> expresion_relacional .)
    NIGUALQUE       reduce using rule 113 (expresion -> expresion_relacional .)
    AND             reduce using rule 113 (expresion -> expresion_relacional .)
    OR              reduce using rule 113 (expresion -> expresion_relacional .)
    XOR             reduce using rule 113 (expresion -> expresion_relacional .)
    PAND            reduce using rule 113 (expresion -> expresion_relacional .)
    BOR             reduce using rule 113 (expresion -> expresion_relacional .)
    XORR            reduce using rule 113 (expresion -> expresion_relacional .)
    SHIFTI          reduce using rule 113 (expresion -> expresion_relacional .)
    SHIFTD          reduce using rule 113 (expresion -> expresion_relacional .)
    PTCOMA          reduce using rule 113 (expresion -> expresion_relacional .)
    PARDER          reduce using rule 113 (expresion -> expresion_relacional .)
    LLAVDER         reduce using rule 113 (expresion -> expresion_relacional .)
    COMA            reduce using rule 113 (expresion -> expresion_relacional .)
    DOSP            reduce using rule 113 (expresion -> expresion_relacional .)


state 40

    (114) expresion -> expresion_unaria .

    CORDER          reduce using rule 114 (expresion -> expresion_unaria .)
    MAS             reduce using rule 114 (expresion -> expresion_unaria .)
    MENOS           reduce using rule 114 (expresion -> expresion_unaria .)
    POR             reduce using rule 114 (expresion -> expresion_unaria .)
    DIVIDIDO        reduce using rule 114 (expresion -> expresion_unaria .)
    RESTO           reduce using rule 114 (expresion -> expresion_unaria .)
    MENQUE          reduce using rule 114 (expresion -> expresion_unaria .)
    MAYQUE          reduce using rule 114 (expresion -> expresion_unaria .)
    MEIQUE          reduce using rule 114 (expresion -> expresion_unaria .)
    MAIQUE          reduce using rule 114 (expresion -> expresion_unaria .)
    IGUALQUE        reduce using rule 114 (expresion -> expresion_unaria .)
    NIGUALQUE       reduce using rule 114 (expresion -> expresion_unaria .)
    AND             reduce using rule 114 (expresion -> expresion_unaria .)
    OR              reduce using rule 114 (expresion -> expresion_unaria .)
    XOR             reduce using rule 114 (expresion -> expresion_unaria .)
    PAND            reduce using rule 114 (expresion -> expresion_unaria .)
    BOR             reduce using rule 114 (expresion -> expresion_unaria .)
    XORR            reduce using rule 114 (expresion -> expresion_unaria .)
    SHIFTI          reduce using rule 114 (expresion -> expresion_unaria .)
    SHIFTD          reduce using rule 114 (expresion -> expresion_unaria .)
    PTCOMA          reduce using rule 114 (expresion -> expresion_unaria .)
    PARDER          reduce using rule 114 (expresion -> expresion_unaria .)
    LLAVDER         reduce using rule 114 (expresion -> expresion_unaria .)
    COMA            reduce using rule 114 (expresion -> expresion_unaria .)
    DOSP            reduce using rule 114 (expresion -> expresion_unaria .)


state 41

    (115) expresion -> expresion_logica .

    CORDER          reduce using rule 115 (expresion -> expresion_logica .)
    MAS             reduce using rule 115 (expresion -> expresion_logica .)
    MENOS           reduce using rule 115 (expresion -> expresion_logica .)
    POR             reduce using rule 115 (expresion -> expresion_logica .)
    DIVIDIDO        reduce using rule 115 (expresion -> expresion_logica .)
    RESTO           reduce using rule 115 (expresion -> expresion_logica .)
    MENQUE          reduce using rule 115 (expresion -> expresion_logica .)
    MAYQUE          reduce using rule 115 (expresion -> expresion_logica .)
    MEIQUE          reduce using rule 115 (expresion -> expresion_logica .)
    MAIQUE          reduce using rule 115 (expresion -> expresion_logica .)
    IGUALQUE        reduce using rule 115 (expresion -> expresion_logica .)
    NIGUALQUE       reduce using rule 115 (expresion -> expresion_logica .)
    AND             reduce using rule 115 (expresion -> expresion_logica .)
    OR              reduce using rule 115 (expresion -> expresion_logica .)
    XOR             reduce using rule 115 (expresion -> expresion_logica .)
    PAND            reduce using rule 115 (expresion -> expresion_logica .)
    BOR             reduce using rule 115 (expresion -> expresion_logica .)
    XORR            reduce using rule 115 (expresion -> expresion_logica .)
    SHIFTI          reduce using rule 115 (expresion -> expresion_logica .)
    SHIFTD          reduce using rule 115 (expresion -> expresion_logica .)
    PTCOMA          reduce using rule 115 (expresion -> expresion_logica .)
    PARDER          reduce using rule 115 (expresion -> expresion_logica .)
    LLAVDER         reduce using rule 115 (expresion -> expresion_logica .)
    COMA            reduce using rule 115 (expresion -> expresion_logica .)
    DOSP            reduce using rule 115 (expresion -> expresion_logica .)


state 42

    (116) expresion -> expresion_bit_bit .

    CORDER          reduce using rule 116 (expresion -> expresion_bit_bit .)
    MAS             reduce using rule 116 (expresion -> expresion_bit_bit .)
    MENOS           reduce using rule 116 (expresion -> expresion_bit_bit .)
    POR             reduce using rule 116 (expresion -> expresion_bit_bit .)
    DIVIDIDO        reduce using rule 116 (expresion -> expresion_bit_bit .)
    RESTO           reduce using rule 116 (expresion -> expresion_bit_bit .)
    MENQUE          reduce using rule 116 (expresion -> expresion_bit_bit .)
    MAYQUE          reduce using rule 116 (expresion -> expresion_bit_bit .)
    MEIQUE          reduce using rule 116 (expresion -> expresion_bit_bit .)
    MAIQUE          reduce using rule 116 (expresion -> expresion_bit_bit .)
    IGUALQUE        reduce using rule 116 (expresion -> expresion_bit_bit .)
    NIGUALQUE       reduce using rule 116 (expresion -> expresion_bit_bit .)
    AND             reduce using rule 116 (expresion -> expresion_bit_bit .)
    OR              reduce using rule 116 (expresion -> expresion_bit_bit .)
    XOR             reduce using rule 116 (expresion -> expresion_bit_bit .)
    PAND            reduce using rule 116 (expresion -> expresion_bit_bit .)
    BOR             reduce using rule 116 (expresion -> expresion_bit_bit .)
    XORR            reduce using rule 116 (expresion -> expresion_bit_bit .)
    SHIFTI          reduce using rule 116 (expresion -> expresion_bit_bit .)
    SHIFTD          reduce using rule 116 (expresion -> expresion_bit_bit .)
    PTCOMA          reduce using rule 116 (expresion -> expresion_bit_bit .)
    PARDER          reduce using rule 116 (expresion -> expresion_bit_bit .)
    LLAVDER         reduce using rule 116 (expresion -> expresion_bit_bit .)
    COMA            reduce using rule 116 (expresion -> expresion_bit_bit .)
    DOSP            reduce using rule 116 (expresion -> expresion_bit_bit .)


state 43

    (117) expresion -> PARIZQ . expresion PARDER
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 90
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 44

    (140) primitiva -> ENTERO .

    CORDER          reduce using rule 140 (primitiva -> ENTERO .)
    MAS             reduce using rule 140 (primitiva -> ENTERO .)
    MENOS           reduce using rule 140 (primitiva -> ENTERO .)
    POR             reduce using rule 140 (primitiva -> ENTERO .)
    DIVIDIDO        reduce using rule 140 (primitiva -> ENTERO .)
    RESTO           reduce using rule 140 (primitiva -> ENTERO .)
    MENQUE          reduce using rule 140 (primitiva -> ENTERO .)
    MAYQUE          reduce using rule 140 (primitiva -> ENTERO .)
    MEIQUE          reduce using rule 140 (primitiva -> ENTERO .)
    MAIQUE          reduce using rule 140 (primitiva -> ENTERO .)
    IGUALQUE        reduce using rule 140 (primitiva -> ENTERO .)
    NIGUALQUE       reduce using rule 140 (primitiva -> ENTERO .)
    AND             reduce using rule 140 (primitiva -> ENTERO .)
    OR              reduce using rule 140 (primitiva -> ENTERO .)
    XOR             reduce using rule 140 (primitiva -> ENTERO .)
    PAND            reduce using rule 140 (primitiva -> ENTERO .)
    BOR             reduce using rule 140 (primitiva -> ENTERO .)
    XORR            reduce using rule 140 (primitiva -> ENTERO .)
    SHIFTI          reduce using rule 140 (primitiva -> ENTERO .)
    SHIFTD          reduce using rule 140 (primitiva -> ENTERO .)
    PTCOMA          reduce using rule 140 (primitiva -> ENTERO .)
    PARDER          reduce using rule 140 (primitiva -> ENTERO .)
    LLAVDER         reduce using rule 140 (primitiva -> ENTERO .)
    COMA            reduce using rule 140 (primitiva -> ENTERO .)
    DOSP            reduce using rule 140 (primitiva -> ENTERO .)


state 45

    (141) primitiva -> DECIMAL .

    CORDER          reduce using rule 141 (primitiva -> DECIMAL .)
    MAS             reduce using rule 141 (primitiva -> DECIMAL .)
    MENOS           reduce using rule 141 (primitiva -> DECIMAL .)
    POR             reduce using rule 141 (primitiva -> DECIMAL .)
    DIVIDIDO        reduce using rule 141 (primitiva -> DECIMAL .)
    RESTO           reduce using rule 141 (primitiva -> DECIMAL .)
    MENQUE          reduce using rule 141 (primitiva -> DECIMAL .)
    MAYQUE          reduce using rule 141 (primitiva -> DECIMAL .)
    MEIQUE          reduce using rule 141 (primitiva -> DECIMAL .)
    MAIQUE          reduce using rule 141 (primitiva -> DECIMAL .)
    IGUALQUE        reduce using rule 141 (primitiva -> DECIMAL .)
    NIGUALQUE       reduce using rule 141 (primitiva -> DECIMAL .)
    AND             reduce using rule 141 (primitiva -> DECIMAL .)
    OR              reduce using rule 141 (primitiva -> DECIMAL .)
    XOR             reduce using rule 141 (primitiva -> DECIMAL .)
    PAND            reduce using rule 141 (primitiva -> DECIMAL .)
    BOR             reduce using rule 141 (primitiva -> DECIMAL .)
    XORR            reduce using rule 141 (primitiva -> DECIMAL .)
    SHIFTI          reduce using rule 141 (primitiva -> DECIMAL .)
    SHIFTD          reduce using rule 141 (primitiva -> DECIMAL .)
    PTCOMA          reduce using rule 141 (primitiva -> DECIMAL .)
    PARDER          reduce using rule 141 (primitiva -> DECIMAL .)
    LLAVDER         reduce using rule 141 (primitiva -> DECIMAL .)
    COMA            reduce using rule 141 (primitiva -> DECIMAL .)
    DOSP            reduce using rule 141 (primitiva -> DECIMAL .)


state 46

    (142) primitiva -> CADENA .

    CORDER          reduce using rule 142 (primitiva -> CADENA .)
    MAS             reduce using rule 142 (primitiva -> CADENA .)
    MENOS           reduce using rule 142 (primitiva -> CADENA .)
    POR             reduce using rule 142 (primitiva -> CADENA .)
    DIVIDIDO        reduce using rule 142 (primitiva -> CADENA .)
    RESTO           reduce using rule 142 (primitiva -> CADENA .)
    MENQUE          reduce using rule 142 (primitiva -> CADENA .)
    MAYQUE          reduce using rule 142 (primitiva -> CADENA .)
    MEIQUE          reduce using rule 142 (primitiva -> CADENA .)
    MAIQUE          reduce using rule 142 (primitiva -> CADENA .)
    IGUALQUE        reduce using rule 142 (primitiva -> CADENA .)
    NIGUALQUE       reduce using rule 142 (primitiva -> CADENA .)
    AND             reduce using rule 142 (primitiva -> CADENA .)
    OR              reduce using rule 142 (primitiva -> CADENA .)
    XOR             reduce using rule 142 (primitiva -> CADENA .)
    PAND            reduce using rule 142 (primitiva -> CADENA .)
    BOR             reduce using rule 142 (primitiva -> CADENA .)
    XORR            reduce using rule 142 (primitiva -> CADENA .)
    SHIFTI          reduce using rule 142 (primitiva -> CADENA .)
    SHIFTD          reduce using rule 142 (primitiva -> CADENA .)
    PTCOMA          reduce using rule 142 (primitiva -> CADENA .)
    PARDER          reduce using rule 142 (primitiva -> CADENA .)
    LLAVDER         reduce using rule 142 (primitiva -> CADENA .)
    COMA            reduce using rule 142 (primitiva -> CADENA .)
    DOSP            reduce using rule 142 (primitiva -> CADENA .)


state 47

    (143) primitiva -> CADENAR_CHAR .

    CORDER          reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    MAS             reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    MENOS           reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    POR             reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    DIVIDIDO        reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    RESTO           reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    MENQUE          reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    MAYQUE          reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    MEIQUE          reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    MAIQUE          reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    IGUALQUE        reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    NIGUALQUE       reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    AND             reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    OR              reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    XOR             reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    PAND            reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    BOR             reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    XORR            reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    SHIFTI          reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    SHIFTD          reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    PTCOMA          reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    PARDER          reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    LLAVDER         reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    COMA            reduce using rule 143 (primitiva -> CADENAR_CHAR .)
    DOSP            reduce using rule 143 (primitiva -> CADENAR_CHAR .)


state 48

    (144) primitiva -> ID .
    (34) llamada -> ID . PARIZQ expresiones PARDER
    (35) llamada -> ID . PARIZQ PARDER
    (90) acceso_lista -> ID . accesos
    (97) tipo_var -> ID .
    (87) accesos -> . accesos acceso
    (88) accesos -> . acceso
    (89) acceso -> . CORIZQ expresion CORDER

    CORDER          reduce using rule 144 (primitiva -> ID .)
    MAS             reduce using rule 144 (primitiva -> ID .)
    MENOS           reduce using rule 144 (primitiva -> ID .)
    POR             reduce using rule 144 (primitiva -> ID .)
    DIVIDIDO        reduce using rule 144 (primitiva -> ID .)
    RESTO           reduce using rule 144 (primitiva -> ID .)
    MENQUE          reduce using rule 144 (primitiva -> ID .)
    MAYQUE          reduce using rule 144 (primitiva -> ID .)
    MEIQUE          reduce using rule 144 (primitiva -> ID .)
    MAIQUE          reduce using rule 144 (primitiva -> ID .)
    IGUALQUE        reduce using rule 144 (primitiva -> ID .)
    NIGUALQUE       reduce using rule 144 (primitiva -> ID .)
    AND             reduce using rule 144 (primitiva -> ID .)
    OR              reduce using rule 144 (primitiva -> ID .)
    XOR             reduce using rule 144 (primitiva -> ID .)
    PAND            reduce using rule 144 (primitiva -> ID .)
    BOR             reduce using rule 144 (primitiva -> ID .)
    XORR            reduce using rule 144 (primitiva -> ID .)
    SHIFTI          reduce using rule 144 (primitiva -> ID .)
    SHIFTD          reduce using rule 144 (primitiva -> ID .)
    PTCOMA          reduce using rule 144 (primitiva -> ID .)
    PARDER          reduce using rule 144 (primitiva -> ID .)
    LLAVDER         reduce using rule 144 (primitiva -> ID .)
    COMA            reduce using rule 144 (primitiva -> ID .)
    DOSP            reduce using rule 144 (primitiva -> ID .)
    PARIZQ          shift and go to state 91
    PUNTO           reduce using rule 97 (tipo_var -> ID .)
    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 24
    acceso                         shift and go to state 25

state 49

    (145) primitiva -> acceso_struct .

    CORDER          reduce using rule 145 (primitiva -> acceso_struct .)
    MAS             reduce using rule 145 (primitiva -> acceso_struct .)
    MENOS           reduce using rule 145 (primitiva -> acceso_struct .)
    POR             reduce using rule 145 (primitiva -> acceso_struct .)
    DIVIDIDO        reduce using rule 145 (primitiva -> acceso_struct .)
    RESTO           reduce using rule 145 (primitiva -> acceso_struct .)
    MENQUE          reduce using rule 145 (primitiva -> acceso_struct .)
    MAYQUE          reduce using rule 145 (primitiva -> acceso_struct .)
    MEIQUE          reduce using rule 145 (primitiva -> acceso_struct .)
    MAIQUE          reduce using rule 145 (primitiva -> acceso_struct .)
    IGUALQUE        reduce using rule 145 (primitiva -> acceso_struct .)
    NIGUALQUE       reduce using rule 145 (primitiva -> acceso_struct .)
    AND             reduce using rule 145 (primitiva -> acceso_struct .)
    OR              reduce using rule 145 (primitiva -> acceso_struct .)
    XOR             reduce using rule 145 (primitiva -> acceso_struct .)
    PAND            reduce using rule 145 (primitiva -> acceso_struct .)
    BOR             reduce using rule 145 (primitiva -> acceso_struct .)
    XORR            reduce using rule 145 (primitiva -> acceso_struct .)
    SHIFTI          reduce using rule 145 (primitiva -> acceso_struct .)
    SHIFTD          reduce using rule 145 (primitiva -> acceso_struct .)
    PTCOMA          reduce using rule 145 (primitiva -> acceso_struct .)
    PARDER          reduce using rule 145 (primitiva -> acceso_struct .)
    LLAVDER         reduce using rule 145 (primitiva -> acceso_struct .)
    COMA            reduce using rule 145 (primitiva -> acceso_struct .)
    DOSP            reduce using rule 145 (primitiva -> acceso_struct .)


state 50

    (146) primitiva -> llamada .

    CORDER          reduce using rule 146 (primitiva -> llamada .)
    MAS             reduce using rule 146 (primitiva -> llamada .)
    MENOS           reduce using rule 146 (primitiva -> llamada .)
    POR             reduce using rule 146 (primitiva -> llamada .)
    DIVIDIDO        reduce using rule 146 (primitiva -> llamada .)
    RESTO           reduce using rule 146 (primitiva -> llamada .)
    MENQUE          reduce using rule 146 (primitiva -> llamada .)
    MAYQUE          reduce using rule 146 (primitiva -> llamada .)
    MEIQUE          reduce using rule 146 (primitiva -> llamada .)
    MAIQUE          reduce using rule 146 (primitiva -> llamada .)
    IGUALQUE        reduce using rule 146 (primitiva -> llamada .)
    NIGUALQUE       reduce using rule 146 (primitiva -> llamada .)
    AND             reduce using rule 146 (primitiva -> llamada .)
    OR              reduce using rule 146 (primitiva -> llamada .)
    XOR             reduce using rule 146 (primitiva -> llamada .)
    PAND            reduce using rule 146 (primitiva -> llamada .)
    BOR             reduce using rule 146 (primitiva -> llamada .)
    XORR            reduce using rule 146 (primitiva -> llamada .)
    SHIFTI          reduce using rule 146 (primitiva -> llamada .)
    SHIFTD          reduce using rule 146 (primitiva -> llamada .)
    PTCOMA          reduce using rule 146 (primitiva -> llamada .)
    PARDER          reduce using rule 146 (primitiva -> llamada .)
    LLAVDER         reduce using rule 146 (primitiva -> llamada .)
    COMA            reduce using rule 146 (primitiva -> llamada .)
    DOSP            reduce using rule 146 (primitiva -> llamada .)


state 51

    (147) primitiva -> acceso_lista .
    (98) tipo_var -> acceso_lista .

    CORDER          reduce using rule 147 (primitiva -> acceso_lista .)
    MAS             reduce using rule 147 (primitiva -> acceso_lista .)
    MENOS           reduce using rule 147 (primitiva -> acceso_lista .)
    POR             reduce using rule 147 (primitiva -> acceso_lista .)
    DIVIDIDO        reduce using rule 147 (primitiva -> acceso_lista .)
    RESTO           reduce using rule 147 (primitiva -> acceso_lista .)
    MENQUE          reduce using rule 147 (primitiva -> acceso_lista .)
    MAYQUE          reduce using rule 147 (primitiva -> acceso_lista .)
    MEIQUE          reduce using rule 147 (primitiva -> acceso_lista .)
    MAIQUE          reduce using rule 147 (primitiva -> acceso_lista .)
    IGUALQUE        reduce using rule 147 (primitiva -> acceso_lista .)
    NIGUALQUE       reduce using rule 147 (primitiva -> acceso_lista .)
    AND             reduce using rule 147 (primitiva -> acceso_lista .)
    OR              reduce using rule 147 (primitiva -> acceso_lista .)
    XOR             reduce using rule 147 (primitiva -> acceso_lista .)
    PAND            reduce using rule 147 (primitiva -> acceso_lista .)
    BOR             reduce using rule 147 (primitiva -> acceso_lista .)
    XORR            reduce using rule 147 (primitiva -> acceso_lista .)
    SHIFTI          reduce using rule 147 (primitiva -> acceso_lista .)
    SHIFTD          reduce using rule 147 (primitiva -> acceso_lista .)
    PTCOMA          reduce using rule 147 (primitiva -> acceso_lista .)
    PARDER          reduce using rule 147 (primitiva -> acceso_lista .)
    LLAVDER         reduce using rule 147 (primitiva -> acceso_lista .)
    COMA            reduce using rule 147 (primitiva -> acceso_lista .)
    DOSP            reduce using rule 147 (primitiva -> acceso_lista .)
    PUNTO           reduce using rule 98 (tipo_var -> acceso_lista .)


state 52

    (148) primitiva -> array .

    CORDER          reduce using rule 148 (primitiva -> array .)
    MAS             reduce using rule 148 (primitiva -> array .)
    MENOS           reduce using rule 148 (primitiva -> array .)
    POR             reduce using rule 148 (primitiva -> array .)
    DIVIDIDO        reduce using rule 148 (primitiva -> array .)
    RESTO           reduce using rule 148 (primitiva -> array .)
    MENQUE          reduce using rule 148 (primitiva -> array .)
    MAYQUE          reduce using rule 148 (primitiva -> array .)
    MEIQUE          reduce using rule 148 (primitiva -> array .)
    MAIQUE          reduce using rule 148 (primitiva -> array .)
    IGUALQUE        reduce using rule 148 (primitiva -> array .)
    NIGUALQUE       reduce using rule 148 (primitiva -> array .)
    AND             reduce using rule 148 (primitiva -> array .)
    OR              reduce using rule 148 (primitiva -> array .)
    XOR             reduce using rule 148 (primitiva -> array .)
    PAND            reduce using rule 148 (primitiva -> array .)
    BOR             reduce using rule 148 (primitiva -> array .)
    XORR            reduce using rule 148 (primitiva -> array .)
    SHIFTI          reduce using rule 148 (primitiva -> array .)
    SHIFTD          reduce using rule 148 (primitiva -> array .)
    PTCOMA          reduce using rule 148 (primitiva -> array .)
    PARDER          reduce using rule 148 (primitiva -> array .)
    LLAVDER         reduce using rule 148 (primitiva -> array .)
    COMA            reduce using rule 148 (primitiva -> array .)
    DOSP            reduce using rule 148 (primitiva -> array .)


state 53

    (118) expresion_unaria -> MENOS . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 92
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 54

    (122) expresion_logica -> NOT . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 93
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 55

    (128) expresion_bit_bit -> NOTR . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 94
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 56

    (40) acceso_struct -> tipo_var . PUNTO tipo_var

    PUNTO           shift and go to state 95


state 57

    (149) array -> LLAVIZQ . expresiones LLAVDER
    (109) expresiones -> . expresiones COMA expresion
    (110) expresiones -> . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresiones                    shift and go to state 96
    expresion                      shift and go to state 97
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 58

    (93) declaracion -> TIPO lista_id IGUAL expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 93 (declaracion -> TIPO lista_id IGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 59

    (94) declaracion -> TIPO lista_id IGUAL SCAN . PARIZQ PARDER

    PARIZQ          shift and go to state 98


state 60

    (95) lista_id -> lista_id COMA tipo_var .

    IGUAL           reduce using rule 95 (lista_id -> lista_id COMA tipo_var .)
    COMA            reduce using rule 95 (lista_id -> lista_id COMA tipo_var .)
    PTCOMA          reduce using rule 95 (lista_id -> lista_id COMA tipo_var .)


state 61

    (97) tipo_var -> ID .
    (90) acceso_lista -> ID . accesos
    (87) accesos -> . accesos acceso
    (88) accesos -> . acceso
    (89) acceso -> . CORIZQ expresion CORDER

    IGUAL           reduce using rule 97 (tipo_var -> ID .)
    COMA            reduce using rule 97 (tipo_var -> ID .)
    PTCOMA          reduce using rule 97 (tipo_var -> ID .)
    CORDER          reduce using rule 97 (tipo_var -> ID .)
    MAS             reduce using rule 97 (tipo_var -> ID .)
    MENOS           reduce using rule 97 (tipo_var -> ID .)
    POR             reduce using rule 97 (tipo_var -> ID .)
    DIVIDIDO        reduce using rule 97 (tipo_var -> ID .)
    RESTO           reduce using rule 97 (tipo_var -> ID .)
    MENQUE          reduce using rule 97 (tipo_var -> ID .)
    MAYQUE          reduce using rule 97 (tipo_var -> ID .)
    MEIQUE          reduce using rule 97 (tipo_var -> ID .)
    MAIQUE          reduce using rule 97 (tipo_var -> ID .)
    IGUALQUE        reduce using rule 97 (tipo_var -> ID .)
    NIGUALQUE       reduce using rule 97 (tipo_var -> ID .)
    AND             reduce using rule 97 (tipo_var -> ID .)
    OR              reduce using rule 97 (tipo_var -> ID .)
    XOR             reduce using rule 97 (tipo_var -> ID .)
    PAND            reduce using rule 97 (tipo_var -> ID .)
    BOR             reduce using rule 97 (tipo_var -> ID .)
    XORR            reduce using rule 97 (tipo_var -> ID .)
    SHIFTI          reduce using rule 97 (tipo_var -> ID .)
    SHIFTD          reduce using rule 97 (tipo_var -> ID .)
    PARDER          reduce using rule 97 (tipo_var -> ID .)
    LLAVDER         reduce using rule 97 (tipo_var -> ID .)
    DOSP            reduce using rule 97 (tipo_var -> ID .)
    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 24
    acceso                         shift and go to state 25

state 62

    (91) acceso_lista -> STRUCT ID accesos .
    (87) accesos -> accesos . acceso
    (89) acceso -> . CORIZQ expresion CORDER

    IGUAL           reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    COMA            reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    PTCOMA          reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    CORDER          reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    MAS             reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    MENOS           reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    POR             reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    DIVIDIDO        reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    RESTO           reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    MENQUE          reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    MAYQUE          reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    MEIQUE          reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    MAIQUE          reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    IGUALQUE        reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    NIGUALQUE       reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    AND             reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    OR              reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    XOR             reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    PAND            reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    BOR             reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    XORR            reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    SHIFTI          reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    SHIFTD          reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    PUNTO           reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    PARDER          reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    LLAVDER         reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    DOSP            reduce using rule 91 (acceso_lista -> STRUCT ID accesos .)
    CORIZQ          shift and go to state 26

    acceso                         shift and go to state 35

state 63

    (8) definicion_struct -> STRUCT ID LLAVIZQ declaraciones . LLAVDER PTCOMA
    (9) declaraciones -> declaraciones . declaracion PTCOMA
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID

    LLAVDER         shift and go to state 99
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    declaracion                    shift and go to state 100
    TIPO                           shift and go to state 65

state 64

    (10) declaraciones -> declaracion . PTCOMA

    PTCOMA          shift and go to state 101


state 65

    (92) declaracion -> TIPO . lista_id
    (93) declaracion -> TIPO . lista_id IGUAL expresion
    (94) declaracion -> TIPO . lista_id IGUAL SCAN PARIZQ PARDER
    (95) lista_id -> . lista_id COMA tipo_var
    (96) lista_id -> . tipo_var
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos

    ID              shift and go to state 61
    STRUCT          shift and go to state 21

    lista_id                       shift and go to state 18
    tipo_var                       shift and go to state 19
    acceso_lista                   shift and go to state 20

state 66

    (16) parametro -> TIPO ID .

    PARDER          reduce using rule 16 (parametro -> TIPO ID .)
    COMA            reduce using rule 16 (parametro -> TIPO ID .)


state 67

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 65
    instrucciones                  shift and go to state 103
    instruccion                    shift and go to state 104
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    tipo_var                       shift and go to state 56

state 68

    (13) funcion -> TIPO ID PARIZQ parametros PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 133


state 69

    (14) parametros -> parametros COMA . parametro
    (16) parametro -> . TIPO ID
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    parametro                      shift and go to state 134
    TIPO                           shift and go to state 31

state 70

    (89) acceso -> CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    IGUAL           reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    POR             reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    RESTO           reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    MENQUE          reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    MAYQUE          reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    MEIQUE          reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    MAIQUE          reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    NIGUALQUE       reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    AND             reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    OR              reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    XOR             reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    PAND            reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    BOR             reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    XORR            reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    SHIFTI          reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    SHIFTD          reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    LLAVDER         reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)
    DOSP            reduce using rule 89 (acceso -> CORIZQ expresion CORDER .)


state 71

    (135) expresion_numerica -> expresion MAS . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 135
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 72

    (136) expresion_numerica -> expresion MENOS . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 136
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 73

    (137) expresion_numerica -> expresion POR . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 137
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 74

    (138) expresion_numerica -> expresion DIVIDIDO . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 138
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 75

    (139) expresion_numerica -> expresion RESTO . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 139
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 76

    (129) expresion_relacional -> expresion MENQUE . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 140
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 77

    (130) expresion_relacional -> expresion MAYQUE . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 141
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 78

    (131) expresion_relacional -> expresion MEIQUE . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 142
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 79

    (132) expresion_relacional -> expresion MAIQUE . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 143
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 80

    (133) expresion_relacional -> expresion IGUALQUE . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 144
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 81

    (134) expresion_relacional -> expresion NIGUALQUE . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 145
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 82

    (119) expresion_logica -> expresion AND . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 146
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 83

    (120) expresion_logica -> expresion OR . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 147
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 84

    (121) expresion_logica -> expresion XOR . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 148
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 85

    (123) expresion_bit_bit -> expresion PAND . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 149
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 86

    (124) expresion_bit_bit -> expresion BOR . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 150
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 87

    (125) expresion_bit_bit -> expresion XORR . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 151
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 88

    (126) expresion_bit_bit -> expresion SHIFTI . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 152
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 89

    (127) expresion_bit_bit -> expresion SHIFTD . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 153
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 90

    (117) expresion -> PARIZQ expresion . PARDER
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 154
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 91

    (34) llamada -> ID PARIZQ . expresiones PARDER
    (35) llamada -> ID PARIZQ . PARDER
    (109) expresiones -> . expresiones COMA expresion
    (110) expresiones -> . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARDER          shift and go to state 156
    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresiones                    shift and go to state 155
    expresion                      shift and go to state 97
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 92

    (118) expresion_unaria -> MENOS expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    MAS             reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    MENOS           reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    POR             reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    DIVIDIDO        reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    RESTO           reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    MENQUE          reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    MAYQUE          reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    MEIQUE          reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    MAIQUE          reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    IGUALQUE        reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    NIGUALQUE       reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    AND             reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    OR              reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    XOR             reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    PAND            reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    BOR             reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    XORR            reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    SHIFTI          reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    SHIFTD          reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    PTCOMA          reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    PARDER          reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    LLAVDER         reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    COMA            reduce using rule 118 (expresion_unaria -> MENOS expresion .)
    DOSP            reduce using rule 118 (expresion_unaria -> MENOS expresion .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIVIDIDO        [ shift and go to state 74 ]
  ! RESTO           [ shift and go to state 75 ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]
  ! SHIFTI          [ shift and go to state 88 ]
  ! SHIFTD          [ shift and go to state 89 ]


state 93

    (122) expresion_logica -> NOT expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 122 (expresion_logica -> NOT expresion .)
    MAS             reduce using rule 122 (expresion_logica -> NOT expresion .)
    MENOS           reduce using rule 122 (expresion_logica -> NOT expresion .)
    POR             reduce using rule 122 (expresion_logica -> NOT expresion .)
    DIVIDIDO        reduce using rule 122 (expresion_logica -> NOT expresion .)
    RESTO           reduce using rule 122 (expresion_logica -> NOT expresion .)
    MENQUE          reduce using rule 122 (expresion_logica -> NOT expresion .)
    MAYQUE          reduce using rule 122 (expresion_logica -> NOT expresion .)
    MEIQUE          reduce using rule 122 (expresion_logica -> NOT expresion .)
    MAIQUE          reduce using rule 122 (expresion_logica -> NOT expresion .)
    IGUALQUE        reduce using rule 122 (expresion_logica -> NOT expresion .)
    NIGUALQUE       reduce using rule 122 (expresion_logica -> NOT expresion .)
    AND             reduce using rule 122 (expresion_logica -> NOT expresion .)
    OR              reduce using rule 122 (expresion_logica -> NOT expresion .)
    XOR             reduce using rule 122 (expresion_logica -> NOT expresion .)
    PAND            reduce using rule 122 (expresion_logica -> NOT expresion .)
    BOR             reduce using rule 122 (expresion_logica -> NOT expresion .)
    XORR            reduce using rule 122 (expresion_logica -> NOT expresion .)
    SHIFTI          reduce using rule 122 (expresion_logica -> NOT expresion .)
    SHIFTD          reduce using rule 122 (expresion_logica -> NOT expresion .)
    PTCOMA          reduce using rule 122 (expresion_logica -> NOT expresion .)
    PARDER          reduce using rule 122 (expresion_logica -> NOT expresion .)
    LLAVDER         reduce using rule 122 (expresion_logica -> NOT expresion .)
    COMA            reduce using rule 122 (expresion_logica -> NOT expresion .)
    DOSP            reduce using rule 122 (expresion_logica -> NOT expresion .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIVIDIDO        [ shift and go to state 74 ]
  ! RESTO           [ shift and go to state 75 ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]
  ! SHIFTI          [ shift and go to state 88 ]
  ! SHIFTD          [ shift and go to state 89 ]


state 94

    (128) expresion_bit_bit -> NOTR expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    MAS             reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    MENOS           reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    POR             reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    DIVIDIDO        reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    RESTO           reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    MENQUE          reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    MAYQUE          reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    MEIQUE          reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    MAIQUE          reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    IGUALQUE        reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    NIGUALQUE       reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    AND             reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    OR              reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    XOR             reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    PAND            reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    BOR             reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    XORR            reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    SHIFTI          reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    SHIFTD          reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    PTCOMA          reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    PARDER          reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    LLAVDER         reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    COMA            reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)
    DOSP            reduce using rule 128 (expresion_bit_bit -> NOTR expresion .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIVIDIDO        [ shift and go to state 74 ]
  ! RESTO           [ shift and go to state 75 ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]
  ! SHIFTI          [ shift and go to state 88 ]
  ! SHIFTD          [ shift and go to state 89 ]


state 95

    (40) acceso_struct -> tipo_var PUNTO . tipo_var
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos

    ID              shift and go to state 61
    STRUCT          shift and go to state 21

    tipo_var                       shift and go to state 157
    acceso_lista                   shift and go to state 20

state 96

    (149) array -> LLAVIZQ expresiones . LLAVDER
    (109) expresiones -> expresiones . COMA expresion

    LLAVDER         shift and go to state 158
    COMA            shift and go to state 159


state 97

    (110) expresiones -> expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    LLAVDER         reduce using rule 110 (expresiones -> expresion .)
    COMA            reduce using rule 110 (expresiones -> expresion .)
    PARDER          reduce using rule 110 (expresiones -> expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 98

    (94) declaracion -> TIPO lista_id IGUAL SCAN PARIZQ . PARDER

    PARDER          shift and go to state 160


state 99

    (8) definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER . PTCOMA

    PTCOMA          shift and go to state 161


state 100

    (9) declaraciones -> declaraciones declaracion . PTCOMA

    PTCOMA          shift and go to state 162


state 101

    (10) declaraciones -> declaracion PTCOMA .

    LLAVDER         reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    INT             reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    FLOAT           reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    CHAR            reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    VOID            reduce using rule 10 (declaraciones -> declaracion PTCOMA .)


state 102

    (70) asignacion -> ID . IGUAL expresion
    (71) asignacion -> ID . IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> ID . IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> ID . MAS MAS
    (76) asignacion -> ID . MENOS MENOS
    (77) asignacion -> ID . ASUMA expresion
    (78) asignacion -> ID . ARESTA expresion
    (79) asignacion -> ID . MULTIPLICATIVA expresion
    (80) asignacion -> ID . DIVIDIDA expresion
    (81) asignacion -> ID . ARESTO expresion
    (82) asignacion -> ID . ABOR expresion
    (83) asignacion -> ID . APAND expresion
    (84) asignacion -> ID . ASHIFTD expresion
    (85) asignacion -> ID . ASHIFTI expresion
    (86) asignacion -> ID . AXORR expresion
    (41) ins_etiqueta -> ID . DOSP
    (34) llamada -> ID . PARIZQ expresiones PARDER
    (35) llamada -> ID . PARIZQ PARDER
    (90) acceso_lista -> ID . accesos
    (97) tipo_var -> ID .
    (87) accesos -> . accesos acceso
    (88) accesos -> . acceso
    (89) acceso -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 163
    MAS             shift and go to state 164
    MENOS           shift and go to state 165
    ASUMA           shift and go to state 166
    ARESTA          shift and go to state 167
    MULTIPLICATIVA  shift and go to state 168
    DIVIDIDA        shift and go to state 169
    ARESTO          shift and go to state 170
    ABOR            shift and go to state 171
    APAND           shift and go to state 172
    ASHIFTD         shift and go to state 173
    ASHIFTI         shift and go to state 174
    AXORR           shift and go to state 175
    DOSP            shift and go to state 176
    PARIZQ          shift and go to state 91
    PUNTO           reduce using rule 97 (tipo_var -> ID .)
    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 24
    acceso                         shift and go to state 25

state 103

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 177
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 65
    instruccion                    shift and go to state 178
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    tipo_var                       shift and go to state 56

state 104

    (18) instrucciones -> instruccion .

    LLAVDER         reduce using rule 18 (instrucciones -> instruccion .)
    error           reduce using rule 18 (instrucciones -> instruccion .)
    IMPRIMIR        reduce using rule 18 (instrucciones -> instruccion .)
    ID              reduce using rule 18 (instrucciones -> instruccion .)
    IF              reduce using rule 18 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 18 (instrucciones -> instruccion .)
    BREAK           reduce using rule 18 (instrucciones -> instruccion .)
    WHILE           reduce using rule 18 (instrucciones -> instruccion .)
    DO              reduce using rule 18 (instrucciones -> instruccion .)
    FOR             reduce using rule 18 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 18 (instrucciones -> instruccion .)
    GOTO            reduce using rule 18 (instrucciones -> instruccion .)
    STRUCT          reduce using rule 18 (instrucciones -> instruccion .)
    RETURN          reduce using rule 18 (instrucciones -> instruccion .)
    INT             reduce using rule 18 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 18 (instrucciones -> instruccion .)
    CHAR            reduce using rule 18 (instrucciones -> instruccion .)
    DOOBLE          reduce using rule 18 (instrucciones -> instruccion .)
    VOID            reduce using rule 18 (instrucciones -> instruccion .)


state 105

    (19) instruccion -> imprimir_instr .

    LLAVDER         reduce using rule 19 (instruccion -> imprimir_instr .)
    error           reduce using rule 19 (instruccion -> imprimir_instr .)
    IMPRIMIR        reduce using rule 19 (instruccion -> imprimir_instr .)
    ID              reduce using rule 19 (instruccion -> imprimir_instr .)
    IF              reduce using rule 19 (instruccion -> imprimir_instr .)
    SWITCH          reduce using rule 19 (instruccion -> imprimir_instr .)
    BREAK           reduce using rule 19 (instruccion -> imprimir_instr .)
    WHILE           reduce using rule 19 (instruccion -> imprimir_instr .)
    DO              reduce using rule 19 (instruccion -> imprimir_instr .)
    FOR             reduce using rule 19 (instruccion -> imprimir_instr .)
    CONTINUE        reduce using rule 19 (instruccion -> imprimir_instr .)
    GOTO            reduce using rule 19 (instruccion -> imprimir_instr .)
    STRUCT          reduce using rule 19 (instruccion -> imprimir_instr .)
    RETURN          reduce using rule 19 (instruccion -> imprimir_instr .)
    INT             reduce using rule 19 (instruccion -> imprimir_instr .)
    FLOAT           reduce using rule 19 (instruccion -> imprimir_instr .)
    CHAR            reduce using rule 19 (instruccion -> imprimir_instr .)
    DOOBLE          reduce using rule 19 (instruccion -> imprimir_instr .)
    VOID            reduce using rule 19 (instruccion -> imprimir_instr .)
    DEFAULT         reduce using rule 19 (instruccion -> imprimir_instr .)
    CASE            reduce using rule 19 (instruccion -> imprimir_instr .)


state 106

    (20) instruccion -> asignacion . PTCOMA

    PTCOMA          shift and go to state 179


state 107

    (21) instruccion -> declaracion . PTCOMA

    PTCOMA          shift and go to state 180


state 108

    (22) instruccion -> sentencia_if .

    LLAVDER         reduce using rule 22 (instruccion -> sentencia_if .)
    error           reduce using rule 22 (instruccion -> sentencia_if .)
    IMPRIMIR        reduce using rule 22 (instruccion -> sentencia_if .)
    ID              reduce using rule 22 (instruccion -> sentencia_if .)
    IF              reduce using rule 22 (instruccion -> sentencia_if .)
    SWITCH          reduce using rule 22 (instruccion -> sentencia_if .)
    BREAK           reduce using rule 22 (instruccion -> sentencia_if .)
    WHILE           reduce using rule 22 (instruccion -> sentencia_if .)
    DO              reduce using rule 22 (instruccion -> sentencia_if .)
    FOR             reduce using rule 22 (instruccion -> sentencia_if .)
    CONTINUE        reduce using rule 22 (instruccion -> sentencia_if .)
    GOTO            reduce using rule 22 (instruccion -> sentencia_if .)
    STRUCT          reduce using rule 22 (instruccion -> sentencia_if .)
    RETURN          reduce using rule 22 (instruccion -> sentencia_if .)
    INT             reduce using rule 22 (instruccion -> sentencia_if .)
    FLOAT           reduce using rule 22 (instruccion -> sentencia_if .)
    CHAR            reduce using rule 22 (instruccion -> sentencia_if .)
    DOOBLE          reduce using rule 22 (instruccion -> sentencia_if .)
    VOID            reduce using rule 22 (instruccion -> sentencia_if .)
    DEFAULT         reduce using rule 22 (instruccion -> sentencia_if .)
    CASE            reduce using rule 22 (instruccion -> sentencia_if .)


state 109

    (23) instruccion -> sentencia_switch .

    LLAVDER         reduce using rule 23 (instruccion -> sentencia_switch .)
    error           reduce using rule 23 (instruccion -> sentencia_switch .)
    IMPRIMIR        reduce using rule 23 (instruccion -> sentencia_switch .)
    ID              reduce using rule 23 (instruccion -> sentencia_switch .)
    IF              reduce using rule 23 (instruccion -> sentencia_switch .)
    SWITCH          reduce using rule 23 (instruccion -> sentencia_switch .)
    BREAK           reduce using rule 23 (instruccion -> sentencia_switch .)
    WHILE           reduce using rule 23 (instruccion -> sentencia_switch .)
    DO              reduce using rule 23 (instruccion -> sentencia_switch .)
    FOR             reduce using rule 23 (instruccion -> sentencia_switch .)
    CONTINUE        reduce using rule 23 (instruccion -> sentencia_switch .)
    GOTO            reduce using rule 23 (instruccion -> sentencia_switch .)
    STRUCT          reduce using rule 23 (instruccion -> sentencia_switch .)
    RETURN          reduce using rule 23 (instruccion -> sentencia_switch .)
    INT             reduce using rule 23 (instruccion -> sentencia_switch .)
    FLOAT           reduce using rule 23 (instruccion -> sentencia_switch .)
    CHAR            reduce using rule 23 (instruccion -> sentencia_switch .)
    DOOBLE          reduce using rule 23 (instruccion -> sentencia_switch .)
    VOID            reduce using rule 23 (instruccion -> sentencia_switch .)
    DEFAULT         reduce using rule 23 (instruccion -> sentencia_switch .)
    CASE            reduce using rule 23 (instruccion -> sentencia_switch .)


state 110

    (24) instruccion -> ins_break .

    LLAVDER         reduce using rule 24 (instruccion -> ins_break .)
    error           reduce using rule 24 (instruccion -> ins_break .)
    IMPRIMIR        reduce using rule 24 (instruccion -> ins_break .)
    ID              reduce using rule 24 (instruccion -> ins_break .)
    IF              reduce using rule 24 (instruccion -> ins_break .)
    SWITCH          reduce using rule 24 (instruccion -> ins_break .)
    BREAK           reduce using rule 24 (instruccion -> ins_break .)
    WHILE           reduce using rule 24 (instruccion -> ins_break .)
    DO              reduce using rule 24 (instruccion -> ins_break .)
    FOR             reduce using rule 24 (instruccion -> ins_break .)
    CONTINUE        reduce using rule 24 (instruccion -> ins_break .)
    GOTO            reduce using rule 24 (instruccion -> ins_break .)
    STRUCT          reduce using rule 24 (instruccion -> ins_break .)
    RETURN          reduce using rule 24 (instruccion -> ins_break .)
    INT             reduce using rule 24 (instruccion -> ins_break .)
    FLOAT           reduce using rule 24 (instruccion -> ins_break .)
    CHAR            reduce using rule 24 (instruccion -> ins_break .)
    DOOBLE          reduce using rule 24 (instruccion -> ins_break .)
    VOID            reduce using rule 24 (instruccion -> ins_break .)
    DEFAULT         reduce using rule 24 (instruccion -> ins_break .)
    CASE            reduce using rule 24 (instruccion -> ins_break .)


state 111

    (25) instruccion -> ins_while .

    LLAVDER         reduce using rule 25 (instruccion -> ins_while .)
    error           reduce using rule 25 (instruccion -> ins_while .)
    IMPRIMIR        reduce using rule 25 (instruccion -> ins_while .)
    ID              reduce using rule 25 (instruccion -> ins_while .)
    IF              reduce using rule 25 (instruccion -> ins_while .)
    SWITCH          reduce using rule 25 (instruccion -> ins_while .)
    BREAK           reduce using rule 25 (instruccion -> ins_while .)
    WHILE           reduce using rule 25 (instruccion -> ins_while .)
    DO              reduce using rule 25 (instruccion -> ins_while .)
    FOR             reduce using rule 25 (instruccion -> ins_while .)
    CONTINUE        reduce using rule 25 (instruccion -> ins_while .)
    GOTO            reduce using rule 25 (instruccion -> ins_while .)
    STRUCT          reduce using rule 25 (instruccion -> ins_while .)
    RETURN          reduce using rule 25 (instruccion -> ins_while .)
    INT             reduce using rule 25 (instruccion -> ins_while .)
    FLOAT           reduce using rule 25 (instruccion -> ins_while .)
    CHAR            reduce using rule 25 (instruccion -> ins_while .)
    DOOBLE          reduce using rule 25 (instruccion -> ins_while .)
    VOID            reduce using rule 25 (instruccion -> ins_while .)
    DEFAULT         reduce using rule 25 (instruccion -> ins_while .)
    CASE            reduce using rule 25 (instruccion -> ins_while .)


state 112

    (26) instruccion -> ins_for .

    LLAVDER         reduce using rule 26 (instruccion -> ins_for .)
    error           reduce using rule 26 (instruccion -> ins_for .)
    IMPRIMIR        reduce using rule 26 (instruccion -> ins_for .)
    ID              reduce using rule 26 (instruccion -> ins_for .)
    IF              reduce using rule 26 (instruccion -> ins_for .)
    SWITCH          reduce using rule 26 (instruccion -> ins_for .)
    BREAK           reduce using rule 26 (instruccion -> ins_for .)
    WHILE           reduce using rule 26 (instruccion -> ins_for .)
    DO              reduce using rule 26 (instruccion -> ins_for .)
    FOR             reduce using rule 26 (instruccion -> ins_for .)
    CONTINUE        reduce using rule 26 (instruccion -> ins_for .)
    GOTO            reduce using rule 26 (instruccion -> ins_for .)
    STRUCT          reduce using rule 26 (instruccion -> ins_for .)
    RETURN          reduce using rule 26 (instruccion -> ins_for .)
    INT             reduce using rule 26 (instruccion -> ins_for .)
    FLOAT           reduce using rule 26 (instruccion -> ins_for .)
    CHAR            reduce using rule 26 (instruccion -> ins_for .)
    DOOBLE          reduce using rule 26 (instruccion -> ins_for .)
    VOID            reduce using rule 26 (instruccion -> ins_for .)
    DEFAULT         reduce using rule 26 (instruccion -> ins_for .)
    CASE            reduce using rule 26 (instruccion -> ins_for .)


state 113

    (27) instruccion -> ins_continue .

    LLAVDER         reduce using rule 27 (instruccion -> ins_continue .)
    error           reduce using rule 27 (instruccion -> ins_continue .)
    IMPRIMIR        reduce using rule 27 (instruccion -> ins_continue .)
    ID              reduce using rule 27 (instruccion -> ins_continue .)
    IF              reduce using rule 27 (instruccion -> ins_continue .)
    SWITCH          reduce using rule 27 (instruccion -> ins_continue .)
    BREAK           reduce using rule 27 (instruccion -> ins_continue .)
    WHILE           reduce using rule 27 (instruccion -> ins_continue .)
    DO              reduce using rule 27 (instruccion -> ins_continue .)
    FOR             reduce using rule 27 (instruccion -> ins_continue .)
    CONTINUE        reduce using rule 27 (instruccion -> ins_continue .)
    GOTO            reduce using rule 27 (instruccion -> ins_continue .)
    STRUCT          reduce using rule 27 (instruccion -> ins_continue .)
    RETURN          reduce using rule 27 (instruccion -> ins_continue .)
    INT             reduce using rule 27 (instruccion -> ins_continue .)
    FLOAT           reduce using rule 27 (instruccion -> ins_continue .)
    CHAR            reduce using rule 27 (instruccion -> ins_continue .)
    DOOBLE          reduce using rule 27 (instruccion -> ins_continue .)
    VOID            reduce using rule 27 (instruccion -> ins_continue .)
    DEFAULT         reduce using rule 27 (instruccion -> ins_continue .)
    CASE            reduce using rule 27 (instruccion -> ins_continue .)


state 114

    (28) instruccion -> ins_etiqueta .

    LLAVDER         reduce using rule 28 (instruccion -> ins_etiqueta .)
    error           reduce using rule 28 (instruccion -> ins_etiqueta .)
    IMPRIMIR        reduce using rule 28 (instruccion -> ins_etiqueta .)
    ID              reduce using rule 28 (instruccion -> ins_etiqueta .)
    IF              reduce using rule 28 (instruccion -> ins_etiqueta .)
    SWITCH          reduce using rule 28 (instruccion -> ins_etiqueta .)
    BREAK           reduce using rule 28 (instruccion -> ins_etiqueta .)
    WHILE           reduce using rule 28 (instruccion -> ins_etiqueta .)
    DO              reduce using rule 28 (instruccion -> ins_etiqueta .)
    FOR             reduce using rule 28 (instruccion -> ins_etiqueta .)
    CONTINUE        reduce using rule 28 (instruccion -> ins_etiqueta .)
    GOTO            reduce using rule 28 (instruccion -> ins_etiqueta .)
    STRUCT          reduce using rule 28 (instruccion -> ins_etiqueta .)
    RETURN          reduce using rule 28 (instruccion -> ins_etiqueta .)
    INT             reduce using rule 28 (instruccion -> ins_etiqueta .)
    FLOAT           reduce using rule 28 (instruccion -> ins_etiqueta .)
    CHAR            reduce using rule 28 (instruccion -> ins_etiqueta .)
    DOOBLE          reduce using rule 28 (instruccion -> ins_etiqueta .)
    VOID            reduce using rule 28 (instruccion -> ins_etiqueta .)
    DEFAULT         reduce using rule 28 (instruccion -> ins_etiqueta .)
    CASE            reduce using rule 28 (instruccion -> ins_etiqueta .)


state 115

    (29) instruccion -> ins_goto .

    LLAVDER         reduce using rule 29 (instruccion -> ins_goto .)
    error           reduce using rule 29 (instruccion -> ins_goto .)
    IMPRIMIR        reduce using rule 29 (instruccion -> ins_goto .)
    ID              reduce using rule 29 (instruccion -> ins_goto .)
    IF              reduce using rule 29 (instruccion -> ins_goto .)
    SWITCH          reduce using rule 29 (instruccion -> ins_goto .)
    BREAK           reduce using rule 29 (instruccion -> ins_goto .)
    WHILE           reduce using rule 29 (instruccion -> ins_goto .)
    DO              reduce using rule 29 (instruccion -> ins_goto .)
    FOR             reduce using rule 29 (instruccion -> ins_goto .)
    CONTINUE        reduce using rule 29 (instruccion -> ins_goto .)
    GOTO            reduce using rule 29 (instruccion -> ins_goto .)
    STRUCT          reduce using rule 29 (instruccion -> ins_goto .)
    RETURN          reduce using rule 29 (instruccion -> ins_goto .)
    INT             reduce using rule 29 (instruccion -> ins_goto .)
    FLOAT           reduce using rule 29 (instruccion -> ins_goto .)
    CHAR            reduce using rule 29 (instruccion -> ins_goto .)
    DOOBLE          reduce using rule 29 (instruccion -> ins_goto .)
    VOID            reduce using rule 29 (instruccion -> ins_goto .)
    DEFAULT         reduce using rule 29 (instruccion -> ins_goto .)
    CASE            reduce using rule 29 (instruccion -> ins_goto .)


state 116

    (30) instruccion -> declaracion_struct . PTCOMA

    PTCOMA          shift and go to state 181


state 117

    (31) instruccion -> llamada . PTCOMA

    PTCOMA          shift and go to state 182


state 118

    (32) instruccion -> ins_return .

    LLAVDER         reduce using rule 32 (instruccion -> ins_return .)
    error           reduce using rule 32 (instruccion -> ins_return .)
    IMPRIMIR        reduce using rule 32 (instruccion -> ins_return .)
    ID              reduce using rule 32 (instruccion -> ins_return .)
    IF              reduce using rule 32 (instruccion -> ins_return .)
    SWITCH          reduce using rule 32 (instruccion -> ins_return .)
    BREAK           reduce using rule 32 (instruccion -> ins_return .)
    WHILE           reduce using rule 32 (instruccion -> ins_return .)
    DO              reduce using rule 32 (instruccion -> ins_return .)
    FOR             reduce using rule 32 (instruccion -> ins_return .)
    CONTINUE        reduce using rule 32 (instruccion -> ins_return .)
    GOTO            reduce using rule 32 (instruccion -> ins_return .)
    STRUCT          reduce using rule 32 (instruccion -> ins_return .)
    RETURN          reduce using rule 32 (instruccion -> ins_return .)
    INT             reduce using rule 32 (instruccion -> ins_return .)
    FLOAT           reduce using rule 32 (instruccion -> ins_return .)
    CHAR            reduce using rule 32 (instruccion -> ins_return .)
    DOOBLE          reduce using rule 32 (instruccion -> ins_return .)
    VOID            reduce using rule 32 (instruccion -> ins_return .)
    DEFAULT         reduce using rule 32 (instruccion -> ins_return .)
    CASE            reduce using rule 32 (instruccion -> ins_return .)


state 119

    (33) instruccion -> error .

    LLAVDER         reduce using rule 33 (instruccion -> error .)
    error           reduce using rule 33 (instruccion -> error .)
    IMPRIMIR        reduce using rule 33 (instruccion -> error .)
    ID              reduce using rule 33 (instruccion -> error .)
    IF              reduce using rule 33 (instruccion -> error .)
    SWITCH          reduce using rule 33 (instruccion -> error .)
    BREAK           reduce using rule 33 (instruccion -> error .)
    WHILE           reduce using rule 33 (instruccion -> error .)
    DO              reduce using rule 33 (instruccion -> error .)
    FOR             reduce using rule 33 (instruccion -> error .)
    CONTINUE        reduce using rule 33 (instruccion -> error .)
    GOTO            reduce using rule 33 (instruccion -> error .)
    STRUCT          reduce using rule 33 (instruccion -> error .)
    RETURN          reduce using rule 33 (instruccion -> error .)
    INT             reduce using rule 33 (instruccion -> error .)
    FLOAT           reduce using rule 33 (instruccion -> error .)
    CHAR            reduce using rule 33 (instruccion -> error .)
    DOOBLE          reduce using rule 33 (instruccion -> error .)
    VOID            reduce using rule 33 (instruccion -> error .)
    DEFAULT         reduce using rule 33 (instruccion -> error .)
    CASE            reduce using rule 33 (instruccion -> error .)


state 120

    (68) imprimir_instr -> IMPRIMIR . PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> IMPRIMIR . PARIZQ CADENA PARDER PTCOMA

    PARIZQ          shift and go to state 183


state 121

    (38) asignacion -> acceso_struct . IGUAL expresion
    (39) asignacion -> acceso_struct . IGUAL PARIZQ TIPO_DATO PARDER expresion

    IGUAL           shift and go to state 184


state 122

    (72) asignacion -> acceso_lista . IGUAL expresion
    (73) asignacion -> acceso_lista . IGUAL PARIZQ TIPO_DATO PARDER expresion
    (98) tipo_var -> acceso_lista .

    IGUAL           shift and go to state 185
    PUNTO           reduce using rule 98 (tipo_var -> acceso_lista .)


state 123

    (60) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> IF . PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif

    PARIZQ          shift and go to state 186


state 124

    (49) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER

    PARIZQ          shift and go to state 187


state 125

    (59) ins_break -> BREAK . PTCOMA

    PTCOMA          shift and go to state 188


state 126

    (46) ins_while -> WHILE . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 189


state 127

    (47) ins_while -> DO . LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA

    LLAVIZQ         shift and go to state 190


state 128

    (43) ins_for -> FOR . PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 191


state 129

    (48) ins_continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 192


state 130

    (42) ins_goto -> GOTO . ID PTCOMA

    ID              shift and go to state 193


state 131

    (37) declaracion_struct -> STRUCT . ID lista_id
    (91) acceso_lista -> STRUCT . ID accesos

    ID              shift and go to state 194


state 132

    (36) ins_return -> RETURN . expresion PTCOMA
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 195
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 133

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 65
    instrucciones                  shift and go to state 196
    instruccion                    shift and go to state 104
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    tipo_var                       shift and go to state 56

state 134

    (14) parametros -> parametros COMA parametro .

    PARDER          reduce using rule 14 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 14 (parametros -> parametros COMA parametro .)


state 135

    (135) expresion_numerica -> expresion MAS expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    MAS             reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    MENOS           reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    MENQUE          reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    MAYQUE          reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    MEIQUE          reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    MAIQUE          reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    NIGUALQUE       reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    AND             reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    OR              reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    XOR             reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    PAND            reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    BOR             reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    XORR            reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    SHIFTI          reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    SHIFTD          reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    PTCOMA          reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    PARDER          reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    LLAVDER         reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    COMA            reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    DOSP            reduce using rule 135 (expresion_numerica -> expresion MAS expresion .)
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75

  ! POR             [ reduce using rule 135 (expresion_numerica -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 135 (expresion_numerica -> expresion MAS expresion .) ]
  ! RESTO           [ reduce using rule 135 (expresion_numerica -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]
  ! SHIFTI          [ shift and go to state 88 ]
  ! SHIFTD          [ shift and go to state 89 ]


state 136

    (136) expresion_numerica -> expresion MENOS expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    MAS             reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    MENOS           reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    MENQUE          reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    MAYQUE          reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    MEIQUE          reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    MAIQUE          reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    NIGUALQUE       reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    AND             reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    OR              reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    XOR             reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    PAND            reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    BOR             reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    XORR            reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTI          reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTD          reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    PARDER          reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    LLAVDER         reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    COMA            reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    DOSP            reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .)
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75

  ! POR             [ reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .) ]
  ! RESTO           [ reduce using rule 136 (expresion_numerica -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]
  ! SHIFTI          [ shift and go to state 88 ]
  ! SHIFTD          [ shift and go to state 89 ]


state 137

    (137) expresion_numerica -> expresion POR expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    MAS             reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    MENOS           reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    POR             reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    RESTO           reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    MENQUE          reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    MAYQUE          reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    MEIQUE          reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    MAIQUE          reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    IGUALQUE        reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    NIGUALQUE       reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    AND             reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    OR              reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    XOR             reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    PAND            reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    BOR             reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    XORR            reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    SHIFTI          reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    SHIFTD          reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    PTCOMA          reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    PARDER          reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    LLAVDER         reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    COMA            reduce using rule 137 (expresion_numerica -> expresion POR expresion .)
    DOSP            reduce using rule 137 (expresion_numerica -> expresion POR expresion .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIVIDIDO        [ shift and go to state 74 ]
  ! RESTO           [ shift and go to state 75 ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]
  ! SHIFTI          [ shift and go to state 88 ]
  ! SHIFTD          [ shift and go to state 89 ]


state 138

    (138) expresion_numerica -> expresion DIVIDIDO expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    RESTO           reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENQUE          reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAYQUE          reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MEIQUE          reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAIQUE          reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    NIGUALQUE       reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XOR             reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PAND            reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    BOR             reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XORR            reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTI          reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTD          reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    LLAVDER         reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DOSP            reduce using rule 138 (expresion_numerica -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIVIDIDO        [ shift and go to state 74 ]
  ! RESTO           [ shift and go to state 75 ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]
  ! SHIFTI          [ shift and go to state 88 ]
  ! SHIFTD          [ shift and go to state 89 ]


state 139

    (139) expresion_numerica -> expresion RESTO expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    MAS             reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    MENOS           reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    POR             reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    DIVIDIDO        reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    RESTO           reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    MENQUE          reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    MAYQUE          reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    MEIQUE          reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    MAIQUE          reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    IGUALQUE        reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    NIGUALQUE       reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    AND             reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    OR              reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    XOR             reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    PAND            reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    BOR             reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    XORR            reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTI          reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTD          reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    PTCOMA          reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    PARDER          reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    LLAVDER         reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    COMA            reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)
    DOSP            reduce using rule 139 (expresion_numerica -> expresion RESTO expresion .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIVIDIDO        [ shift and go to state 74 ]
  ! RESTO           [ shift and go to state 75 ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]
  ! SHIFTI          [ shift and go to state 88 ]
  ! SHIFTD          [ shift and go to state 89 ]


state 140

    (129) expresion_relacional -> expresion MENQUE expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    MENQUE          reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    MAYQUE          reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    MEIQUE          reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    MAIQUE          reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    IGUALQUE        reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    NIGUALQUE       reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    AND             reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    XOR             reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    PAND            reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    BOR             reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    XORR            reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    PTCOMA          reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    PARDER          reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    LLAVDER         reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    COMA            reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    DOSP            reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENOS           [ reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! POR             [ reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! RESTO           [ reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 129 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]


state 141

    (130) expresion_relacional -> expresion MAYQUE expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    MENQUE          reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    MAYQUE          reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    MEIQUE          reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    MAIQUE          reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    IGUALQUE        reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    NIGUALQUE       reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    AND             reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    XOR             reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    PAND            reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    BOR             reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    XORR            reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    PTCOMA          reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    PARDER          reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    LLAVDER         reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    COMA            reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    DOSP            reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENOS           [ reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! POR             [ reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! RESTO           [ reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 130 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]


state 142

    (131) expresion_relacional -> expresion MEIQUE expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    MENQUE          reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    MAYQUE          reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    MEIQUE          reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    MAIQUE          reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    IGUALQUE        reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    NIGUALQUE       reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    AND             reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    OR              reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    XOR             reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    PAND            reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    BOR             reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    XORR            reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    PTCOMA          reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    PARDER          reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    LLAVDER         reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    COMA            reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    DOSP            reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENOS           [ reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! POR             [ reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! RESTO           [ reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 131 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]


state 143

    (132) expresion_relacional -> expresion MAIQUE expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    MENQUE          reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    MAYQUE          reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    MEIQUE          reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    MAIQUE          reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    IGUALQUE        reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    NIGUALQUE       reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    AND             reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    OR              reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    XOR             reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    PAND            reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    BOR             reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    XORR            reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    PTCOMA          reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    PARDER          reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    LLAVDER         reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    COMA            reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    DOSP            reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENOS           [ reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! POR             [ reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! RESTO           [ reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 132 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]


state 144

    (133) expresion_relacional -> expresion IGUALQUE expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    NIGUALQUE       reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    AND             reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    OR              reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    XOR             reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    PAND            reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    BOR             reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    XORR            reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    LLAVDER         reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    DOSP            reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 133 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]


state 145

    (134) expresion_relacional -> expresion NIGUALQUE expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    IGUALQUE        reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    NIGUALQUE       reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    AND             reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    OR              reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XOR             reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PAND            reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    BOR             reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XORR            reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PTCOMA          reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PARDER          reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    LLAVDER         reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    COMA            reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    DOSP            reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 134 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]


state 146

    (119) expresion_logica -> expresion AND expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 119 (expresion_logica -> expresion AND expresion .)
    AND             reduce using rule 119 (expresion_logica -> expresion AND expresion .)
    OR              reduce using rule 119 (expresion_logica -> expresion AND expresion .)
    XOR             reduce using rule 119 (expresion_logica -> expresion AND expresion .)
    PTCOMA          reduce using rule 119 (expresion_logica -> expresion AND expresion .)
    PARDER          reduce using rule 119 (expresion_logica -> expresion AND expresion .)
    LLAVDER         reduce using rule 119 (expresion_logica -> expresion AND expresion .)
    COMA            reduce using rule 119 (expresion_logica -> expresion AND expresion .)
    DOSP            reduce using rule 119 (expresion_logica -> expresion AND expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! RESTO           [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! MENQUE          [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! MAYQUE          [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! MEIQUE          [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! MAIQUE          [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! PAND            [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! BOR             [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! XORR            [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTI          [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTD          [ reduce using rule 119 (expresion_logica -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]


state 147

    (120) expresion_logica -> expresion OR expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 120 (expresion_logica -> expresion OR expresion .)
    OR              reduce using rule 120 (expresion_logica -> expresion OR expresion .)
    XOR             reduce using rule 120 (expresion_logica -> expresion OR expresion .)
    PTCOMA          reduce using rule 120 (expresion_logica -> expresion OR expresion .)
    PARDER          reduce using rule 120 (expresion_logica -> expresion OR expresion .)
    LLAVDER         reduce using rule 120 (expresion_logica -> expresion OR expresion .)
    COMA            reduce using rule 120 (expresion_logica -> expresion OR expresion .)
    DOSP            reduce using rule 120 (expresion_logica -> expresion OR expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! RESTO           [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! MENQUE          [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! MAYQUE          [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! MEIQUE          [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! MAIQUE          [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! PAND            [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! BOR             [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! XORR            [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTI          [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTD          [ reduce using rule 120 (expresion_logica -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]


state 148

    (121) expresion_logica -> expresion XOR expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for RESTO resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MEIQUE resolved as shift
  ! shift/reduce conflict for MAIQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for PAND resolved as shift
  ! shift/reduce conflict for BOR resolved as shift
  ! shift/reduce conflict for XORR resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
    CORDER          reduce using rule 121 (expresion_logica -> expresion XOR expresion .)
    PTCOMA          reduce using rule 121 (expresion_logica -> expresion XOR expresion .)
    PARDER          reduce using rule 121 (expresion_logica -> expresion XOR expresion .)
    LLAVDER         reduce using rule 121 (expresion_logica -> expresion XOR expresion .)
    COMA            reduce using rule 121 (expresion_logica -> expresion XOR expresion .)
    DOSP            reduce using rule 121 (expresion_logica -> expresion XOR expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! MENOS           [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! POR             [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! RESTO           [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! MENQUE          [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! MAYQUE          [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! MEIQUE          [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! MAIQUE          [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! AND             [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! OR              [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! XOR             [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! PAND            [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! BOR             [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! XORR            [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTI          [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTD          [ reduce using rule 121 (expresion_logica -> expresion XOR expresion .) ]


state 149

    (123) expresion_bit_bit -> expresion PAND expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    AND             reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    OR              reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    XOR             reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    PAND            reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    BOR             reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    XORR            reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    PTCOMA          reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    PARDER          reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    LLAVDER         reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    COMA            reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    DOSP            reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENOS           [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! POR             [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! RESTO           [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENQUE          [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAYQUE          [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MEIQUE          [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAIQUE          [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! IGUALQUE        [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTI          [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTD          [ reduce using rule 123 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]


state 150

    (124) expresion_bit_bit -> expresion BOR expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .)
    AND             reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .)
    OR              reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .)
    XOR             reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .)
    BOR             reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .)
    PTCOMA          reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .)
    PARDER          reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .)
    LLAVDER         reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .)
    COMA            reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .)
    DOSP            reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    PAND            shift and go to state 85
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENOS           [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! POR             [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! RESTO           [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENQUE          [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAYQUE          [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MEIQUE          [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAIQUE          [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! PAND            [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! XORR            [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTI          [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTD          [ reduce using rule 124 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! BOR             [ shift and go to state 86 ]


state 151

    (125) expresion_bit_bit -> expresion XORR expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .)
    AND             reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .)
    OR              reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .)
    XOR             reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .)
    BOR             reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .)
    XORR            reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .)
    PTCOMA          reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .)
    PARDER          reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .)
    LLAVDER         reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .)
    COMA            reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .)
    DOSP            reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    PAND            shift and go to state 85
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89

  ! MAS             [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENOS           [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! POR             [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! RESTO           [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENQUE          [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAYQUE          [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MEIQUE          [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAIQUE          [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! IGUALQUE        [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! PAND            [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTI          [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTD          [ reduce using rule 125 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]


state 152

    (126) expresion_bit_bit -> expresion SHIFTI expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MENQUE          reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAYQUE          reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MEIQUE          reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAIQUE          reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    IGUALQUE        reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    NIGUALQUE       reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    AND             reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    OR              reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XOR             reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PAND            reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    BOR             reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XORR            reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTI          reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTD          reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PTCOMA          reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PARDER          reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    LLAVDER         reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    COMA            reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    DOSP            reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75

  ! MAS             [ reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENOS           [ reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! POR             [ reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! DIVIDIDO        [ reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! RESTO           [ reduce using rule 126 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]
  ! SHIFTI          [ shift and go to state 88 ]
  ! SHIFTD          [ shift and go to state 89 ]


state 153

    (127) expresion_bit_bit -> expresion SHIFTD expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MENQUE          reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAYQUE          reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MEIQUE          reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAIQUE          reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    IGUALQUE        reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    NIGUALQUE       reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    AND             reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    OR              reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XOR             reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PAND            reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    BOR             reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XORR            reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTI          reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTD          reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PTCOMA          reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PARDER          reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    LLAVDER         reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    COMA            reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    DOSP            reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75

  ! MAS             [ reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENOS           [ reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! POR             [ reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! DIVIDIDO        [ reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! RESTO           [ reduce using rule 127 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENQUE          [ shift and go to state 76 ]
  ! MAYQUE          [ shift and go to state 77 ]
  ! MEIQUE          [ shift and go to state 78 ]
  ! MAIQUE          [ shift and go to state 79 ]
  ! IGUALQUE        [ shift and go to state 80 ]
  ! NIGUALQUE       [ shift and go to state 81 ]
  ! AND             [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! XOR             [ shift and go to state 84 ]
  ! PAND            [ shift and go to state 85 ]
  ! BOR             [ shift and go to state 86 ]
  ! XORR            [ shift and go to state 87 ]
  ! SHIFTI          [ shift and go to state 88 ]
  ! SHIFTD          [ shift and go to state 89 ]


state 154

    (117) expresion -> PARIZQ expresion PARDER .

    CORDER          reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    RESTO           reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    MENQUE          reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    MAYQUE          reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    MEIQUE          reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    MAIQUE          reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    NIGUALQUE       reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    XOR             reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    PAND            reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    BOR             reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    XORR            reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    SHIFTI          reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    SHIFTD          reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    LLAVDER         reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)
    DOSP            reduce using rule 117 (expresion -> PARIZQ expresion PARDER .)


state 155

    (34) llamada -> ID PARIZQ expresiones . PARDER
    (109) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 197
    COMA            shift and go to state 159


state 156

    (35) llamada -> ID PARIZQ PARDER .

    CORDER          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MAS             reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    POR             reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    RESTO           reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MENQUE          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MAYQUE          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MEIQUE          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MAIQUE          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    AND             reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    OR              reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    XOR             reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    PAND            reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    BOR             reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    XORR            reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    SHIFTI          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    SHIFTD          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    PTCOMA          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    LLAVDER         reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    COMA            reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    DOSP            reduce using rule 35 (llamada -> ID PARIZQ PARDER .)


state 157

    (40) acceso_struct -> tipo_var PUNTO tipo_var .

    CORDER          reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MAS             reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MENOS           reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    POR             reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    DIVIDIDO        reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    RESTO           reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MENQUE          reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MAYQUE          reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MEIQUE          reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MAIQUE          reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    IGUALQUE        reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    NIGUALQUE       reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    AND             reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    OR              reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    XOR             reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    PAND            reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    BOR             reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    XORR            reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    SHIFTI          reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    SHIFTD          reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    PTCOMA          reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    PARDER          reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    LLAVDER         reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    COMA            reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    DOSP            reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)
    IGUAL           reduce using rule 40 (acceso_struct -> tipo_var PUNTO tipo_var .)


state 158

    (149) array -> LLAVIZQ expresiones LLAVDER .

    CORDER          reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    MAS             reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    MENOS           reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    POR             reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    DIVIDIDO        reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    RESTO           reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    MENQUE          reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    MAYQUE          reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    MEIQUE          reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    MAIQUE          reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    IGUALQUE        reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    NIGUALQUE       reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    AND             reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    OR              reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    XOR             reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    PAND            reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    BOR             reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    XORR            reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    SHIFTI          reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    SHIFTD          reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    PTCOMA          reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    PARDER          reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    LLAVDER         reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    COMA            reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)
    DOSP            reduce using rule 149 (array -> LLAVIZQ expresiones LLAVDER .)


state 159

    (109) expresiones -> expresiones COMA . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 198
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 160

    (94) declaracion -> TIPO lista_id IGUAL SCAN PARIZQ PARDER .

    PTCOMA          reduce using rule 94 (declaracion -> TIPO lista_id IGUAL SCAN PARIZQ PARDER .)


state 161

    (8) definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .

    STRUCT          reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    INT             reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    FLOAT           reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    CHAR            reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    DOOBLE          reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    VOID            reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    $end            reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)


state 162

    (9) declaraciones -> declaraciones declaracion PTCOMA .

    LLAVDER         reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    INT             reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    FLOAT           reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    CHAR            reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    DOOBLE          reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    VOID            reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)


state 163

    (70) asignacion -> ID IGUAL . expresion
    (71) asignacion -> ID IGUAL . PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> ID IGUAL . SCAN PARIZQ PARDER
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 200
    SCAN            shift and go to state 201
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 199
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 164

    (75) asignacion -> ID MAS . MAS

    MAS             shift and go to state 202


state 165

    (76) asignacion -> ID MENOS . MENOS

    MENOS           shift and go to state 203


state 166

    (77) asignacion -> ID ASUMA . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 204
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 167

    (78) asignacion -> ID ARESTA . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 205
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 168

    (79) asignacion -> ID MULTIPLICATIVA . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 206
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 169

    (80) asignacion -> ID DIVIDIDA . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 207
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 170

    (81) asignacion -> ID ARESTO . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 208
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 171

    (82) asignacion -> ID ABOR . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 209
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 172

    (83) asignacion -> ID APAND . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 210
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 173

    (84) asignacion -> ID ASHIFTD . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 211
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 174

    (85) asignacion -> ID ASHIFTI . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 212
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 175

    (86) asignacion -> ID AXORR . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 213
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 176

    (41) ins_etiqueta -> ID DOSP .

    LLAVDER         reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    error           reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    IMPRIMIR        reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    ID              reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    IF              reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    SWITCH          reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    BREAK           reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    WHILE           reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    DO              reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    FOR             reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    CONTINUE        reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    GOTO            reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    STRUCT          reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    RETURN          reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    INT             reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    FLOAT           reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    CHAR            reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    DOOBLE          reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    VOID            reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    DEFAULT         reduce using rule 41 (ins_etiqueta -> ID DOSP .)
    CASE            reduce using rule 41 (ins_etiqueta -> ID DOSP .)


state 177

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .

    STRUCT          reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)


state 178

    (17) instrucciones -> instrucciones instruccion .

    LLAVDER         reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    error           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    IMPRIMIR        reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    DO              reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    GOTO            reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    STRUCT          reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    DOOBLE          reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    VOID            reduce using rule 17 (instrucciones -> instrucciones instruccion .)


state 179

    (20) instruccion -> asignacion PTCOMA .

    LLAVDER         reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    error           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    IMPRIMIR        reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    IF              reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    SWITCH          reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    BREAK           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    WHILE           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    DO              reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    FOR             reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    CONTINUE        reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    GOTO            reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    STRUCT          reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    RETURN          reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    INT             reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    FLOAT           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    CHAR            reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    DOOBLE          reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    VOID            reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    DEFAULT         reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    CASE            reduce using rule 20 (instruccion -> asignacion PTCOMA .)


state 180

    (21) instruccion -> declaracion PTCOMA .

    LLAVDER         reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    error           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    IMPRIMIR        reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    ID              reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    IF              reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    SWITCH          reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    BREAK           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    WHILE           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    DO              reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    FOR             reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    CONTINUE        reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    GOTO            reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    STRUCT          reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    RETURN          reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    INT             reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    FLOAT           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    CHAR            reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    VOID            reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    DEFAULT         reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    CASE            reduce using rule 21 (instruccion -> declaracion PTCOMA .)


state 181

    (30) instruccion -> declaracion_struct PTCOMA .

    LLAVDER         reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    error           reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    IMPRIMIR        reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    ID              reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    IF              reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    SWITCH          reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    BREAK           reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    WHILE           reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    DO              reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    FOR             reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    CONTINUE        reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    GOTO            reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    STRUCT          reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    RETURN          reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    INT             reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    FLOAT           reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    CHAR            reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    DOOBLE          reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    VOID            reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    DEFAULT         reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    CASE            reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)


state 182

    (31) instruccion -> llamada PTCOMA .

    LLAVDER         reduce using rule 31 (instruccion -> llamada PTCOMA .)
    error           reduce using rule 31 (instruccion -> llamada PTCOMA .)
    IMPRIMIR        reduce using rule 31 (instruccion -> llamada PTCOMA .)
    ID              reduce using rule 31 (instruccion -> llamada PTCOMA .)
    IF              reduce using rule 31 (instruccion -> llamada PTCOMA .)
    SWITCH          reduce using rule 31 (instruccion -> llamada PTCOMA .)
    BREAK           reduce using rule 31 (instruccion -> llamada PTCOMA .)
    WHILE           reduce using rule 31 (instruccion -> llamada PTCOMA .)
    DO              reduce using rule 31 (instruccion -> llamada PTCOMA .)
    FOR             reduce using rule 31 (instruccion -> llamada PTCOMA .)
    CONTINUE        reduce using rule 31 (instruccion -> llamada PTCOMA .)
    GOTO            reduce using rule 31 (instruccion -> llamada PTCOMA .)
    STRUCT          reduce using rule 31 (instruccion -> llamada PTCOMA .)
    RETURN          reduce using rule 31 (instruccion -> llamada PTCOMA .)
    INT             reduce using rule 31 (instruccion -> llamada PTCOMA .)
    FLOAT           reduce using rule 31 (instruccion -> llamada PTCOMA .)
    CHAR            reduce using rule 31 (instruccion -> llamada PTCOMA .)
    DOOBLE          reduce using rule 31 (instruccion -> llamada PTCOMA .)
    VOID            reduce using rule 31 (instruccion -> llamada PTCOMA .)
    DEFAULT         reduce using rule 31 (instruccion -> llamada PTCOMA .)
    CASE            reduce using rule 31 (instruccion -> llamada PTCOMA .)


state 183

    (68) imprimir_instr -> IMPRIMIR PARIZQ . CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> IMPRIMIR PARIZQ . CADENA PARDER PTCOMA

    CADENA          shift and go to state 214


state 184

    (38) asignacion -> acceso_struct IGUAL . expresion
    (39) asignacion -> acceso_struct IGUAL . PARIZQ TIPO_DATO PARDER expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 216
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    acceso_struct                  shift and go to state 49
    expresion                      shift and go to state 215
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 185

    (72) asignacion -> acceso_lista IGUAL . expresion
    (73) asignacion -> acceso_lista IGUAL . PARIZQ TIPO_DATO PARDER expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 218
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    acceso_lista                   shift and go to state 51
    expresion                      shift and go to state 217
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 186

    (60) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> IF PARIZQ . expresion PARDER instruccion
    (62) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 219
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 187

    (49) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case LLAVDER
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 220
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 188

    (59) ins_break -> BREAK PTCOMA .

    LLAVDER         reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    error           reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    IMPRIMIR        reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    ID              reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    IF              reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    SWITCH          reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    BREAK           reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    WHILE           reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    DO              reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    FOR             reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    GOTO            reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    STRUCT          reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    RETURN          reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    INT             reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    FLOAT           reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    CHAR            reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    DOOBLE          reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    VOID            reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    DEFAULT         reduce using rule 59 (ins_break -> BREAK PTCOMA .)
    CASE            reduce using rule 59 (ins_break -> BREAK PTCOMA .)


state 189

    (46) ins_while -> WHILE PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 221
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 190

    (47) ins_while -> DO LLAVIZQ . instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 222
    instruccion                    shift and go to state 104
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 191

    (43) ins_for -> FOR PARIZQ . instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (44) instruccion_for -> . asignacion
    (45) instruccion_for -> . declaracion
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    ID              shift and go to state 226
    STRUCT          shift and go to state 21
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion_for                shift and go to state 223
    asignacion                     shift and go to state 224
    declaracion                    shift and go to state 225
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 192

    (48) ins_continue -> CONTINUE PTCOMA .

    LLAVDER         reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    error           reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    IMPRIMIR        reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    SWITCH          reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    DO              reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    FOR             reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    GOTO            reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    STRUCT          reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    INT             reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    FLOAT           reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    CHAR            reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    DOOBLE          reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    VOID            reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    DEFAULT         reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)
    CASE            reduce using rule 48 (ins_continue -> CONTINUE PTCOMA .)


state 193

    (42) ins_goto -> GOTO ID . PTCOMA

    PTCOMA          shift and go to state 227


state 194

    (37) declaracion_struct -> STRUCT ID . lista_id
    (91) acceso_lista -> STRUCT ID . accesos
    (95) lista_id -> . lista_id COMA tipo_var
    (96) lista_id -> . tipo_var
    (87) accesos -> . accesos acceso
    (88) accesos -> . acceso
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista
    (89) acceso -> . CORIZQ expresion CORDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos

    ID              shift and go to state 61
    CORIZQ          shift and go to state 26
    STRUCT          shift and go to state 21

    lista_id                       shift and go to state 228
    accesos                        shift and go to state 62
    tipo_var                       shift and go to state 19
    acceso                         shift and go to state 25
    acceso_lista                   shift and go to state 20

state 195

    (36) ins_return -> RETURN expresion . PTCOMA
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 229
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 196

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 230
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 65
    instruccion                    shift and go to state 178
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    tipo_var                       shift and go to state 56

state 197

    (34) llamada -> ID PARIZQ expresiones PARDER .

    CORDER          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MAS             reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MENOS           reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    POR             reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    DIVIDIDO        reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    RESTO           reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MENQUE          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MAYQUE          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MEIQUE          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MAIQUE          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    IGUALQUE        reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    NIGUALQUE       reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    AND             reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    OR              reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    XOR             reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    PAND            reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    BOR             reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    XORR            reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    SHIFTI          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    SHIFTD          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    PTCOMA          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    PARDER          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    LLAVDER         reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    COMA            reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    DOSP            reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)


state 198

    (109) expresiones -> expresiones COMA expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    LLAVDER         reduce using rule 109 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 109 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 109 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 199

    (70) asignacion -> ID IGUAL expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 70 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 70 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 200

    (71) asignacion -> ID IGUAL PARIZQ . TIPO_DATO PARDER expresion
    (117) expresion -> PARIZQ . expresion PARDER
    (99) TIPO_DATO -> . INT
    (100) TIPO_DATO -> . FLOAT
    (101) TIPO_DATO -> . CHAR
    (102) TIPO_DATO -> . DOOBLE
    (103) TIPO_DATO -> . VOID
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    CHAR            shift and go to state 234
    DOOBLE          shift and go to state 235
    VOID            shift and go to state 236
    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    TIPO_DATO                      shift and go to state 231
    expresion                      shift and go to state 90
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 201

    (74) asignacion -> ID IGUAL SCAN . PARIZQ PARDER

    PARIZQ          shift and go to state 237


state 202

    (75) asignacion -> ID MAS MAS .

    PTCOMA          reduce using rule 75 (asignacion -> ID MAS MAS .)
    PARDER          reduce using rule 75 (asignacion -> ID MAS MAS .)


state 203

    (76) asignacion -> ID MENOS MENOS .

    PTCOMA          reduce using rule 76 (asignacion -> ID MENOS MENOS .)
    PARDER          reduce using rule 76 (asignacion -> ID MENOS MENOS .)


state 204

    (77) asignacion -> ID ASUMA expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 77 (asignacion -> ID ASUMA expresion .)
    PARDER          reduce using rule 77 (asignacion -> ID ASUMA expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 205

    (78) asignacion -> ID ARESTA expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 78 (asignacion -> ID ARESTA expresion .)
    PARDER          reduce using rule 78 (asignacion -> ID ARESTA expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 206

    (79) asignacion -> ID MULTIPLICATIVA expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 79 (asignacion -> ID MULTIPLICATIVA expresion .)
    PARDER          reduce using rule 79 (asignacion -> ID MULTIPLICATIVA expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 207

    (80) asignacion -> ID DIVIDIDA expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 80 (asignacion -> ID DIVIDIDA expresion .)
    PARDER          reduce using rule 80 (asignacion -> ID DIVIDIDA expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 208

    (81) asignacion -> ID ARESTO expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 81 (asignacion -> ID ARESTO expresion .)
    PARDER          reduce using rule 81 (asignacion -> ID ARESTO expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 209

    (82) asignacion -> ID ABOR expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 82 (asignacion -> ID ABOR expresion .)
    PARDER          reduce using rule 82 (asignacion -> ID ABOR expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 210

    (83) asignacion -> ID APAND expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 83 (asignacion -> ID APAND expresion .)
    PARDER          reduce using rule 83 (asignacion -> ID APAND expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 211

    (84) asignacion -> ID ASHIFTD expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 84 (asignacion -> ID ASHIFTD expresion .)
    PARDER          reduce using rule 84 (asignacion -> ID ASHIFTD expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 212

    (85) asignacion -> ID ASHIFTI expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 85 (asignacion -> ID ASHIFTI expresion .)
    PARDER          reduce using rule 85 (asignacion -> ID ASHIFTI expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 213

    (86) asignacion -> ID AXORR expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 86 (asignacion -> ID AXORR expresion .)
    PARDER          reduce using rule 86 (asignacion -> ID AXORR expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 214

    (68) imprimir_instr -> IMPRIMIR PARIZQ CADENA . COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> IMPRIMIR PARIZQ CADENA . PARDER PTCOMA

    COMA            shift and go to state 238
    PARDER          shift and go to state 239


state 215

    (38) asignacion -> acceso_struct IGUAL expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 38 (asignacion -> acceso_struct IGUAL expresion .)
    PARDER          reduce using rule 38 (asignacion -> acceso_struct IGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 216

    (39) asignacion -> acceso_struct IGUAL PARIZQ . TIPO_DATO PARDER expresion
    (117) expresion -> PARIZQ . expresion PARDER
    (99) TIPO_DATO -> . INT
    (100) TIPO_DATO -> . FLOAT
    (101) TIPO_DATO -> . CHAR
    (102) TIPO_DATO -> . DOOBLE
    (103) TIPO_DATO -> . VOID
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    CHAR            shift and go to state 234
    DOOBLE          shift and go to state 235
    VOID            shift and go to state 236
    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    acceso_struct                  shift and go to state 49
    TIPO_DATO                      shift and go to state 240
    expresion                      shift and go to state 90
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 217

    (72) asignacion -> acceso_lista IGUAL expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 72 (asignacion -> acceso_lista IGUAL expresion .)
    PARDER          reduce using rule 72 (asignacion -> acceso_lista IGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 218

    (73) asignacion -> acceso_lista IGUAL PARIZQ . TIPO_DATO PARDER expresion
    (117) expresion -> PARIZQ . expresion PARDER
    (99) TIPO_DATO -> . INT
    (100) TIPO_DATO -> . FLOAT
    (101) TIPO_DATO -> . CHAR
    (102) TIPO_DATO -> . DOOBLE
    (103) TIPO_DATO -> . VOID
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    INT             shift and go to state 232
    FLOAT           shift and go to state 233
    CHAR            shift and go to state 234
    DOOBLE          shift and go to state 235
    VOID            shift and go to state 236
    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    acceso_lista                   shift and go to state 51
    TIPO_DATO                      shift and go to state 241
    expresion                      shift and go to state 90
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 219

    (60) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> IF PARIZQ expresion . PARDER instruccion
    (62) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 242
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 220

    (49) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case LLAVDER
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 243
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 221

    (46) ins_while -> WHILE PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 244
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 222

    (47) ins_while -> DO LLAVIZQ instrucciones . LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 245
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 178
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 223

    (43) ins_for -> FOR PARIZQ instruccion_for . PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PTCOMA          shift and go to state 246


state 224

    (44) instruccion_for -> asignacion .

    PTCOMA          reduce using rule 44 (instruccion_for -> asignacion .)


state 225

    (45) instruccion_for -> declaracion .

    PTCOMA          reduce using rule 45 (instruccion_for -> declaracion .)


state 226

    (70) asignacion -> ID . IGUAL expresion
    (71) asignacion -> ID . IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> ID . IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> ID . MAS MAS
    (76) asignacion -> ID . MENOS MENOS
    (77) asignacion -> ID . ASUMA expresion
    (78) asignacion -> ID . ARESTA expresion
    (79) asignacion -> ID . MULTIPLICATIVA expresion
    (80) asignacion -> ID . DIVIDIDA expresion
    (81) asignacion -> ID . ARESTO expresion
    (82) asignacion -> ID . ABOR expresion
    (83) asignacion -> ID . APAND expresion
    (84) asignacion -> ID . ASHIFTD expresion
    (85) asignacion -> ID . ASHIFTI expresion
    (86) asignacion -> ID . AXORR expresion
    (90) acceso_lista -> ID . accesos
    (97) tipo_var -> ID .
    (87) accesos -> . accesos acceso
    (88) accesos -> . acceso
    (89) acceso -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 163
    MAS             shift and go to state 164
    MENOS           shift and go to state 165
    ASUMA           shift and go to state 166
    ARESTA          shift and go to state 167
    MULTIPLICATIVA  shift and go to state 168
    DIVIDIDA        shift and go to state 169
    ARESTO          shift and go to state 170
    ABOR            shift and go to state 171
    APAND           shift and go to state 172
    ASHIFTD         shift and go to state 173
    ASHIFTI         shift and go to state 174
    AXORR           shift and go to state 175
    PUNTO           reduce using rule 97 (tipo_var -> ID .)
    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 24
    acceso                         shift and go to state 25

state 227

    (42) ins_goto -> GOTO ID PTCOMA .

    LLAVDER         reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    error           reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    IMPRIMIR        reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    ID              reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    IF              reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    SWITCH          reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    BREAK           reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    WHILE           reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    DO              reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    FOR             reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    CONTINUE        reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    GOTO            reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    STRUCT          reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    RETURN          reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    INT             reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    FLOAT           reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    CHAR            reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    DOOBLE          reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    VOID            reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    DEFAULT         reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)
    CASE            reduce using rule 42 (ins_goto -> GOTO ID PTCOMA .)


state 228

    (37) declaracion_struct -> STRUCT ID lista_id .
    (95) lista_id -> lista_id . COMA tipo_var

    PTCOMA          reduce using rule 37 (declaracion_struct -> STRUCT ID lista_id .)
    COMA            shift and go to state 28


state 229

    (36) ins_return -> RETURN expresion PTCOMA .

    LLAVDER         reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    error           reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    IMPRIMIR        reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    SWITCH          reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    DO              reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    FOR             reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    GOTO            reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    STRUCT          reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    INT             reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    FLOAT           reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    CHAR            reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    DOOBLE          reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    VOID            reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    DEFAULT         reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    CASE            reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)


state 230

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .

    STRUCT          reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)


state 231

    (71) asignacion -> ID IGUAL PARIZQ TIPO_DATO . PARDER expresion

    PARDER          shift and go to state 247


state 232

    (99) TIPO_DATO -> INT .

    PARDER          reduce using rule 99 (TIPO_DATO -> INT .)


state 233

    (100) TIPO_DATO -> FLOAT .

    PARDER          reduce using rule 100 (TIPO_DATO -> FLOAT .)


state 234

    (101) TIPO_DATO -> CHAR .

    PARDER          reduce using rule 101 (TIPO_DATO -> CHAR .)


state 235

    (102) TIPO_DATO -> DOOBLE .

    PARDER          reduce using rule 102 (TIPO_DATO -> DOOBLE .)


state 236

    (103) TIPO_DATO -> VOID .

    PARDER          reduce using rule 103 (TIPO_DATO -> VOID .)


state 237

    (74) asignacion -> ID IGUAL SCAN PARIZQ . PARDER

    PARDER          shift and go to state 248


state 238

    (68) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA . expresiones PARDER PTCOMA
    (109) expresiones -> . expresiones COMA expresion
    (110) expresiones -> . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresiones                    shift and go to state 249
    expresion                      shift and go to state 97
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 239

    (69) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER . PTCOMA

    PTCOMA          shift and go to state 250


state 240

    (39) asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO . PARDER expresion

    PARDER          shift and go to state 251


state 241

    (73) asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO . PARDER expresion

    PARDER          shift and go to state 252


state 242

    (60) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> IF PARIZQ expresion PARDER . instruccion
    (62) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVIZQ         shift and go to state 253
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 254
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 243

    (49) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case LLAVDER

    LLAVIZQ         shift and go to state 255


state 244

    (46) ins_while -> WHILE PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 256


state 245

    (47) ins_while -> DO LLAVIZQ instrucciones LLAVDER . WHILE PARIZQ expresion PARDER PTCOMA

    WHILE           shift and go to state 257


state 246

    (43) ins_for -> FOR PARIZQ instruccion_for PTCOMA . expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 258
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 247

    (71) asignacion -> ID IGUAL PARIZQ TIPO_DATO PARDER . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 259
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 248

    (74) asignacion -> ID IGUAL SCAN PARIZQ PARDER .

    PTCOMA          reduce using rule 74 (asignacion -> ID IGUAL SCAN PARIZQ PARDER .)
    PARDER          reduce using rule 74 (asignacion -> ID IGUAL SCAN PARIZQ PARDER .)


state 249

    (68) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones . PARDER PTCOMA
    (109) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 260
    COMA            shift and go to state 159


state 250

    (69) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .

    LLAVDER         reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    error           reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    ID              reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IF              reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    SWITCH          reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    BREAK           reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    WHILE           reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DO              reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    FOR             reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CONTINUE        reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    GOTO            reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    STRUCT          reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    RETURN          reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    INT             reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    FLOAT           reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CHAR            reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DOOBLE          reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    VOID            reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DEFAULT         reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CASE            reduce using rule 69 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)


state 251

    (39) asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO PARDER . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    acceso_struct                  shift and go to state 49
    expresion                      shift and go to state 261
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 252

    (73) asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO PARDER . expresion
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    acceso_lista                   shift and go to state 51
    expresion                      shift and go to state 262
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 253

    (60) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (62) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 263
    instruccion                    shift and go to state 104
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 254

    (61) sentencia_if -> IF PARIZQ expresion PARDER instruccion .

    LLAVDER         reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    error           reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    IMPRIMIR        reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    ID              reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    IF              reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    SWITCH          reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    BREAK           reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    WHILE           reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    DO              reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    FOR             reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    CONTINUE        reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    GOTO            reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    STRUCT          reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    RETURN          reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    INT             reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    FLOAT           reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    CHAR            reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    DOOBLE          reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    VOID            reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    DEFAULT         reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    CASE            reduce using rule 61 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)


state 255

    (49) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case default_ins LLAVDER
    (50) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case LLAVDER
    (51) lista_case -> . lista_case caso
    (52) lista_case -> . caso
    (53) caso -> . CASE expresion DOSP LLAVIZQ instrucciones LLAVDER
    (54) caso -> . CASE expresion DOSP instruccion
    (55) caso -> . CASE expresion DOSP

    CASE            shift and go to state 266

    lista_case                     shift and go to state 264
    caso                           shift and go to state 265

state 256

    (46) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 267
    instruccion                    shift and go to state 104
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 257

    (47) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 268


state 258

    (43) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion . PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 269
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 259

    (71) asignacion -> ID IGUAL PARIZQ TIPO_DATO PARDER expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 71 (asignacion -> ID IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    PARDER          reduce using rule 71 (asignacion -> ID IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 260

    (68) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 270


state 261

    (39) asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 39 (asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    PARDER          reduce using rule 39 (asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 262

    (73) asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion .
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 73 (asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    PARDER          reduce using rule 73 (asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 263

    (60) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (62) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 271
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 178
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 264

    (49) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . default_ins LLAVDER
    (50) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . LLAVDER
    (51) lista_case -> lista_case . caso
    (56) default_ins -> . DEFAULT DOSP instruccion
    (57) default_ins -> . DEFAULT DOSP LLAVIZQ instrucciones LLAVDER
    (58) default_ins -> . DEFAULT DOSP
    (53) caso -> . CASE expresion DOSP LLAVIZQ instrucciones LLAVDER
    (54) caso -> . CASE expresion DOSP instruccion
    (55) caso -> . CASE expresion DOSP

    LLAVDER         shift and go to state 273
    DEFAULT         shift and go to state 275
    CASE            shift and go to state 266

    default_ins                    shift and go to state 272
    caso                           shift and go to state 274

state 265

    (52) lista_case -> caso .

    LLAVDER         reduce using rule 52 (lista_case -> caso .)
    DEFAULT         reduce using rule 52 (lista_case -> caso .)
    CASE            reduce using rule 52 (lista_case -> caso .)


state 266

    (53) caso -> CASE . expresion DOSP LLAVIZQ instrucciones LLAVDER
    (54) caso -> CASE . expresion DOSP instruccion
    (55) caso -> CASE . expresion DOSP
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 276
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 267

    (46) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 277
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 178
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 268

    (47) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ . expresion PARDER PTCOMA
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 278
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 269

    (43) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA . asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    ID              shift and go to state 226
    STRUCT          shift and go to state 21

    asignacion                     shift and go to state 279
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    tipo_var                       shift and go to state 56

state 270

    (68) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .

    LLAVDER         reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    error           reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    SWITCH          reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DO              reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    FOR             reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    GOTO            reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    STRUCT          reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    INT             reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    FLOAT           reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CHAR            reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DOOBLE          reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    VOID            reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DEFAULT         reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CASE            reduce using rule 68 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)


state 271

    (60) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .
    (62) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif
    (65) lelseif -> . lelseif elseif
    (66) lelseif -> . elseif
    (67) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVDER         reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 280

    lelseif                        shift and go to state 281
    elseif                         shift and go to state 282

state 272

    (49) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins . LLAVDER

    LLAVDER         shift and go to state 283


state 273

    (50) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .

    LLAVDER         reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    error           reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IMPRIMIR        reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    ID              reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IF              reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    SWITCH          reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    BREAK           reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    WHILE           reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DO              reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    FOR             reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CONTINUE        reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    GOTO            reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    STRUCT          reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    RETURN          reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    INT             reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    FLOAT           reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CHAR            reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DOOBLE          reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    VOID            reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DEFAULT         reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CASE            reduce using rule 50 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)


state 274

    (51) lista_case -> lista_case caso .

    LLAVDER         reduce using rule 51 (lista_case -> lista_case caso .)
    DEFAULT         reduce using rule 51 (lista_case -> lista_case caso .)
    CASE            reduce using rule 51 (lista_case -> lista_case caso .)


state 275

    (56) default_ins -> DEFAULT . DOSP instruccion
    (57) default_ins -> DEFAULT . DOSP LLAVIZQ instrucciones LLAVDER
    (58) default_ins -> DEFAULT . DOSP

    DOSP            shift and go to state 284


state 276

    (53) caso -> CASE expresion . DOSP LLAVIZQ instrucciones LLAVDER
    (54) caso -> CASE expresion . DOSP instruccion
    (55) caso -> CASE expresion . DOSP
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    DOSP            shift and go to state 285
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 277

    (46) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 46 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)


state 278

    (47) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion . PARDER PTCOMA
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 286
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 279

    (43) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 287


state 280

    (62) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER
    (67) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 289
    IF              shift and go to state 288


state 281

    (63) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif . ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .
    (65) lelseif -> lelseif . elseif
    (67) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    ELSE            shift and go to state 290
    LLAVDER         reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    error           reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IMPRIMIR        reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    ID              reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IF              reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    SWITCH          reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    BREAK           reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    WHILE           reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DO              reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    FOR             reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CONTINUE        reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    GOTO            reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    STRUCT          reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    RETURN          reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    INT             reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    FLOAT           reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CHAR            reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DOOBLE          reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    VOID            reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DEFAULT         reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CASE            reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)

    elseif                         shift and go to state 291

state 282

    (66) lelseif -> elseif .

    ELSE            reduce using rule 66 (lelseif -> elseif .)
    LLAVDER         reduce using rule 66 (lelseif -> elseif .)
    error           reduce using rule 66 (lelseif -> elseif .)
    IMPRIMIR        reduce using rule 66 (lelseif -> elseif .)
    ID              reduce using rule 66 (lelseif -> elseif .)
    IF              reduce using rule 66 (lelseif -> elseif .)
    SWITCH          reduce using rule 66 (lelseif -> elseif .)
    BREAK           reduce using rule 66 (lelseif -> elseif .)
    WHILE           reduce using rule 66 (lelseif -> elseif .)
    DO              reduce using rule 66 (lelseif -> elseif .)
    FOR             reduce using rule 66 (lelseif -> elseif .)
    CONTINUE        reduce using rule 66 (lelseif -> elseif .)
    GOTO            reduce using rule 66 (lelseif -> elseif .)
    STRUCT          reduce using rule 66 (lelseif -> elseif .)
    RETURN          reduce using rule 66 (lelseif -> elseif .)
    INT             reduce using rule 66 (lelseif -> elseif .)
    FLOAT           reduce using rule 66 (lelseif -> elseif .)
    CHAR            reduce using rule 66 (lelseif -> elseif .)
    DOOBLE          reduce using rule 66 (lelseif -> elseif .)
    VOID            reduce using rule 66 (lelseif -> elseif .)
    DEFAULT         reduce using rule 66 (lelseif -> elseif .)
    CASE            reduce using rule 66 (lelseif -> elseif .)


state 283

    (49) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .

    LLAVDER         reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    error           reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IMPRIMIR        reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    ID              reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IF              reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    SWITCH          reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    BREAK           reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    WHILE           reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DO              reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    FOR             reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CONTINUE        reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    GOTO            reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    STRUCT          reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    RETURN          reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    INT             reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    FLOAT           reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CHAR            reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DOOBLE          reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    VOID            reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DEFAULT         reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CASE            reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)


state 284

    (56) default_ins -> DEFAULT DOSP . instruccion
    (57) default_ins -> DEFAULT DOSP . LLAVIZQ instrucciones LLAVDER
    (58) default_ins -> DEFAULT DOSP .
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVIZQ         shift and go to state 293
    LLAVDER         reduce using rule 58 (default_ins -> DEFAULT DOSP .)
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 292
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 285

    (53) caso -> CASE expresion DOSP . LLAVIZQ instrucciones LLAVDER
    (54) caso -> CASE expresion DOSP . instruccion
    (55) caso -> CASE expresion DOSP .
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVIZQ         shift and go to state 294
    LLAVDER         reduce using rule 55 (caso -> CASE expresion DOSP .)
    DEFAULT         reduce using rule 55 (caso -> CASE expresion DOSP .)
    CASE            reduce using rule 55 (caso -> CASE expresion DOSP .)
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 295
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 286

    (47) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 296


state 287

    (43) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 297


state 288

    (67) elseif -> ELSE IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 298


state 289

    (62) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 299
    instruccion                    shift and go to state 104
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 290

    (63) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE . LLAVIZQ instrucciones LLAVDER
    (67) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 300
    IF              shift and go to state 288


state 291

    (65) lelseif -> lelseif elseif .

    ELSE            reduce using rule 65 (lelseif -> lelseif elseif .)
    LLAVDER         reduce using rule 65 (lelseif -> lelseif elseif .)
    error           reduce using rule 65 (lelseif -> lelseif elseif .)
    IMPRIMIR        reduce using rule 65 (lelseif -> lelseif elseif .)
    ID              reduce using rule 65 (lelseif -> lelseif elseif .)
    IF              reduce using rule 65 (lelseif -> lelseif elseif .)
    SWITCH          reduce using rule 65 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 65 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 65 (lelseif -> lelseif elseif .)
    DO              reduce using rule 65 (lelseif -> lelseif elseif .)
    FOR             reduce using rule 65 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 65 (lelseif -> lelseif elseif .)
    GOTO            reduce using rule 65 (lelseif -> lelseif elseif .)
    STRUCT          reduce using rule 65 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 65 (lelseif -> lelseif elseif .)
    INT             reduce using rule 65 (lelseif -> lelseif elseif .)
    FLOAT           reduce using rule 65 (lelseif -> lelseif elseif .)
    CHAR            reduce using rule 65 (lelseif -> lelseif elseif .)
    DOOBLE          reduce using rule 65 (lelseif -> lelseif elseif .)
    VOID            reduce using rule 65 (lelseif -> lelseif elseif .)
    DEFAULT         reduce using rule 65 (lelseif -> lelseif elseif .)
    CASE            reduce using rule 65 (lelseif -> lelseif elseif .)


state 292

    (56) default_ins -> DEFAULT DOSP instruccion .

    LLAVDER         reduce using rule 56 (default_ins -> DEFAULT DOSP instruccion .)


state 293

    (57) default_ins -> DEFAULT DOSP LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 301
    instruccion                    shift and go to state 104
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 294

    (53) caso -> CASE expresion DOSP LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 302
    instruccion                    shift and go to state 104
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 295

    (54) caso -> CASE expresion DOSP instruccion .

    LLAVDER         reduce using rule 54 (caso -> CASE expresion DOSP instruccion .)
    DEFAULT         reduce using rule 54 (caso -> CASE expresion DOSP instruccion .)
    CASE            reduce using rule 54 (caso -> CASE expresion DOSP instruccion .)


state 296

    (47) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .

    LLAVDER         reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    error           reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    SWITCH          reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DO              reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    GOTO            reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    STRUCT          reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    INT             reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    FLOAT           reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DOOBLE          reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    VOID            reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DEFAULT         reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CASE            reduce using rule 47 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)


state 297

    (43) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    asignacion                     shift and go to state 106
    instrucciones                  shift and go to state 303
    instruccion                    shift and go to state 104
    imprimir_instr                 shift and go to state 105
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 298

    (67) elseif -> ELSE IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (111) expresion -> . primitiva
    (112) expresion -> . expresion_numerica
    (113) expresion -> . expresion_relacional
    (114) expresion -> . expresion_unaria
    (115) expresion -> . expresion_logica
    (116) expresion -> . expresion_bit_bit
    (117) expresion -> . PARIZQ expresion PARDER
    (140) primitiva -> . ENTERO
    (141) primitiva -> . DECIMAL
    (142) primitiva -> . CADENA
    (143) primitiva -> . CADENAR_CHAR
    (144) primitiva -> . ID
    (145) primitiva -> . acceso_struct
    (146) primitiva -> . llamada
    (147) primitiva -> . acceso_lista
    (148) primitiva -> . array
    (135) expresion_numerica -> . expresion MAS expresion
    (136) expresion_numerica -> . expresion MENOS expresion
    (137) expresion_numerica -> . expresion POR expresion
    (138) expresion_numerica -> . expresion DIVIDIDO expresion
    (139) expresion_numerica -> . expresion RESTO expresion
    (129) expresion_relacional -> . expresion MENQUE expresion
    (130) expresion_relacional -> . expresion MAYQUE expresion
    (131) expresion_relacional -> . expresion MEIQUE expresion
    (132) expresion_relacional -> . expresion MAIQUE expresion
    (133) expresion_relacional -> . expresion IGUALQUE expresion
    (134) expresion_relacional -> . expresion NIGUALQUE expresion
    (118) expresion_unaria -> . MENOS expresion
    (119) expresion_logica -> . expresion AND expresion
    (120) expresion_logica -> . expresion OR expresion
    (121) expresion_logica -> . expresion XOR expresion
    (122) expresion_logica -> . NOT expresion
    (123) expresion_bit_bit -> . expresion PAND expresion
    (124) expresion_bit_bit -> . expresion BOR expresion
    (125) expresion_bit_bit -> . expresion XORR expresion
    (126) expresion_bit_bit -> . expresion SHIFTI expresion
    (127) expresion_bit_bit -> . expresion SHIFTD expresion
    (128) expresion_bit_bit -> . NOTR expresion
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (149) array -> . LLAVIZQ expresiones LLAVDER
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    CADENAR_CHAR    shift and go to state 47
    ID              shift and go to state 48
    MENOS           shift and go to state 53
    NOT             shift and go to state 54
    NOTR            shift and go to state 55
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 57

    expresion                      shift and go to state 304
    primitiva                      shift and go to state 37
    expresion_numerica             shift and go to state 38
    expresion_relacional           shift and go to state 39
    expresion_unaria               shift and go to state 40
    expresion_logica               shift and go to state 41
    expresion_bit_bit              shift and go to state 42
    acceso_struct                  shift and go to state 49
    llamada                        shift and go to state 50
    acceso_lista                   shift and go to state 51
    array                          shift and go to state 52
    tipo_var                       shift and go to state 56

state 299

    (62) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 305
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 178
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 300

    (63) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 306
    instruccion                    shift and go to state 104
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 301

    (57) default_ins -> DEFAULT DOSP LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 307
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 178
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 302

    (53) caso -> CASE expresion DOSP LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 308
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 178
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 303

    (43) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 309
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    asignacion                     shift and go to state 106
    instruccion                    shift and go to state 178
    imprimir_instr                 shift and go to state 105
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 304

    (67) elseif -> ELSE IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (135) expresion_numerica -> expresion . MAS expresion
    (136) expresion_numerica -> expresion . MENOS expresion
    (137) expresion_numerica -> expresion . POR expresion
    (138) expresion_numerica -> expresion . DIVIDIDO expresion
    (139) expresion_numerica -> expresion . RESTO expresion
    (129) expresion_relacional -> expresion . MENQUE expresion
    (130) expresion_relacional -> expresion . MAYQUE expresion
    (131) expresion_relacional -> expresion . MEIQUE expresion
    (132) expresion_relacional -> expresion . MAIQUE expresion
    (133) expresion_relacional -> expresion . IGUALQUE expresion
    (134) expresion_relacional -> expresion . NIGUALQUE expresion
    (119) expresion_logica -> expresion . AND expresion
    (120) expresion_logica -> expresion . OR expresion
    (121) expresion_logica -> expresion . XOR expresion
    (123) expresion_bit_bit -> expresion . PAND expresion
    (124) expresion_bit_bit -> expresion . BOR expresion
    (125) expresion_bit_bit -> expresion . XORR expresion
    (126) expresion_bit_bit -> expresion . SHIFTI expresion
    (127) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 310
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    RESTO           shift and go to state 75
    MENQUE          shift and go to state 76
    MAYQUE          shift and go to state 77
    MEIQUE          shift and go to state 78
    MAIQUE          shift and go to state 79
    IGUALQUE        shift and go to state 80
    NIGUALQUE       shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    XOR             shift and go to state 84
    PAND            shift and go to state 85
    BOR             shift and go to state 86
    XORR            shift and go to state 87
    SHIFTI          shift and go to state 88
    SHIFTD          shift and go to state 89


state 305

    (62) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 62 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)


state 306

    (63) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 311
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 178
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 307

    (57) default_ins -> DEFAULT DOSP LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 57 (default_ins -> DEFAULT DOSP LLAVIZQ instrucciones LLAVDER .)


state 308

    (53) caso -> CASE expresion DOSP LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 53 (caso -> CASE expresion DOSP LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 53 (caso -> CASE expresion DOSP LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 53 (caso -> CASE expresion DOSP LLAVIZQ instrucciones LLAVDER .)


state 309

    (43) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 43 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)


state 310

    (67) elseif -> ELSE IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 312


state 311

    (63) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 63 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)


state 312

    (67) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 313
    instruccion                    shift and go to state 104
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 313

    (67) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (68) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (69) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (39) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (70) asignacion -> . ID IGUAL expresion
    (71) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (72) asignacion -> . acceso_lista IGUAL expresion
    (73) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (74) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (75) asignacion -> . ID MAS MAS
    (76) asignacion -> . ID MENOS MENOS
    (77) asignacion -> . ID ASUMA expresion
    (78) asignacion -> . ID ARESTA expresion
    (79) asignacion -> . ID MULTIPLICATIVA expresion
    (80) asignacion -> . ID DIVIDIDA expresion
    (81) asignacion -> . ID ARESTO expresion
    (82) asignacion -> . ID ABOR expresion
    (83) asignacion -> . ID APAND expresion
    (84) asignacion -> . ID ASHIFTD expresion
    (85) asignacion -> . ID ASHIFTI expresion
    (86) asignacion -> . ID AXORR expresion
    (92) declaracion -> . TIPO lista_id
    (93) declaracion -> . TIPO lista_id IGUAL expresion
    (94) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (61) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (62) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (63) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (50) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (59) ins_break -> . BREAK PTCOMA
    (46) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (43) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (48) ins_continue -> . CONTINUE PTCOMA
    (41) ins_etiqueta -> . ID DOSP
    (42) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . STRUCT ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (40) acceso_struct -> . tipo_var PUNTO tipo_var
    (90) acceso_lista -> . ID accesos
    (91) acceso_lista -> . STRUCT ID accesos
    (104) TIPO -> . INT
    (105) TIPO -> . FLOAT
    (106) TIPO -> . CHAR
    (107) TIPO -> . DOOBLE
    (108) TIPO -> . VOID
    (97) tipo_var -> . ID
    (98) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 314
    error           shift and go to state 119
    IMPRIMIR        shift and go to state 120
    ID              shift and go to state 102
    IF              shift and go to state 123
    SWITCH          shift and go to state 124
    BREAK           shift and go to state 125
    WHILE           shift and go to state 126
    DO              shift and go to state 127
    FOR             shift and go to state 128
    CONTINUE        shift and go to state 129
    GOTO            shift and go to state 130
    STRUCT          shift and go to state 131
    RETURN          shift and go to state 132
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 178
    imprimir_instr                 shift and go to state 105
    asignacion                     shift and go to state 106
    declaracion                    shift and go to state 107
    sentencia_if                   shift and go to state 108
    sentencia_switch               shift and go to state 109
    ins_break                      shift and go to state 110
    ins_while                      shift and go to state 111
    ins_for                        shift and go to state 112
    ins_continue                   shift and go to state 113
    ins_etiqueta                   shift and go to state 114
    ins_goto                       shift and go to state 115
    declaracion_struct             shift and go to state 116
    llamada                        shift and go to state 117
    ins_return                     shift and go to state 118
    acceso_struct                  shift and go to state 121
    acceso_lista                   shift and go to state 122
    TIPO                           shift and go to state 65
    tipo_var                       shift and go to state 56

state 314

    (67) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    ELSE            reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 67 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 148 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 148 resolved as shift
WARNING: shift/reduce conflict for POR in state 148 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 148 resolved as shift
WARNING: shift/reduce conflict for RESTO in state 148 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 148 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 148 resolved as shift
WARNING: shift/reduce conflict for MEIQUE in state 148 resolved as shift
WARNING: shift/reduce conflict for MAIQUE in state 148 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 148 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 148 resolved as shift
WARNING: shift/reduce conflict for AND in state 148 resolved as shift
WARNING: shift/reduce conflict for OR in state 148 resolved as shift
WARNING: shift/reduce conflict for XOR in state 148 resolved as shift
WARNING: shift/reduce conflict for PAND in state 148 resolved as shift
WARNING: shift/reduce conflict for BOR in state 148 resolved as shift
WARNING: shift/reduce conflict for XORR in state 148 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 148 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 148 resolved as shift
