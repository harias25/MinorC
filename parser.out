Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORDER
    CORIZQ
    FLECHA
    PUNTO
    UNARIO

Grammar

Rule 0     S' -> init
Rule 1     init -> globales
Rule 2     init -> empty
Rule 3     globales -> globales iglobal
Rule 4     globales -> iglobal
Rule 5     iglobal -> funcion
Rule 6     iglobal -> declaracion
Rule 7     empty -> <empty>
Rule 8     funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
Rule 9     funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
Rule 10    parametros -> parametros COMA parametro
Rule 11    parametros -> parametro
Rule 12    parametro -> TIPO ID
Rule 13    instrucciones -> instrucciones instruccion
Rule 14    instrucciones -> instruccion
Rule 15    instruccion -> imprimir_instr
Rule 16    instruccion -> asignacion
Rule 17    instruccion -> declaracion
Rule 18    instruccion -> sentencia_if
Rule 19    instruccion -> sentencia_switch
Rule 20    instruccion -> ins_break
Rule 21    instruccion -> ins_scan
Rule 22    instruccion -> error
Rule 23    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
Rule 24    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
Rule 25    lista_case -> lista_case caso
Rule 26    lista_case -> caso
Rule 27    caso -> CASE expresion DOSP instrucciones
Rule 28    caso -> CASE expresion DOSP
Rule 29    default_ins -> DEFAULT DOSP instrucciones
Rule 30    default_ins -> DEFAULT DOSP
Rule 31    ins_break -> BREAK PTCOMA
Rule 32    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 33    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 34    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
Rule 35    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
Rule 36    lelseif -> lelseif elseif
Rule 37    lelseif -> elseif
Rule 38    elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 39    ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
Rule 40    imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
Rule 41    imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA
Rule 42    asignacion -> ID IGUAL expresion PTCOMA
Rule 43    asignacion -> ID ASUMA expresion PTCOMA
Rule 44    asignacion -> ID ARESTA expresion PTCOMA
Rule 45    asignacion -> ID MULTIPLICATIVA expresion PTCOMA
Rule 46    asignacion -> ID DIVIDIDA expresion PTCOMA
Rule 47    asignacion -> ID ARESTO expresion PTCOMA
Rule 48    asignacion -> ID ABOR expresion PTCOMA
Rule 49    asignacion -> ID APAND expresion PTCOMA
Rule 50    asignacion -> ID ASHIFTD expresion PTCOMA
Rule 51    asignacion -> ID ASHIFTI expresion PTCOMA
Rule 52    asignacion -> ID AXORR expresion PTCOMA
Rule 53    declaracion -> TIPO lista_id PTCOMA
Rule 54    declaracion -> TIPO lista_id IGUAL expresion PTCOMA
Rule 55    lista_id -> lista_id COMA ID
Rule 56    lista_id -> ID
Rule 57    TIPO -> INT
Rule 58    TIPO -> FLOAT
Rule 59    TIPO -> CHAR
Rule 60    TIPO -> VOID
Rule 61    expresiones -> expresiones COMA expresion
Rule 62    expresiones -> expresion
Rule 63    expresion -> primitiva
Rule 64    expresion -> expresion_numerica
Rule 65    expresion -> expresion_relacional
Rule 66    expresion -> expresion_unaria
Rule 67    expresion -> expresion_logica
Rule 68    expresion -> expresion_bit_bit
Rule 69    expresion -> PARIZQ expresion PARDER
Rule 70    expresion_unaria -> MENOS expresion
Rule 71    expresion_logica -> expresion AND expresion
Rule 72    expresion_logica -> expresion OR expresion
Rule 73    expresion_logica -> expresion XOR expresion
Rule 74    expresion_logica -> NOT expresion
Rule 75    expresion_bit_bit -> expresion PAND expresion
Rule 76    expresion_bit_bit -> expresion BOR expresion
Rule 77    expresion_bit_bit -> expresion XORR expresion
Rule 78    expresion_bit_bit -> expresion SHIFTI expresion
Rule 79    expresion_bit_bit -> expresion SHIFTD expresion
Rule 80    expresion_bit_bit -> NOTR expresion
Rule 81    expresion_relacional -> expresion MENQUE expresion
Rule 82    expresion_relacional -> expresion MAYQUE expresion
Rule 83    expresion_relacional -> expresion MEIQUE expresion
Rule 84    expresion_relacional -> expresion MAIQUE expresion
Rule 85    expresion_relacional -> expresion IGUALQUE expresion
Rule 86    expresion_relacional -> expresion NIGUALQUE expresion
Rule 87    expresion_numerica -> expresion MAS expresion
Rule 88    expresion_numerica -> expresion MENOS expresion
Rule 89    expresion_numerica -> expresion POR expresion
Rule 90    expresion_numerica -> expresion DIVIDIDO expresion
Rule 91    expresion_numerica -> expresion RESTO expresion
Rule 92    primitiva -> ENTERO
Rule 93    primitiva -> DECIMAL
Rule 94    primitiva -> CADENA
Rule 95    primitiva -> CADENAR_CHAR
Rule 96    primitiva -> ID

Terminals, with rules where they appear

ABOR                 : 48
AND                  : 71
APAND                : 49
ARESTA               : 44
ARESTO               : 47
ASHIFTD              : 50
ASHIFTI              : 51
ASUMA                : 43
AXORR                : 52
BOR                  : 76
BREAK                : 31
CADENA               : 39 40 41 94
CADENAR_CHAR         : 95
CASE                 : 27 28
CHAR                 : 59
COMA                 : 10 39 40 55 61
CORDER               : 
CORIZQ               : 
DECIMAL              : 93
DEFAULT              : 29 30
DIVIDIDA             : 46
DIVIDIDO             : 90
DOSP                 : 27 28 29 30
ELSE                 : 33 34 38
ENTERO               : 92
FLECHA               : 
FLOAT                : 58
ID                   : 8 9 12 39 42 43 44 45 46 47 48 49 50 51 52 55 56 96
IF                   : 32 33 34 35 38
IGUAL                : 42 54
IGUALQUE             : 85
IMPRIMIR             : 40 41
INT                  : 57
LLAVDER              : 8 9 23 24 32 33 33 34 34 35 38
LLAVIZQ              : 8 9 23 24 32 33 33 34 34 35 38
MAIQUE               : 84
MAS                  : 87
MAYQUE               : 82
MEIQUE               : 83
MENOS                : 70 88
MENQUE               : 81
MULTIPLICATIVA       : 45
NIGUALQUE            : 86
NOT                  : 74
NOTR                 : 80
OR                   : 72
PAND                 : 39 75
PARDER               : 8 9 23 24 32 33 34 35 38 39 40 41 69
PARIZQ               : 8 9 23 24 32 33 34 35 38 39 40 41 69
POR                  : 89
PTCOMA               : 31 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
PUNTO                : 
RESTO                : 91
SCAN                 : 39
SHIFTD               : 79
SHIFTI               : 78
SWITCH               : 23 24
UNARIO               : 
VOID                 : 60
XOR                  : 73
XORR                 : 77
error                : 22

Nonterminals, with rules where they appear

TIPO                 : 8 9 12 53 54
asignacion           : 16
caso                 : 25 26
declaracion          : 6 17
default_ins          : 23
elseif               : 36 37
empty                : 2
expresion            : 23 24 27 28 32 33 34 35 38 42 43 44 45 46 47 48 49 50 51 52 54 61 62 69 70 71 71 72 72 73 73 74 75 75 76 76 77 77 78 78 79 79 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91
expresion_bit_bit    : 68
expresion_logica     : 67
expresion_numerica   : 64
expresion_relacional : 65
expresion_unaria     : 66
expresiones          : 40 61
funcion              : 5
globales             : 1 3
iglobal              : 3 4
imprimir_instr       : 15
init                 : 0
ins_break            : 20
ins_scan             : 21
instruccion          : 13 14
instrucciones        : 8 9 13 27 29 32 33 33 34 34 35 38
lelseif              : 34 35 36
lista_case           : 23 24 25
lista_id             : 53 54 55
parametro            : 10 11
parametros           : 9 10
primitiva            : 63
sentencia_if         : 18
sentencia_switch     : 19

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . globales
    (2) init -> . empty
    (3) globales -> . globales iglobal
    (4) globales -> . iglobal
    (7) empty -> .
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion
    (8) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (9) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    $end            reduce using rule 7 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    init                           shift and go to state 1
    globales                       shift and go to state 2
    empty                          shift and go to state 3
    iglobal                        shift and go to state 4
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    TIPO                           shift and go to state 7

state 1

    (0) S' -> init .



state 2

    (1) init -> globales .
    (3) globales -> globales . iglobal
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion
    (8) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (9) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    $end            reduce using rule 1 (init -> globales .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    iglobal                        shift and go to state 12
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    TIPO                           shift and go to state 7

state 3

    (2) init -> empty .

    $end            reduce using rule 2 (init -> empty .)


state 4

    (4) globales -> iglobal .

    INT             reduce using rule 4 (globales -> iglobal .)
    FLOAT           reduce using rule 4 (globales -> iglobal .)
    CHAR            reduce using rule 4 (globales -> iglobal .)
    VOID            reduce using rule 4 (globales -> iglobal .)
    $end            reduce using rule 4 (globales -> iglobal .)


state 5

    (5) iglobal -> funcion .

    INT             reduce using rule 5 (iglobal -> funcion .)
    FLOAT           reduce using rule 5 (iglobal -> funcion .)
    CHAR            reduce using rule 5 (iglobal -> funcion .)
    VOID            reduce using rule 5 (iglobal -> funcion .)
    $end            reduce using rule 5 (iglobal -> funcion .)


state 6

    (6) iglobal -> declaracion .

    INT             reduce using rule 6 (iglobal -> declaracion .)
    FLOAT           reduce using rule 6 (iglobal -> declaracion .)
    CHAR            reduce using rule 6 (iglobal -> declaracion .)
    VOID            reduce using rule 6 (iglobal -> declaracion .)
    $end            reduce using rule 6 (iglobal -> declaracion .)


state 7

    (8) funcion -> TIPO . ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (9) funcion -> TIPO . ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (53) declaracion -> TIPO . lista_id PTCOMA
    (54) declaracion -> TIPO . lista_id IGUAL expresion PTCOMA
    (55) lista_id -> . lista_id COMA ID
    (56) lista_id -> . ID

    ID              shift and go to state 13

    lista_id                       shift and go to state 14

state 8

    (57) TIPO -> INT .

    ID              reduce using rule 57 (TIPO -> INT .)


state 9

    (58) TIPO -> FLOAT .

    ID              reduce using rule 58 (TIPO -> FLOAT .)


state 10

    (59) TIPO -> CHAR .

    ID              reduce using rule 59 (TIPO -> CHAR .)


state 11

    (60) TIPO -> VOID .

    ID              reduce using rule 60 (TIPO -> VOID .)


state 12

    (3) globales -> globales iglobal .

    INT             reduce using rule 3 (globales -> globales iglobal .)
    FLOAT           reduce using rule 3 (globales -> globales iglobal .)
    CHAR            reduce using rule 3 (globales -> globales iglobal .)
    VOID            reduce using rule 3 (globales -> globales iglobal .)
    $end            reduce using rule 3 (globales -> globales iglobal .)


state 13

    (8) funcion -> TIPO ID . PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (9) funcion -> TIPO ID . PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (56) lista_id -> ID .

    PARIZQ          shift and go to state 15
    PTCOMA          reduce using rule 56 (lista_id -> ID .)
    IGUAL           reduce using rule 56 (lista_id -> ID .)
    COMA            reduce using rule 56 (lista_id -> ID .)


state 14

    (53) declaracion -> TIPO lista_id . PTCOMA
    (54) declaracion -> TIPO lista_id . IGUAL expresion PTCOMA
    (55) lista_id -> lista_id . COMA ID

    PTCOMA          shift and go to state 16
    IGUAL           shift and go to state 17
    COMA            shift and go to state 18


state 15

    (8) funcion -> TIPO ID PARIZQ . PARDER LLAVIZQ instrucciones LLAVDER
    (9) funcion -> TIPO ID PARIZQ . parametros PARDER LLAVIZQ instrucciones LLAVDER
    (10) parametros -> . parametros COMA parametro
    (11) parametros -> . parametro
    (12) parametro -> . TIPO ID
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    PARDER          shift and go to state 20
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    TIPO                           shift and go to state 19
    parametros                     shift and go to state 21
    parametro                      shift and go to state 22

state 16

    (53) declaracion -> TIPO lista_id PTCOMA .

    INT             reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    FLOAT           reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    CHAR            reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    VOID            reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    $end            reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    LLAVDER         reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    error           reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    IMPRIMIR        reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    ID              reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    IF              reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    SWITCH          reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    BREAK           reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    SCAN            reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    DEFAULT         reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)
    CASE            reduce using rule 53 (declaracion -> TIPO lista_id PTCOMA .)


state 17

    (54) declaracion -> TIPO lista_id IGUAL . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 23
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 18

    (55) lista_id -> lista_id COMA . ID

    ID              shift and go to state 39


state 19

    (12) parametro -> TIPO . ID

    ID              shift and go to state 40


state 20

    (8) funcion -> TIPO ID PARIZQ PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 41


state 21

    (9) funcion -> TIPO ID PARIZQ parametros . PARDER LLAVIZQ instrucciones LLAVDER
    (10) parametros -> parametros . COMA parametro

    PARDER          shift and go to state 42
    COMA            shift and go to state 43


state 22

    (11) parametros -> parametro .

    PARDER          reduce using rule 11 (parametros -> parametro .)
    COMA            reduce using rule 11 (parametros -> parametro .)


state 23

    (54) declaracion -> TIPO lista_id IGUAL expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 44
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 24

    (63) expresion -> primitiva .

    PTCOMA          reduce using rule 63 (expresion -> primitiva .)
    MAS             reduce using rule 63 (expresion -> primitiva .)
    MENOS           reduce using rule 63 (expresion -> primitiva .)
    POR             reduce using rule 63 (expresion -> primitiva .)
    DIVIDIDO        reduce using rule 63 (expresion -> primitiva .)
    RESTO           reduce using rule 63 (expresion -> primitiva .)
    MENQUE          reduce using rule 63 (expresion -> primitiva .)
    MAYQUE          reduce using rule 63 (expresion -> primitiva .)
    MEIQUE          reduce using rule 63 (expresion -> primitiva .)
    MAIQUE          reduce using rule 63 (expresion -> primitiva .)
    IGUALQUE        reduce using rule 63 (expresion -> primitiva .)
    NIGUALQUE       reduce using rule 63 (expresion -> primitiva .)
    AND             reduce using rule 63 (expresion -> primitiva .)
    OR              reduce using rule 63 (expresion -> primitiva .)
    XOR             reduce using rule 63 (expresion -> primitiva .)
    PAND            reduce using rule 63 (expresion -> primitiva .)
    BOR             reduce using rule 63 (expresion -> primitiva .)
    XORR            reduce using rule 63 (expresion -> primitiva .)
    SHIFTI          reduce using rule 63 (expresion -> primitiva .)
    SHIFTD          reduce using rule 63 (expresion -> primitiva .)
    PARDER          reduce using rule 63 (expresion -> primitiva .)
    COMA            reduce using rule 63 (expresion -> primitiva .)
    DOSP            reduce using rule 63 (expresion -> primitiva .)


state 25

    (64) expresion -> expresion_numerica .

    PTCOMA          reduce using rule 64 (expresion -> expresion_numerica .)
    MAS             reduce using rule 64 (expresion -> expresion_numerica .)
    MENOS           reduce using rule 64 (expresion -> expresion_numerica .)
    POR             reduce using rule 64 (expresion -> expresion_numerica .)
    DIVIDIDO        reduce using rule 64 (expresion -> expresion_numerica .)
    RESTO           reduce using rule 64 (expresion -> expresion_numerica .)
    MENQUE          reduce using rule 64 (expresion -> expresion_numerica .)
    MAYQUE          reduce using rule 64 (expresion -> expresion_numerica .)
    MEIQUE          reduce using rule 64 (expresion -> expresion_numerica .)
    MAIQUE          reduce using rule 64 (expresion -> expresion_numerica .)
    IGUALQUE        reduce using rule 64 (expresion -> expresion_numerica .)
    NIGUALQUE       reduce using rule 64 (expresion -> expresion_numerica .)
    AND             reduce using rule 64 (expresion -> expresion_numerica .)
    OR              reduce using rule 64 (expresion -> expresion_numerica .)
    XOR             reduce using rule 64 (expresion -> expresion_numerica .)
    PAND            reduce using rule 64 (expresion -> expresion_numerica .)
    BOR             reduce using rule 64 (expresion -> expresion_numerica .)
    XORR            reduce using rule 64 (expresion -> expresion_numerica .)
    SHIFTI          reduce using rule 64 (expresion -> expresion_numerica .)
    SHIFTD          reduce using rule 64 (expresion -> expresion_numerica .)
    PARDER          reduce using rule 64 (expresion -> expresion_numerica .)
    COMA            reduce using rule 64 (expresion -> expresion_numerica .)
    DOSP            reduce using rule 64 (expresion -> expresion_numerica .)


state 26

    (65) expresion -> expresion_relacional .

    PTCOMA          reduce using rule 65 (expresion -> expresion_relacional .)
    MAS             reduce using rule 65 (expresion -> expresion_relacional .)
    MENOS           reduce using rule 65 (expresion -> expresion_relacional .)
    POR             reduce using rule 65 (expresion -> expresion_relacional .)
    DIVIDIDO        reduce using rule 65 (expresion -> expresion_relacional .)
    RESTO           reduce using rule 65 (expresion -> expresion_relacional .)
    MENQUE          reduce using rule 65 (expresion -> expresion_relacional .)
    MAYQUE          reduce using rule 65 (expresion -> expresion_relacional .)
    MEIQUE          reduce using rule 65 (expresion -> expresion_relacional .)
    MAIQUE          reduce using rule 65 (expresion -> expresion_relacional .)
    IGUALQUE        reduce using rule 65 (expresion -> expresion_relacional .)
    NIGUALQUE       reduce using rule 65 (expresion -> expresion_relacional .)
    AND             reduce using rule 65 (expresion -> expresion_relacional .)
    OR              reduce using rule 65 (expresion -> expresion_relacional .)
    XOR             reduce using rule 65 (expresion -> expresion_relacional .)
    PAND            reduce using rule 65 (expresion -> expresion_relacional .)
    BOR             reduce using rule 65 (expresion -> expresion_relacional .)
    XORR            reduce using rule 65 (expresion -> expresion_relacional .)
    SHIFTI          reduce using rule 65 (expresion -> expresion_relacional .)
    SHIFTD          reduce using rule 65 (expresion -> expresion_relacional .)
    PARDER          reduce using rule 65 (expresion -> expresion_relacional .)
    COMA            reduce using rule 65 (expresion -> expresion_relacional .)
    DOSP            reduce using rule 65 (expresion -> expresion_relacional .)


state 27

    (66) expresion -> expresion_unaria .

    PTCOMA          reduce using rule 66 (expresion -> expresion_unaria .)
    MAS             reduce using rule 66 (expresion -> expresion_unaria .)
    MENOS           reduce using rule 66 (expresion -> expresion_unaria .)
    POR             reduce using rule 66 (expresion -> expresion_unaria .)
    DIVIDIDO        reduce using rule 66 (expresion -> expresion_unaria .)
    RESTO           reduce using rule 66 (expresion -> expresion_unaria .)
    MENQUE          reduce using rule 66 (expresion -> expresion_unaria .)
    MAYQUE          reduce using rule 66 (expresion -> expresion_unaria .)
    MEIQUE          reduce using rule 66 (expresion -> expresion_unaria .)
    MAIQUE          reduce using rule 66 (expresion -> expresion_unaria .)
    IGUALQUE        reduce using rule 66 (expresion -> expresion_unaria .)
    NIGUALQUE       reduce using rule 66 (expresion -> expresion_unaria .)
    AND             reduce using rule 66 (expresion -> expresion_unaria .)
    OR              reduce using rule 66 (expresion -> expresion_unaria .)
    XOR             reduce using rule 66 (expresion -> expresion_unaria .)
    PAND            reduce using rule 66 (expresion -> expresion_unaria .)
    BOR             reduce using rule 66 (expresion -> expresion_unaria .)
    XORR            reduce using rule 66 (expresion -> expresion_unaria .)
    SHIFTI          reduce using rule 66 (expresion -> expresion_unaria .)
    SHIFTD          reduce using rule 66 (expresion -> expresion_unaria .)
    PARDER          reduce using rule 66 (expresion -> expresion_unaria .)
    COMA            reduce using rule 66 (expresion -> expresion_unaria .)
    DOSP            reduce using rule 66 (expresion -> expresion_unaria .)


state 28

    (67) expresion -> expresion_logica .

    PTCOMA          reduce using rule 67 (expresion -> expresion_logica .)
    MAS             reduce using rule 67 (expresion -> expresion_logica .)
    MENOS           reduce using rule 67 (expresion -> expresion_logica .)
    POR             reduce using rule 67 (expresion -> expresion_logica .)
    DIVIDIDO        reduce using rule 67 (expresion -> expresion_logica .)
    RESTO           reduce using rule 67 (expresion -> expresion_logica .)
    MENQUE          reduce using rule 67 (expresion -> expresion_logica .)
    MAYQUE          reduce using rule 67 (expresion -> expresion_logica .)
    MEIQUE          reduce using rule 67 (expresion -> expresion_logica .)
    MAIQUE          reduce using rule 67 (expresion -> expresion_logica .)
    IGUALQUE        reduce using rule 67 (expresion -> expresion_logica .)
    NIGUALQUE       reduce using rule 67 (expresion -> expresion_logica .)
    AND             reduce using rule 67 (expresion -> expresion_logica .)
    OR              reduce using rule 67 (expresion -> expresion_logica .)
    XOR             reduce using rule 67 (expresion -> expresion_logica .)
    PAND            reduce using rule 67 (expresion -> expresion_logica .)
    BOR             reduce using rule 67 (expresion -> expresion_logica .)
    XORR            reduce using rule 67 (expresion -> expresion_logica .)
    SHIFTI          reduce using rule 67 (expresion -> expresion_logica .)
    SHIFTD          reduce using rule 67 (expresion -> expresion_logica .)
    PARDER          reduce using rule 67 (expresion -> expresion_logica .)
    COMA            reduce using rule 67 (expresion -> expresion_logica .)
    DOSP            reduce using rule 67 (expresion -> expresion_logica .)


state 29

    (68) expresion -> expresion_bit_bit .

    PTCOMA          reduce using rule 68 (expresion -> expresion_bit_bit .)
    MAS             reduce using rule 68 (expresion -> expresion_bit_bit .)
    MENOS           reduce using rule 68 (expresion -> expresion_bit_bit .)
    POR             reduce using rule 68 (expresion -> expresion_bit_bit .)
    DIVIDIDO        reduce using rule 68 (expresion -> expresion_bit_bit .)
    RESTO           reduce using rule 68 (expresion -> expresion_bit_bit .)
    MENQUE          reduce using rule 68 (expresion -> expresion_bit_bit .)
    MAYQUE          reduce using rule 68 (expresion -> expresion_bit_bit .)
    MEIQUE          reduce using rule 68 (expresion -> expresion_bit_bit .)
    MAIQUE          reduce using rule 68 (expresion -> expresion_bit_bit .)
    IGUALQUE        reduce using rule 68 (expresion -> expresion_bit_bit .)
    NIGUALQUE       reduce using rule 68 (expresion -> expresion_bit_bit .)
    AND             reduce using rule 68 (expresion -> expresion_bit_bit .)
    OR              reduce using rule 68 (expresion -> expresion_bit_bit .)
    XOR             reduce using rule 68 (expresion -> expresion_bit_bit .)
    PAND            reduce using rule 68 (expresion -> expresion_bit_bit .)
    BOR             reduce using rule 68 (expresion -> expresion_bit_bit .)
    XORR            reduce using rule 68 (expresion -> expresion_bit_bit .)
    SHIFTI          reduce using rule 68 (expresion -> expresion_bit_bit .)
    SHIFTD          reduce using rule 68 (expresion -> expresion_bit_bit .)
    PARDER          reduce using rule 68 (expresion -> expresion_bit_bit .)
    COMA            reduce using rule 68 (expresion -> expresion_bit_bit .)
    DOSP            reduce using rule 68 (expresion -> expresion_bit_bit .)


state 30

    (69) expresion -> PARIZQ . expresion PARDER
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 64
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 31

    (92) primitiva -> ENTERO .

    PTCOMA          reduce using rule 92 (primitiva -> ENTERO .)
    MAS             reduce using rule 92 (primitiva -> ENTERO .)
    MENOS           reduce using rule 92 (primitiva -> ENTERO .)
    POR             reduce using rule 92 (primitiva -> ENTERO .)
    DIVIDIDO        reduce using rule 92 (primitiva -> ENTERO .)
    RESTO           reduce using rule 92 (primitiva -> ENTERO .)
    MENQUE          reduce using rule 92 (primitiva -> ENTERO .)
    MAYQUE          reduce using rule 92 (primitiva -> ENTERO .)
    MEIQUE          reduce using rule 92 (primitiva -> ENTERO .)
    MAIQUE          reduce using rule 92 (primitiva -> ENTERO .)
    IGUALQUE        reduce using rule 92 (primitiva -> ENTERO .)
    NIGUALQUE       reduce using rule 92 (primitiva -> ENTERO .)
    AND             reduce using rule 92 (primitiva -> ENTERO .)
    OR              reduce using rule 92 (primitiva -> ENTERO .)
    XOR             reduce using rule 92 (primitiva -> ENTERO .)
    PAND            reduce using rule 92 (primitiva -> ENTERO .)
    BOR             reduce using rule 92 (primitiva -> ENTERO .)
    XORR            reduce using rule 92 (primitiva -> ENTERO .)
    SHIFTI          reduce using rule 92 (primitiva -> ENTERO .)
    SHIFTD          reduce using rule 92 (primitiva -> ENTERO .)
    PARDER          reduce using rule 92 (primitiva -> ENTERO .)
    COMA            reduce using rule 92 (primitiva -> ENTERO .)
    DOSP            reduce using rule 92 (primitiva -> ENTERO .)


state 32

    (93) primitiva -> DECIMAL .

    PTCOMA          reduce using rule 93 (primitiva -> DECIMAL .)
    MAS             reduce using rule 93 (primitiva -> DECIMAL .)
    MENOS           reduce using rule 93 (primitiva -> DECIMAL .)
    POR             reduce using rule 93 (primitiva -> DECIMAL .)
    DIVIDIDO        reduce using rule 93 (primitiva -> DECIMAL .)
    RESTO           reduce using rule 93 (primitiva -> DECIMAL .)
    MENQUE          reduce using rule 93 (primitiva -> DECIMAL .)
    MAYQUE          reduce using rule 93 (primitiva -> DECIMAL .)
    MEIQUE          reduce using rule 93 (primitiva -> DECIMAL .)
    MAIQUE          reduce using rule 93 (primitiva -> DECIMAL .)
    IGUALQUE        reduce using rule 93 (primitiva -> DECIMAL .)
    NIGUALQUE       reduce using rule 93 (primitiva -> DECIMAL .)
    AND             reduce using rule 93 (primitiva -> DECIMAL .)
    OR              reduce using rule 93 (primitiva -> DECIMAL .)
    XOR             reduce using rule 93 (primitiva -> DECIMAL .)
    PAND            reduce using rule 93 (primitiva -> DECIMAL .)
    BOR             reduce using rule 93 (primitiva -> DECIMAL .)
    XORR            reduce using rule 93 (primitiva -> DECIMAL .)
    SHIFTI          reduce using rule 93 (primitiva -> DECIMAL .)
    SHIFTD          reduce using rule 93 (primitiva -> DECIMAL .)
    PARDER          reduce using rule 93 (primitiva -> DECIMAL .)
    COMA            reduce using rule 93 (primitiva -> DECIMAL .)
    DOSP            reduce using rule 93 (primitiva -> DECIMAL .)


state 33

    (94) primitiva -> CADENA .

    PTCOMA          reduce using rule 94 (primitiva -> CADENA .)
    MAS             reduce using rule 94 (primitiva -> CADENA .)
    MENOS           reduce using rule 94 (primitiva -> CADENA .)
    POR             reduce using rule 94 (primitiva -> CADENA .)
    DIVIDIDO        reduce using rule 94 (primitiva -> CADENA .)
    RESTO           reduce using rule 94 (primitiva -> CADENA .)
    MENQUE          reduce using rule 94 (primitiva -> CADENA .)
    MAYQUE          reduce using rule 94 (primitiva -> CADENA .)
    MEIQUE          reduce using rule 94 (primitiva -> CADENA .)
    MAIQUE          reduce using rule 94 (primitiva -> CADENA .)
    IGUALQUE        reduce using rule 94 (primitiva -> CADENA .)
    NIGUALQUE       reduce using rule 94 (primitiva -> CADENA .)
    AND             reduce using rule 94 (primitiva -> CADENA .)
    OR              reduce using rule 94 (primitiva -> CADENA .)
    XOR             reduce using rule 94 (primitiva -> CADENA .)
    PAND            reduce using rule 94 (primitiva -> CADENA .)
    BOR             reduce using rule 94 (primitiva -> CADENA .)
    XORR            reduce using rule 94 (primitiva -> CADENA .)
    SHIFTI          reduce using rule 94 (primitiva -> CADENA .)
    SHIFTD          reduce using rule 94 (primitiva -> CADENA .)
    PARDER          reduce using rule 94 (primitiva -> CADENA .)
    COMA            reduce using rule 94 (primitiva -> CADENA .)
    DOSP            reduce using rule 94 (primitiva -> CADENA .)


state 34

    (95) primitiva -> CADENAR_CHAR .

    PTCOMA          reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    MAS             reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    MENOS           reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    POR             reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    DIVIDIDO        reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    RESTO           reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    MENQUE          reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    MAYQUE          reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    MEIQUE          reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    MAIQUE          reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    IGUALQUE        reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    NIGUALQUE       reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    AND             reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    OR              reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    XOR             reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    PAND            reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    BOR             reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    XORR            reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    SHIFTI          reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    SHIFTD          reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    PARDER          reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    COMA            reduce using rule 95 (primitiva -> CADENAR_CHAR .)
    DOSP            reduce using rule 95 (primitiva -> CADENAR_CHAR .)


state 35

    (96) primitiva -> ID .

    PTCOMA          reduce using rule 96 (primitiva -> ID .)
    MAS             reduce using rule 96 (primitiva -> ID .)
    MENOS           reduce using rule 96 (primitiva -> ID .)
    POR             reduce using rule 96 (primitiva -> ID .)
    DIVIDIDO        reduce using rule 96 (primitiva -> ID .)
    RESTO           reduce using rule 96 (primitiva -> ID .)
    MENQUE          reduce using rule 96 (primitiva -> ID .)
    MAYQUE          reduce using rule 96 (primitiva -> ID .)
    MEIQUE          reduce using rule 96 (primitiva -> ID .)
    MAIQUE          reduce using rule 96 (primitiva -> ID .)
    IGUALQUE        reduce using rule 96 (primitiva -> ID .)
    NIGUALQUE       reduce using rule 96 (primitiva -> ID .)
    AND             reduce using rule 96 (primitiva -> ID .)
    OR              reduce using rule 96 (primitiva -> ID .)
    XOR             reduce using rule 96 (primitiva -> ID .)
    PAND            reduce using rule 96 (primitiva -> ID .)
    BOR             reduce using rule 96 (primitiva -> ID .)
    XORR            reduce using rule 96 (primitiva -> ID .)
    SHIFTI          reduce using rule 96 (primitiva -> ID .)
    SHIFTD          reduce using rule 96 (primitiva -> ID .)
    PARDER          reduce using rule 96 (primitiva -> ID .)
    COMA            reduce using rule 96 (primitiva -> ID .)
    DOSP            reduce using rule 96 (primitiva -> ID .)


state 36

    (70) expresion_unaria -> MENOS . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 65
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 37

    (74) expresion_logica -> NOT . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 66
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 38

    (80) expresion_bit_bit -> NOTR . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 67
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 39

    (55) lista_id -> lista_id COMA ID .

    PTCOMA          reduce using rule 55 (lista_id -> lista_id COMA ID .)
    IGUAL           reduce using rule 55 (lista_id -> lista_id COMA ID .)
    COMA            reduce using rule 55 (lista_id -> lista_id COMA ID .)


state 40

    (12) parametro -> TIPO ID .

    PARDER          reduce using rule 12 (parametro -> TIPO ID .)
    COMA            reduce using rule 12 (parametro -> TIPO ID .)


state 41

    (8) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    TIPO                           shift and go to state 68
    instrucciones                  shift and go to state 70
    instruccion                    shift and go to state 71
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78

state 42

    (9) funcion -> TIPO ID PARIZQ parametros PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 85


state 43

    (10) parametros -> parametros COMA . parametro
    (12) parametro -> . TIPO ID
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    parametro                      shift and go to state 86
    TIPO                           shift and go to state 19

state 44

    (54) declaracion -> TIPO lista_id IGUAL expresion PTCOMA .

    INT             reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    FLOAT           reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    VOID            reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    $end            reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    LLAVDER         reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    error           reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    IMPRIMIR        reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    ID              reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    IF              reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    SWITCH          reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    SCAN            reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    DEFAULT         reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)
    CASE            reduce using rule 54 (declaracion -> TIPO lista_id IGUAL expresion PTCOMA .)


state 45

    (87) expresion_numerica -> expresion MAS . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 87
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 46

    (88) expresion_numerica -> expresion MENOS . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 88
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 47

    (89) expresion_numerica -> expresion POR . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 89
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 48

    (90) expresion_numerica -> expresion DIVIDIDO . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 90
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 49

    (91) expresion_numerica -> expresion RESTO . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 91
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 50

    (81) expresion_relacional -> expresion MENQUE . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 92
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 51

    (82) expresion_relacional -> expresion MAYQUE . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 93
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 52

    (83) expresion_relacional -> expresion MEIQUE . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 94
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 53

    (84) expresion_relacional -> expresion MAIQUE . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 95
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 54

    (85) expresion_relacional -> expresion IGUALQUE . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 96
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 55

    (86) expresion_relacional -> expresion NIGUALQUE . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 97
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 56

    (71) expresion_logica -> expresion AND . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 98
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 57

    (72) expresion_logica -> expresion OR . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 99
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 58

    (73) expresion_logica -> expresion XOR . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 100
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 59

    (75) expresion_bit_bit -> expresion PAND . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 101
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 60

    (76) expresion_bit_bit -> expresion BOR . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 102
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 61

    (77) expresion_bit_bit -> expresion XORR . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 103
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 62

    (78) expresion_bit_bit -> expresion SHIFTI . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 104
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 63

    (79) expresion_bit_bit -> expresion SHIFTD . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 105
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 64

    (69) expresion -> PARIZQ expresion . PARDER
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 106
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 65

    (70) expresion_unaria -> MENOS expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    MAS             reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    MENOS           reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    POR             reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    DIVIDIDO        reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    RESTO           reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    MENQUE          reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    MAYQUE          reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    MEIQUE          reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    MAIQUE          reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    IGUALQUE        reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    NIGUALQUE       reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    AND             reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    OR              reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    XOR             reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    PAND            reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    BOR             reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    XORR            reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    SHIFTI          reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    SHIFTD          reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    PARDER          reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    COMA            reduce using rule 70 (expresion_unaria -> MENOS expresion .)
    DOSP            reduce using rule 70 (expresion_unaria -> MENOS expresion .)

  ! MAS             [ shift and go to state 45 ]
  ! MENOS           [ shift and go to state 46 ]
  ! POR             [ shift and go to state 47 ]
  ! DIVIDIDO        [ shift and go to state 48 ]
  ! RESTO           [ shift and go to state 49 ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]
  ! SHIFTI          [ shift and go to state 62 ]
  ! SHIFTD          [ shift and go to state 63 ]


state 66

    (74) expresion_logica -> NOT expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 74 (expresion_logica -> NOT expresion .)
    MAS             reduce using rule 74 (expresion_logica -> NOT expresion .)
    MENOS           reduce using rule 74 (expresion_logica -> NOT expresion .)
    POR             reduce using rule 74 (expresion_logica -> NOT expresion .)
    DIVIDIDO        reduce using rule 74 (expresion_logica -> NOT expresion .)
    RESTO           reduce using rule 74 (expresion_logica -> NOT expresion .)
    MENQUE          reduce using rule 74 (expresion_logica -> NOT expresion .)
    MAYQUE          reduce using rule 74 (expresion_logica -> NOT expresion .)
    MEIQUE          reduce using rule 74 (expresion_logica -> NOT expresion .)
    MAIQUE          reduce using rule 74 (expresion_logica -> NOT expresion .)
    IGUALQUE        reduce using rule 74 (expresion_logica -> NOT expresion .)
    NIGUALQUE       reduce using rule 74 (expresion_logica -> NOT expresion .)
    AND             reduce using rule 74 (expresion_logica -> NOT expresion .)
    OR              reduce using rule 74 (expresion_logica -> NOT expresion .)
    XOR             reduce using rule 74 (expresion_logica -> NOT expresion .)
    PAND            reduce using rule 74 (expresion_logica -> NOT expresion .)
    BOR             reduce using rule 74 (expresion_logica -> NOT expresion .)
    XORR            reduce using rule 74 (expresion_logica -> NOT expresion .)
    SHIFTI          reduce using rule 74 (expresion_logica -> NOT expresion .)
    SHIFTD          reduce using rule 74 (expresion_logica -> NOT expresion .)
    PARDER          reduce using rule 74 (expresion_logica -> NOT expresion .)
    COMA            reduce using rule 74 (expresion_logica -> NOT expresion .)
    DOSP            reduce using rule 74 (expresion_logica -> NOT expresion .)

  ! MAS             [ shift and go to state 45 ]
  ! MENOS           [ shift and go to state 46 ]
  ! POR             [ shift and go to state 47 ]
  ! DIVIDIDO        [ shift and go to state 48 ]
  ! RESTO           [ shift and go to state 49 ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]
  ! SHIFTI          [ shift and go to state 62 ]
  ! SHIFTD          [ shift and go to state 63 ]


state 67

    (80) expresion_bit_bit -> NOTR expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    MAS             reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    MENOS           reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    POR             reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    DIVIDIDO        reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    RESTO           reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    MENQUE          reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    MAYQUE          reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    MEIQUE          reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    MAIQUE          reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    IGUALQUE        reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    NIGUALQUE       reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    AND             reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    OR              reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    XOR             reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    PAND            reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    BOR             reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    XORR            reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    SHIFTI          reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    SHIFTD          reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    PARDER          reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    COMA            reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)
    DOSP            reduce using rule 80 (expresion_bit_bit -> NOTR expresion .)

  ! MAS             [ shift and go to state 45 ]
  ! MENOS           [ shift and go to state 46 ]
  ! POR             [ shift and go to state 47 ]
  ! DIVIDIDO        [ shift and go to state 48 ]
  ! RESTO           [ shift and go to state 49 ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]
  ! SHIFTI          [ shift and go to state 62 ]
  ! SHIFTD          [ shift and go to state 63 ]


state 68

    (53) declaracion -> TIPO . lista_id PTCOMA
    (54) declaracion -> TIPO . lista_id IGUAL expresion PTCOMA
    (55) lista_id -> . lista_id COMA ID
    (56) lista_id -> . ID

    ID              shift and go to state 107

    lista_id                       shift and go to state 14

state 69

    (42) asignacion -> ID . IGUAL expresion PTCOMA
    (43) asignacion -> ID . ASUMA expresion PTCOMA
    (44) asignacion -> ID . ARESTA expresion PTCOMA
    (45) asignacion -> ID . MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> ID . DIVIDIDA expresion PTCOMA
    (47) asignacion -> ID . ARESTO expresion PTCOMA
    (48) asignacion -> ID . ABOR expresion PTCOMA
    (49) asignacion -> ID . APAND expresion PTCOMA
    (50) asignacion -> ID . ASHIFTD expresion PTCOMA
    (51) asignacion -> ID . ASHIFTI expresion PTCOMA
    (52) asignacion -> ID . AXORR expresion PTCOMA

    IGUAL           shift and go to state 108
    ASUMA           shift and go to state 109
    ARESTA          shift and go to state 110
    MULTIPLICATIVA  shift and go to state 111
    DIVIDIDA        shift and go to state 112
    ARESTO          shift and go to state 113
    ABOR            shift and go to state 114
    APAND           shift and go to state 115
    ASHIFTD         shift and go to state 116
    ASHIFTI         shift and go to state 117
    AXORR           shift and go to state 118


state 70

    (8) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    LLAVDER         shift and go to state 119
    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    TIPO                           shift and go to state 68
    instruccion                    shift and go to state 120
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78

state 71

    (14) instrucciones -> instruccion .

    LLAVDER         reduce using rule 14 (instrucciones -> instruccion .)
    error           reduce using rule 14 (instrucciones -> instruccion .)
    IMPRIMIR        reduce using rule 14 (instrucciones -> instruccion .)
    ID              reduce using rule 14 (instrucciones -> instruccion .)
    IF              reduce using rule 14 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 14 (instrucciones -> instruccion .)
    BREAK           reduce using rule 14 (instrucciones -> instruccion .)
    SCAN            reduce using rule 14 (instrucciones -> instruccion .)
    INT             reduce using rule 14 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 14 (instrucciones -> instruccion .)
    CHAR            reduce using rule 14 (instrucciones -> instruccion .)
    VOID            reduce using rule 14 (instrucciones -> instruccion .)
    DEFAULT         reduce using rule 14 (instrucciones -> instruccion .)
    CASE            reduce using rule 14 (instrucciones -> instruccion .)


state 72

    (15) instruccion -> imprimir_instr .

    LLAVDER         reduce using rule 15 (instruccion -> imprimir_instr .)
    error           reduce using rule 15 (instruccion -> imprimir_instr .)
    IMPRIMIR        reduce using rule 15 (instruccion -> imprimir_instr .)
    ID              reduce using rule 15 (instruccion -> imprimir_instr .)
    IF              reduce using rule 15 (instruccion -> imprimir_instr .)
    SWITCH          reduce using rule 15 (instruccion -> imprimir_instr .)
    BREAK           reduce using rule 15 (instruccion -> imprimir_instr .)
    SCAN            reduce using rule 15 (instruccion -> imprimir_instr .)
    INT             reduce using rule 15 (instruccion -> imprimir_instr .)
    FLOAT           reduce using rule 15 (instruccion -> imprimir_instr .)
    CHAR            reduce using rule 15 (instruccion -> imprimir_instr .)
    VOID            reduce using rule 15 (instruccion -> imprimir_instr .)
    DEFAULT         reduce using rule 15 (instruccion -> imprimir_instr .)
    CASE            reduce using rule 15 (instruccion -> imprimir_instr .)


state 73

    (16) instruccion -> asignacion .

    LLAVDER         reduce using rule 16 (instruccion -> asignacion .)
    error           reduce using rule 16 (instruccion -> asignacion .)
    IMPRIMIR        reduce using rule 16 (instruccion -> asignacion .)
    ID              reduce using rule 16 (instruccion -> asignacion .)
    IF              reduce using rule 16 (instruccion -> asignacion .)
    SWITCH          reduce using rule 16 (instruccion -> asignacion .)
    BREAK           reduce using rule 16 (instruccion -> asignacion .)
    SCAN            reduce using rule 16 (instruccion -> asignacion .)
    INT             reduce using rule 16 (instruccion -> asignacion .)
    FLOAT           reduce using rule 16 (instruccion -> asignacion .)
    CHAR            reduce using rule 16 (instruccion -> asignacion .)
    VOID            reduce using rule 16 (instruccion -> asignacion .)
    DEFAULT         reduce using rule 16 (instruccion -> asignacion .)
    CASE            reduce using rule 16 (instruccion -> asignacion .)


state 74

    (17) instruccion -> declaracion .

    LLAVDER         reduce using rule 17 (instruccion -> declaracion .)
    error           reduce using rule 17 (instruccion -> declaracion .)
    IMPRIMIR        reduce using rule 17 (instruccion -> declaracion .)
    ID              reduce using rule 17 (instruccion -> declaracion .)
    IF              reduce using rule 17 (instruccion -> declaracion .)
    SWITCH          reduce using rule 17 (instruccion -> declaracion .)
    BREAK           reduce using rule 17 (instruccion -> declaracion .)
    SCAN            reduce using rule 17 (instruccion -> declaracion .)
    INT             reduce using rule 17 (instruccion -> declaracion .)
    FLOAT           reduce using rule 17 (instruccion -> declaracion .)
    CHAR            reduce using rule 17 (instruccion -> declaracion .)
    VOID            reduce using rule 17 (instruccion -> declaracion .)
    DEFAULT         reduce using rule 17 (instruccion -> declaracion .)
    CASE            reduce using rule 17 (instruccion -> declaracion .)


state 75

    (18) instruccion -> sentencia_if .

    LLAVDER         reduce using rule 18 (instruccion -> sentencia_if .)
    error           reduce using rule 18 (instruccion -> sentencia_if .)
    IMPRIMIR        reduce using rule 18 (instruccion -> sentencia_if .)
    ID              reduce using rule 18 (instruccion -> sentencia_if .)
    IF              reduce using rule 18 (instruccion -> sentencia_if .)
    SWITCH          reduce using rule 18 (instruccion -> sentencia_if .)
    BREAK           reduce using rule 18 (instruccion -> sentencia_if .)
    SCAN            reduce using rule 18 (instruccion -> sentencia_if .)
    INT             reduce using rule 18 (instruccion -> sentencia_if .)
    FLOAT           reduce using rule 18 (instruccion -> sentencia_if .)
    CHAR            reduce using rule 18 (instruccion -> sentencia_if .)
    VOID            reduce using rule 18 (instruccion -> sentencia_if .)
    DEFAULT         reduce using rule 18 (instruccion -> sentencia_if .)
    CASE            reduce using rule 18 (instruccion -> sentencia_if .)


state 76

    (19) instruccion -> sentencia_switch .

    LLAVDER         reduce using rule 19 (instruccion -> sentencia_switch .)
    error           reduce using rule 19 (instruccion -> sentencia_switch .)
    IMPRIMIR        reduce using rule 19 (instruccion -> sentencia_switch .)
    ID              reduce using rule 19 (instruccion -> sentencia_switch .)
    IF              reduce using rule 19 (instruccion -> sentencia_switch .)
    SWITCH          reduce using rule 19 (instruccion -> sentencia_switch .)
    BREAK           reduce using rule 19 (instruccion -> sentencia_switch .)
    SCAN            reduce using rule 19 (instruccion -> sentencia_switch .)
    INT             reduce using rule 19 (instruccion -> sentencia_switch .)
    FLOAT           reduce using rule 19 (instruccion -> sentencia_switch .)
    CHAR            reduce using rule 19 (instruccion -> sentencia_switch .)
    VOID            reduce using rule 19 (instruccion -> sentencia_switch .)
    DEFAULT         reduce using rule 19 (instruccion -> sentencia_switch .)
    CASE            reduce using rule 19 (instruccion -> sentencia_switch .)


state 77

    (20) instruccion -> ins_break .

    LLAVDER         reduce using rule 20 (instruccion -> ins_break .)
    error           reduce using rule 20 (instruccion -> ins_break .)
    IMPRIMIR        reduce using rule 20 (instruccion -> ins_break .)
    ID              reduce using rule 20 (instruccion -> ins_break .)
    IF              reduce using rule 20 (instruccion -> ins_break .)
    SWITCH          reduce using rule 20 (instruccion -> ins_break .)
    BREAK           reduce using rule 20 (instruccion -> ins_break .)
    SCAN            reduce using rule 20 (instruccion -> ins_break .)
    INT             reduce using rule 20 (instruccion -> ins_break .)
    FLOAT           reduce using rule 20 (instruccion -> ins_break .)
    CHAR            reduce using rule 20 (instruccion -> ins_break .)
    VOID            reduce using rule 20 (instruccion -> ins_break .)
    DEFAULT         reduce using rule 20 (instruccion -> ins_break .)
    CASE            reduce using rule 20 (instruccion -> ins_break .)


state 78

    (21) instruccion -> ins_scan .

    LLAVDER         reduce using rule 21 (instruccion -> ins_scan .)
    error           reduce using rule 21 (instruccion -> ins_scan .)
    IMPRIMIR        reduce using rule 21 (instruccion -> ins_scan .)
    ID              reduce using rule 21 (instruccion -> ins_scan .)
    IF              reduce using rule 21 (instruccion -> ins_scan .)
    SWITCH          reduce using rule 21 (instruccion -> ins_scan .)
    BREAK           reduce using rule 21 (instruccion -> ins_scan .)
    SCAN            reduce using rule 21 (instruccion -> ins_scan .)
    INT             reduce using rule 21 (instruccion -> ins_scan .)
    FLOAT           reduce using rule 21 (instruccion -> ins_scan .)
    CHAR            reduce using rule 21 (instruccion -> ins_scan .)
    VOID            reduce using rule 21 (instruccion -> ins_scan .)
    DEFAULT         reduce using rule 21 (instruccion -> ins_scan .)
    CASE            reduce using rule 21 (instruccion -> ins_scan .)


state 79

    (22) instruccion -> error .

    LLAVDER         reduce using rule 22 (instruccion -> error .)
    error           reduce using rule 22 (instruccion -> error .)
    IMPRIMIR        reduce using rule 22 (instruccion -> error .)
    ID              reduce using rule 22 (instruccion -> error .)
    IF              reduce using rule 22 (instruccion -> error .)
    SWITCH          reduce using rule 22 (instruccion -> error .)
    BREAK           reduce using rule 22 (instruccion -> error .)
    SCAN            reduce using rule 22 (instruccion -> error .)
    INT             reduce using rule 22 (instruccion -> error .)
    FLOAT           reduce using rule 22 (instruccion -> error .)
    CHAR            reduce using rule 22 (instruccion -> error .)
    VOID            reduce using rule 22 (instruccion -> error .)
    DEFAULT         reduce using rule 22 (instruccion -> error .)
    CASE            reduce using rule 22 (instruccion -> error .)


state 80

    (40) imprimir_instr -> IMPRIMIR . PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> IMPRIMIR . PARIZQ CADENA PARDER PTCOMA

    PARIZQ          shift and go to state 121


state 81

    (32) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif

    PARIZQ          shift and go to state 122


state 82

    (23) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER

    PARIZQ          shift and go to state 123


state 83

    (31) ins_break -> BREAK . PTCOMA

    PTCOMA          shift and go to state 124


state 84

    (39) ins_scan -> SCAN . PARIZQ CADENA COMA PAND ID PARDER PTCOMA

    PARIZQ          shift and go to state 125


state 85

    (9) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    TIPO                           shift and go to state 68
    instrucciones                  shift and go to state 126
    instruccion                    shift and go to state 71
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78

state 86

    (10) parametros -> parametros COMA parametro .

    PARDER          reduce using rule 10 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 10 (parametros -> parametros COMA parametro .)


state 87

    (87) expresion_numerica -> expresion MAS expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    MAS             reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    MENOS           reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    MENQUE          reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    MAYQUE          reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    MEIQUE          reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    MAIQUE          reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    NIGUALQUE       reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    AND             reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    OR              reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    XOR             reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    PAND            reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    BOR             reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    XORR            reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    SHIFTI          reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    SHIFTD          reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    PARDER          reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    COMA            reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    DOSP            reduce using rule 87 (expresion_numerica -> expresion MAS expresion .)
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49

  ! POR             [ reduce using rule 87 (expresion_numerica -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 87 (expresion_numerica -> expresion MAS expresion .) ]
  ! RESTO           [ reduce using rule 87 (expresion_numerica -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 45 ]
  ! MENOS           [ shift and go to state 46 ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]
  ! SHIFTI          [ shift and go to state 62 ]
  ! SHIFTD          [ shift and go to state 63 ]


state 88

    (88) expresion_numerica -> expresion MENOS expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    MAS             reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    MENOS           reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    MENQUE          reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    MAYQUE          reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    MEIQUE          reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    MAIQUE          reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    NIGUALQUE       reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    AND             reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    OR              reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    XOR             reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    PAND            reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    BOR             reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    XORR            reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTI          reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTD          reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    PARDER          reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    COMA            reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    DOSP            reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .)
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49

  ! POR             [ reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .) ]
  ! RESTO           [ reduce using rule 88 (expresion_numerica -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 45 ]
  ! MENOS           [ shift and go to state 46 ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]
  ! SHIFTI          [ shift and go to state 62 ]
  ! SHIFTD          [ shift and go to state 63 ]


state 89

    (89) expresion_numerica -> expresion POR expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    MAS             reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    MENOS           reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    POR             reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    RESTO           reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    MENQUE          reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    MAYQUE          reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    MEIQUE          reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    MAIQUE          reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    IGUALQUE        reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    NIGUALQUE       reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    AND             reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    OR              reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    XOR             reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    PAND            reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    BOR             reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    XORR            reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    SHIFTI          reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    SHIFTD          reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    PARDER          reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    COMA            reduce using rule 89 (expresion_numerica -> expresion POR expresion .)
    DOSP            reduce using rule 89 (expresion_numerica -> expresion POR expresion .)

  ! MAS             [ shift and go to state 45 ]
  ! MENOS           [ shift and go to state 46 ]
  ! POR             [ shift and go to state 47 ]
  ! DIVIDIDO        [ shift and go to state 48 ]
  ! RESTO           [ shift and go to state 49 ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]
  ! SHIFTI          [ shift and go to state 62 ]
  ! SHIFTD          [ shift and go to state 63 ]


state 90

    (90) expresion_numerica -> expresion DIVIDIDO expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    RESTO           reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENQUE          reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAYQUE          reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MEIQUE          reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAIQUE          reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    NIGUALQUE       reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XOR             reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PAND            reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    BOR             reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XORR            reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTI          reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTD          reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DOSP            reduce using rule 90 (expresion_numerica -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 45 ]
  ! MENOS           [ shift and go to state 46 ]
  ! POR             [ shift and go to state 47 ]
  ! DIVIDIDO        [ shift and go to state 48 ]
  ! RESTO           [ shift and go to state 49 ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]
  ! SHIFTI          [ shift and go to state 62 ]
  ! SHIFTD          [ shift and go to state 63 ]


state 91

    (91) expresion_numerica -> expresion RESTO expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    MAS             reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    MENOS           reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    POR             reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    DIVIDIDO        reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    RESTO           reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    MENQUE          reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    MAYQUE          reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    MEIQUE          reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    MAIQUE          reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    IGUALQUE        reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    NIGUALQUE       reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    AND             reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    OR              reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    XOR             reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    PAND            reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    BOR             reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    XORR            reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTI          reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTD          reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    PARDER          reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    COMA            reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)
    DOSP            reduce using rule 91 (expresion_numerica -> expresion RESTO expresion .)

  ! MAS             [ shift and go to state 45 ]
  ! MENOS           [ shift and go to state 46 ]
  ! POR             [ shift and go to state 47 ]
  ! DIVIDIDO        [ shift and go to state 48 ]
  ! RESTO           [ shift and go to state 49 ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]
  ! SHIFTI          [ shift and go to state 62 ]
  ! SHIFTD          [ shift and go to state 63 ]


state 92

    (81) expresion_relacional -> expresion MENQUE expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    MENQUE          reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    MAYQUE          reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    MEIQUE          reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    MAIQUE          reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    IGUALQUE        reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    NIGUALQUE       reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    AND             reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    XOR             reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    PAND            reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    BOR             reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    XORR            reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    PARDER          reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    COMA            reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    DOSP            reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENOS           [ reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! POR             [ reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! RESTO           [ reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 81 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]


state 93

    (82) expresion_relacional -> expresion MAYQUE expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    MENQUE          reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    MAYQUE          reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    MEIQUE          reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    MAIQUE          reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    IGUALQUE        reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    NIGUALQUE       reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    AND             reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    XOR             reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    PAND            reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    BOR             reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    XORR            reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    PARDER          reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    COMA            reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    DOSP            reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENOS           [ reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! POR             [ reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! RESTO           [ reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 82 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]


state 94

    (83) expresion_relacional -> expresion MEIQUE expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    MENQUE          reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    MAYQUE          reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    MEIQUE          reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    MAIQUE          reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    IGUALQUE        reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    NIGUALQUE       reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    AND             reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    OR              reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    XOR             reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    PAND            reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    BOR             reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    XORR            reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    PARDER          reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    COMA            reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    DOSP            reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENOS           [ reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! POR             [ reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! RESTO           [ reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 83 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]


state 95

    (84) expresion_relacional -> expresion MAIQUE expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    MENQUE          reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    MAYQUE          reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    MEIQUE          reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    MAIQUE          reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    IGUALQUE        reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    NIGUALQUE       reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    AND             reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    OR              reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    XOR             reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    PAND            reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    BOR             reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    XORR            reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    PARDER          reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    COMA            reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    DOSP            reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENOS           [ reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! POR             [ reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! RESTO           [ reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 84 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]


state 96

    (85) expresion_relacional -> expresion IGUALQUE expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    NIGUALQUE       reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    AND             reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    OR              reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    XOR             reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    PAND            reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    BOR             reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    XORR            reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    DOSP            reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 85 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]


state 97

    (86) expresion_relacional -> expresion NIGUALQUE expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    IGUALQUE        reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    NIGUALQUE       reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    AND             reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    OR              reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XOR             reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PAND            reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    BOR             reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XORR            reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PARDER          reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    COMA            reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    DOSP            reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 86 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]


state 98

    (71) expresion_logica -> expresion AND expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 71 (expresion_logica -> expresion AND expresion .)
    AND             reduce using rule 71 (expresion_logica -> expresion AND expresion .)
    OR              reduce using rule 71 (expresion_logica -> expresion AND expresion .)
    XOR             reduce using rule 71 (expresion_logica -> expresion AND expresion .)
    PARDER          reduce using rule 71 (expresion_logica -> expresion AND expresion .)
    COMA            reduce using rule 71 (expresion_logica -> expresion AND expresion .)
    DOSP            reduce using rule 71 (expresion_logica -> expresion AND expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! RESTO           [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! MENQUE          [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! MAYQUE          [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! MEIQUE          [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! MAIQUE          [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! PAND            [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! BOR             [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! XORR            [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTI          [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTD          [ reduce using rule 71 (expresion_logica -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]


state 99

    (72) expresion_logica -> expresion OR expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 72 (expresion_logica -> expresion OR expresion .)
    OR              reduce using rule 72 (expresion_logica -> expresion OR expresion .)
    XOR             reduce using rule 72 (expresion_logica -> expresion OR expresion .)
    PARDER          reduce using rule 72 (expresion_logica -> expresion OR expresion .)
    COMA            reduce using rule 72 (expresion_logica -> expresion OR expresion .)
    DOSP            reduce using rule 72 (expresion_logica -> expresion OR expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! RESTO           [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! MENQUE          [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! MAYQUE          [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! MEIQUE          [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! MAIQUE          [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! PAND            [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! BOR             [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! XORR            [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTI          [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTD          [ reduce using rule 72 (expresion_logica -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]


state 100

    (73) expresion_logica -> expresion XOR expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for RESTO resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MEIQUE resolved as shift
  ! shift/reduce conflict for MAIQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for PAND resolved as shift
  ! shift/reduce conflict for BOR resolved as shift
  ! shift/reduce conflict for XORR resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
    PTCOMA          reduce using rule 73 (expresion_logica -> expresion XOR expresion .)
    PARDER          reduce using rule 73 (expresion_logica -> expresion XOR expresion .)
    COMA            reduce using rule 73 (expresion_logica -> expresion XOR expresion .)
    DOSP            reduce using rule 73 (expresion_logica -> expresion XOR expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! MENOS           [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! POR             [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! RESTO           [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! MENQUE          [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! MAYQUE          [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! MEIQUE          [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! MAIQUE          [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! AND             [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! OR              [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! XOR             [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! PAND            [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! BOR             [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! XORR            [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTI          [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTD          [ reduce using rule 73 (expresion_logica -> expresion XOR expresion .) ]


state 101

    (75) expresion_bit_bit -> expresion PAND expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .)
    AND             reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .)
    OR              reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .)
    XOR             reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .)
    PAND            reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .)
    BOR             reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .)
    XORR            reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .)
    PARDER          reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .)
    COMA            reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .)
    DOSP            reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENOS           [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! POR             [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! RESTO           [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENQUE          [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAYQUE          [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MEIQUE          [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAIQUE          [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! IGUALQUE        [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTI          [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTD          [ reduce using rule 75 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]


state 102

    (76) expresion_bit_bit -> expresion BOR expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .)
    AND             reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .)
    OR              reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .)
    XOR             reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .)
    BOR             reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .)
    PARDER          reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .)
    COMA            reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .)
    DOSP            reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    PAND            shift and go to state 59
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENOS           [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! POR             [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! RESTO           [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENQUE          [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAYQUE          [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MEIQUE          [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAIQUE          [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! PAND            [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! XORR            [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTI          [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTD          [ reduce using rule 76 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 60 ]


state 103

    (77) expresion_bit_bit -> expresion XORR expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .)
    AND             reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .)
    OR              reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .)
    XOR             reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .)
    BOR             reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .)
    XORR            reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .)
    PARDER          reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .)
    COMA            reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .)
    DOSP            reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    PAND            shift and go to state 59
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63

  ! MAS             [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENOS           [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! POR             [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! RESTO           [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENQUE          [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAYQUE          [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MEIQUE          [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAIQUE          [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! IGUALQUE        [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! PAND            [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTI          [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTD          [ reduce using rule 77 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]


state 104

    (78) expresion_bit_bit -> expresion SHIFTI expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MENQUE          reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAYQUE          reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MEIQUE          reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAIQUE          reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    IGUALQUE        reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    NIGUALQUE       reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    AND             reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    OR              reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XOR             reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PAND            reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    BOR             reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XORR            reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTI          reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTD          reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PARDER          reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    COMA            reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    DOSP            reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49

  ! MAS             [ reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENOS           [ reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! POR             [ reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! DIVIDIDO        [ reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! RESTO           [ reduce using rule 78 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]
  ! SHIFTI          [ shift and go to state 62 ]
  ! SHIFTD          [ shift and go to state 63 ]


state 105

    (79) expresion_bit_bit -> expresion SHIFTD expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MENQUE          reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAYQUE          reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MEIQUE          reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAIQUE          reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    IGUALQUE        reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    NIGUALQUE       reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    AND             reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    OR              reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XOR             reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PAND            reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    BOR             reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XORR            reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTI          reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTD          reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PARDER          reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    COMA            reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    DOSP            reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49

  ! MAS             [ reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENOS           [ reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! POR             [ reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! DIVIDIDO        [ reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! RESTO           [ reduce using rule 79 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENQUE          [ shift and go to state 50 ]
  ! MAYQUE          [ shift and go to state 51 ]
  ! MEIQUE          [ shift and go to state 52 ]
  ! MAIQUE          [ shift and go to state 53 ]
  ! IGUALQUE        [ shift and go to state 54 ]
  ! NIGUALQUE       [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]
  ! XOR             [ shift and go to state 58 ]
  ! PAND            [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 60 ]
  ! XORR            [ shift and go to state 61 ]
  ! SHIFTI          [ shift and go to state 62 ]
  ! SHIFTD          [ shift and go to state 63 ]


state 106

    (69) expresion -> PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    RESTO           reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    MENQUE          reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    MAYQUE          reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    MEIQUE          reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    MAIQUE          reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    NIGUALQUE       reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    XOR             reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    PAND            reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    BOR             reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    XORR            reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    SHIFTI          reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    SHIFTD          reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)
    DOSP            reduce using rule 69 (expresion -> PARIZQ expresion PARDER .)


state 107

    (56) lista_id -> ID .

    PTCOMA          reduce using rule 56 (lista_id -> ID .)
    IGUAL           reduce using rule 56 (lista_id -> ID .)
    COMA            reduce using rule 56 (lista_id -> ID .)


state 108

    (42) asignacion -> ID IGUAL . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 127
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 109

    (43) asignacion -> ID ASUMA . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 128
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 110

    (44) asignacion -> ID ARESTA . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 129
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 111

    (45) asignacion -> ID MULTIPLICATIVA . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 130
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 112

    (46) asignacion -> ID DIVIDIDA . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 131
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 113

    (47) asignacion -> ID ARESTO . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 132
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 114

    (48) asignacion -> ID ABOR . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 133
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 115

    (49) asignacion -> ID APAND . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 134
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 116

    (50) asignacion -> ID ASHIFTD . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 135
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 117

    (51) asignacion -> ID ASHIFTI . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 136
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 118

    (52) asignacion -> ID AXORR . expresion PTCOMA
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 137
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 119

    (8) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .

    INT             reduce using rule 8 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 8 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 8 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 8 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 8 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)


state 120

    (13) instrucciones -> instrucciones instruccion .

    LLAVDER         reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    error           reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    IMPRIMIR        reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    SCAN            reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    VOID            reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    DEFAULT         reduce using rule 13 (instrucciones -> instrucciones instruccion .)
    CASE            reduce using rule 13 (instrucciones -> instrucciones instruccion .)


state 121

    (40) imprimir_instr -> IMPRIMIR PARIZQ . CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> IMPRIMIR PARIZQ . CADENA PARDER PTCOMA

    CADENA          shift and go to state 138


state 122

    (32) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 139
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 123

    (23) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case LLAVDER
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 140
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 124

    (31) ins_break -> BREAK PTCOMA .

    LLAVDER         reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    error           reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    IMPRIMIR        reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    ID              reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    IF              reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    SWITCH          reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    BREAK           reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    SCAN            reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    INT             reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    FLOAT           reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    CHAR            reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    VOID            reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    DEFAULT         reduce using rule 31 (ins_break -> BREAK PTCOMA .)
    CASE            reduce using rule 31 (ins_break -> BREAK PTCOMA .)


state 125

    (39) ins_scan -> SCAN PARIZQ . CADENA COMA PAND ID PARDER PTCOMA

    CADENA          shift and go to state 141


state 126

    (9) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    LLAVDER         shift and go to state 142
    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    TIPO                           shift and go to state 68
    instruccion                    shift and go to state 120
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78

state 127

    (42) asignacion -> ID IGUAL expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 143
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 128

    (43) asignacion -> ID ASUMA expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 144
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 129

    (44) asignacion -> ID ARESTA expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 145
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 130

    (45) asignacion -> ID MULTIPLICATIVA expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 146
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 131

    (46) asignacion -> ID DIVIDIDA expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 147
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 132

    (47) asignacion -> ID ARESTO expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 148
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 133

    (48) asignacion -> ID ABOR expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 149
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 134

    (49) asignacion -> ID APAND expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 150
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 135

    (50) asignacion -> ID ASHIFTD expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 151
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 136

    (51) asignacion -> ID ASHIFTI expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 152
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 137

    (52) asignacion -> ID AXORR expresion . PTCOMA
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 153
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 138

    (40) imprimir_instr -> IMPRIMIR PARIZQ CADENA . COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> IMPRIMIR PARIZQ CADENA . PARDER PTCOMA

    COMA            shift and go to state 154
    PARDER          shift and go to state 155


state 139

    (32) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 156
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 140

    (23) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case LLAVDER
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 157
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 141

    (39) ins_scan -> SCAN PARIZQ CADENA . COMA PAND ID PARDER PTCOMA

    COMA            shift and go to state 158


state 142

    (9) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .

    INT             reduce using rule 9 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 9 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 9 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 9 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 9 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)


state 143

    (42) asignacion -> ID IGUAL expresion PTCOMA .

    LLAVDER         reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    error           reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    IMPRIMIR        reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    SWITCH          reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    BREAK           reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    SCAN            reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    INT             reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    FLOAT           reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    CHAR            reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    VOID            reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    DEFAULT         reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)
    CASE            reduce using rule 42 (asignacion -> ID IGUAL expresion PTCOMA .)


state 144

    (43) asignacion -> ID ASUMA expresion PTCOMA .

    LLAVDER         reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    error           reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    IMPRIMIR        reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    ID              reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    IF              reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    SWITCH          reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    BREAK           reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    SCAN            reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    INT             reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    FLOAT           reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    CHAR            reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    VOID            reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    DEFAULT         reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)
    CASE            reduce using rule 43 (asignacion -> ID ASUMA expresion PTCOMA .)


state 145

    (44) asignacion -> ID ARESTA expresion PTCOMA .

    LLAVDER         reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    error           reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    IMPRIMIR        reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    ID              reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    IF              reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    SWITCH          reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    BREAK           reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    SCAN            reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    INT             reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    FLOAT           reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    CHAR            reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    VOID            reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    DEFAULT         reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)
    CASE            reduce using rule 44 (asignacion -> ID ARESTA expresion PTCOMA .)


state 146

    (45) asignacion -> ID MULTIPLICATIVA expresion PTCOMA .

    LLAVDER         reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    error           reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    IMPRIMIR        reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    ID              reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    IF              reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    SWITCH          reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    BREAK           reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    SCAN            reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    INT             reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    FLOAT           reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    CHAR            reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    VOID            reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    DEFAULT         reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)
    CASE            reduce using rule 45 (asignacion -> ID MULTIPLICATIVA expresion PTCOMA .)


state 147

    (46) asignacion -> ID DIVIDIDA expresion PTCOMA .

    LLAVDER         reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    error           reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    IMPRIMIR        reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    ID              reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    IF              reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    SWITCH          reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    BREAK           reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    SCAN            reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    INT             reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    FLOAT           reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    CHAR            reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    VOID            reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    DEFAULT         reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)
    CASE            reduce using rule 46 (asignacion -> ID DIVIDIDA expresion PTCOMA .)


state 148

    (47) asignacion -> ID ARESTO expresion PTCOMA .

    LLAVDER         reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    error           reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    IMPRIMIR        reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    ID              reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    IF              reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    SWITCH          reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    BREAK           reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    SCAN            reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    INT             reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    FLOAT           reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    CHAR            reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    VOID            reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    DEFAULT         reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)
    CASE            reduce using rule 47 (asignacion -> ID ARESTO expresion PTCOMA .)


state 149

    (48) asignacion -> ID ABOR expresion PTCOMA .

    LLAVDER         reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    error           reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    IMPRIMIR        reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    ID              reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    IF              reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    SWITCH          reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    BREAK           reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    SCAN            reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    INT             reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    FLOAT           reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    CHAR            reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    VOID            reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    DEFAULT         reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)
    CASE            reduce using rule 48 (asignacion -> ID ABOR expresion PTCOMA .)


state 150

    (49) asignacion -> ID APAND expresion PTCOMA .

    LLAVDER         reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    error           reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    IMPRIMIR        reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    ID              reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    IF              reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    SWITCH          reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    BREAK           reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    SCAN            reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    INT             reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    FLOAT           reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    CHAR            reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    VOID            reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    DEFAULT         reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)
    CASE            reduce using rule 49 (asignacion -> ID APAND expresion PTCOMA .)


state 151

    (50) asignacion -> ID ASHIFTD expresion PTCOMA .

    LLAVDER         reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    error           reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    IMPRIMIR        reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    ID              reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    IF              reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    SWITCH          reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    BREAK           reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    SCAN            reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    INT             reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    FLOAT           reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    CHAR            reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    VOID            reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    DEFAULT         reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)
    CASE            reduce using rule 50 (asignacion -> ID ASHIFTD expresion PTCOMA .)


state 152

    (51) asignacion -> ID ASHIFTI expresion PTCOMA .

    LLAVDER         reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    error           reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    IMPRIMIR        reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    ID              reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    IF              reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    SWITCH          reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    BREAK           reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    SCAN            reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    INT             reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    FLOAT           reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    CHAR            reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    VOID            reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    DEFAULT         reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)
    CASE            reduce using rule 51 (asignacion -> ID ASHIFTI expresion PTCOMA .)


state 153

    (52) asignacion -> ID AXORR expresion PTCOMA .

    LLAVDER         reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    error           reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    IMPRIMIR        reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    ID              reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    IF              reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    SWITCH          reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    BREAK           reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    SCAN            reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    INT             reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    FLOAT           reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    CHAR            reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    VOID            reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    DEFAULT         reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)
    CASE            reduce using rule 52 (asignacion -> ID AXORR expresion PTCOMA .)


state 154

    (40) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA . expresiones PARDER PTCOMA
    (61) expresiones -> . expresiones COMA expresion
    (62) expresiones -> . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresiones                    shift and go to state 159
    expresion                      shift and go to state 160
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 155

    (41) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER . PTCOMA

    PTCOMA          shift and go to state 161


state 156

    (32) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif

    LLAVIZQ         shift and go to state 162


state 157

    (23) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case LLAVDER

    LLAVIZQ         shift and go to state 163


state 158

    (39) ins_scan -> SCAN PARIZQ CADENA COMA . PAND ID PARDER PTCOMA

    PAND            shift and go to state 164


state 159

    (40) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones . PARDER PTCOMA
    (61) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 166
    COMA            shift and go to state 165


state 160

    (62) expresiones -> expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          reduce using rule 62 (expresiones -> expresion .)
    COMA            reduce using rule 62 (expresiones -> expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 161

    (41) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .

    LLAVDER         reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    error           reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    ID              reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IF              reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    SWITCH          reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    BREAK           reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    SCAN            reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    INT             reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    FLOAT           reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CHAR            reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    VOID            reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DEFAULT         reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CASE            reduce using rule 41 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)


state 162

    (32) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (33) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 167
    instruccion                    shift and go to state 71
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 163

    (23) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case default_ins LLAVDER
    (24) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case LLAVDER
    (25) lista_case -> . lista_case caso
    (26) lista_case -> . caso
    (27) caso -> . CASE expresion DOSP instrucciones
    (28) caso -> . CASE expresion DOSP

    CASE            shift and go to state 170

    lista_case                     shift and go to state 168
    caso                           shift and go to state 169

state 164

    (39) ins_scan -> SCAN PARIZQ CADENA COMA PAND . ID PARDER PTCOMA

    ID              shift and go to state 171


state 165

    (61) expresiones -> expresiones COMA . expresion
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 172
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 166

    (40) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 173


state 167

    (32) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (33) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    LLAVDER         shift and go to state 174
    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 120
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 168

    (23) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . default_ins LLAVDER
    (24) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . LLAVDER
    (25) lista_case -> lista_case . caso
    (29) default_ins -> . DEFAULT DOSP instrucciones
    (30) default_ins -> . DEFAULT DOSP
    (27) caso -> . CASE expresion DOSP instrucciones
    (28) caso -> . CASE expresion DOSP

    LLAVDER         shift and go to state 176
    DEFAULT         shift and go to state 178
    CASE            shift and go to state 170

    default_ins                    shift and go to state 175
    caso                           shift and go to state 177

state 169

    (26) lista_case -> caso .

    LLAVDER         reduce using rule 26 (lista_case -> caso .)
    DEFAULT         reduce using rule 26 (lista_case -> caso .)
    CASE            reduce using rule 26 (lista_case -> caso .)


state 170

    (27) caso -> CASE . expresion DOSP instrucciones
    (28) caso -> CASE . expresion DOSP
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 179
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 171

    (39) ins_scan -> SCAN PARIZQ CADENA COMA PAND ID . PARDER PTCOMA

    PARDER          shift and go to state 180


state 172

    (61) expresiones -> expresiones COMA expresion .
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          reduce using rule 61 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 61 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 173

    (40) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .

    LLAVDER         reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    error           reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    SWITCH          reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    SCAN            reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    INT             reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    FLOAT           reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CHAR            reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    VOID            reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DEFAULT         reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CASE            reduce using rule 40 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)


state 174

    (32) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .
    (33) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif
    (36) lelseif -> . lelseif elseif
    (37) lelseif -> . elseif
    (38) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVDER         reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 32 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 181

    lelseif                        shift and go to state 182
    elseif                         shift and go to state 183

state 175

    (23) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins . LLAVDER

    LLAVDER         shift and go to state 184


state 176

    (24) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .

    LLAVDER         reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    error           reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IMPRIMIR        reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    ID              reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IF              reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    SWITCH          reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    BREAK           reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    SCAN            reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    INT             reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    FLOAT           reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CHAR            reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    VOID            reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DEFAULT         reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CASE            reduce using rule 24 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)


state 177

    (25) lista_case -> lista_case caso .

    LLAVDER         reduce using rule 25 (lista_case -> lista_case caso .)
    DEFAULT         reduce using rule 25 (lista_case -> lista_case caso .)
    CASE            reduce using rule 25 (lista_case -> lista_case caso .)


state 178

    (29) default_ins -> DEFAULT . DOSP instrucciones
    (30) default_ins -> DEFAULT . DOSP

    DOSP            shift and go to state 185


state 179

    (27) caso -> CASE expresion . DOSP instrucciones
    (28) caso -> CASE expresion . DOSP
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    DOSP            shift and go to state 186
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 180

    (39) ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER . PTCOMA

    PTCOMA          shift and go to state 187


state 181

    (33) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER
    (38) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 189
    IF              shift and go to state 188


state 182

    (34) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif . ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .
    (36) lelseif -> lelseif . elseif
    (38) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    ELSE            shift and go to state 190
    LLAVDER         reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    error           reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IMPRIMIR        reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    ID              reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IF              reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    SWITCH          reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    BREAK           reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    SCAN            reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    INT             reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    FLOAT           reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CHAR            reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    VOID            reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DEFAULT         reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CASE            reduce using rule 35 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)

    elseif                         shift and go to state 191

state 183

    (37) lelseif -> elseif .

    ELSE            reduce using rule 37 (lelseif -> elseif .)
    LLAVDER         reduce using rule 37 (lelseif -> elseif .)
    error           reduce using rule 37 (lelseif -> elseif .)
    IMPRIMIR        reduce using rule 37 (lelseif -> elseif .)
    ID              reduce using rule 37 (lelseif -> elseif .)
    IF              reduce using rule 37 (lelseif -> elseif .)
    SWITCH          reduce using rule 37 (lelseif -> elseif .)
    BREAK           reduce using rule 37 (lelseif -> elseif .)
    SCAN            reduce using rule 37 (lelseif -> elseif .)
    INT             reduce using rule 37 (lelseif -> elseif .)
    FLOAT           reduce using rule 37 (lelseif -> elseif .)
    CHAR            reduce using rule 37 (lelseif -> elseif .)
    VOID            reduce using rule 37 (lelseif -> elseif .)
    DEFAULT         reduce using rule 37 (lelseif -> elseif .)
    CASE            reduce using rule 37 (lelseif -> elseif .)


state 184

    (23) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .

    LLAVDER         reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    error           reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IMPRIMIR        reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    ID              reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IF              reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    SWITCH          reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    BREAK           reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    SCAN            reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    INT             reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    FLOAT           reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CHAR            reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    VOID            reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DEFAULT         reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CASE            reduce using rule 23 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)


state 185

    (29) default_ins -> DEFAULT DOSP . instrucciones
    (30) default_ins -> DEFAULT DOSP .
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    LLAVDER         reduce using rule 30 (default_ins -> DEFAULT DOSP .)
    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 192
    instruccion                    shift and go to state 71
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 186

    (27) caso -> CASE expresion DOSP . instrucciones
    (28) caso -> CASE expresion DOSP .
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    LLAVDER         reduce using rule 28 (caso -> CASE expresion DOSP .)
    DEFAULT         reduce using rule 28 (caso -> CASE expresion DOSP .)
    CASE            reduce using rule 28 (caso -> CASE expresion DOSP .)
    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 193
    instruccion                    shift and go to state 71
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 187

    (39) ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .

    LLAVDER         reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    error           reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    ID              reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    IF              reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    SWITCH          reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    BREAK           reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    SCAN            reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    INT             reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    FLOAT           reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    CHAR            reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    VOID            reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    DEFAULT         reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)
    CASE            reduce using rule 39 (ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA .)


state 188

    (38) elseif -> ELSE IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 194


state 189

    (33) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 195
    instruccion                    shift and go to state 71
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 190

    (34) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE . LLAVIZQ instrucciones LLAVDER
    (38) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 196
    IF              shift and go to state 188


state 191

    (36) lelseif -> lelseif elseif .

    ELSE            reduce using rule 36 (lelseif -> lelseif elseif .)
    LLAVDER         reduce using rule 36 (lelseif -> lelseif elseif .)
    error           reduce using rule 36 (lelseif -> lelseif elseif .)
    IMPRIMIR        reduce using rule 36 (lelseif -> lelseif elseif .)
    ID              reduce using rule 36 (lelseif -> lelseif elseif .)
    IF              reduce using rule 36 (lelseif -> lelseif elseif .)
    SWITCH          reduce using rule 36 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 36 (lelseif -> lelseif elseif .)
    SCAN            reduce using rule 36 (lelseif -> lelseif elseif .)
    INT             reduce using rule 36 (lelseif -> lelseif elseif .)
    FLOAT           reduce using rule 36 (lelseif -> lelseif elseif .)
    CHAR            reduce using rule 36 (lelseif -> lelseif elseif .)
    VOID            reduce using rule 36 (lelseif -> lelseif elseif .)
    DEFAULT         reduce using rule 36 (lelseif -> lelseif elseif .)
    CASE            reduce using rule 36 (lelseif -> lelseif elseif .)


state 192

    (29) default_ins -> DEFAULT DOSP instrucciones .
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    LLAVDER         reduce using rule 29 (default_ins -> DEFAULT DOSP instrucciones .)
    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 120
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 193

    (27) caso -> CASE expresion DOSP instrucciones .
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    LLAVDER         reduce using rule 27 (caso -> CASE expresion DOSP instrucciones .)
    DEFAULT         reduce using rule 27 (caso -> CASE expresion DOSP instrucciones .)
    CASE            reduce using rule 27 (caso -> CASE expresion DOSP instrucciones .)
    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 120
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 194

    (38) elseif -> ELSE IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (63) expresion -> . primitiva
    (64) expresion -> . expresion_numerica
    (65) expresion -> . expresion_relacional
    (66) expresion -> . expresion_unaria
    (67) expresion -> . expresion_logica
    (68) expresion -> . expresion_bit_bit
    (69) expresion -> . PARIZQ expresion PARDER
    (92) primitiva -> . ENTERO
    (93) primitiva -> . DECIMAL
    (94) primitiva -> . CADENA
    (95) primitiva -> . CADENAR_CHAR
    (96) primitiva -> . ID
    (87) expresion_numerica -> . expresion MAS expresion
    (88) expresion_numerica -> . expresion MENOS expresion
    (89) expresion_numerica -> . expresion POR expresion
    (90) expresion_numerica -> . expresion DIVIDIDO expresion
    (91) expresion_numerica -> . expresion RESTO expresion
    (81) expresion_relacional -> . expresion MENQUE expresion
    (82) expresion_relacional -> . expresion MAYQUE expresion
    (83) expresion_relacional -> . expresion MEIQUE expresion
    (84) expresion_relacional -> . expresion MAIQUE expresion
    (85) expresion_relacional -> . expresion IGUALQUE expresion
    (86) expresion_relacional -> . expresion NIGUALQUE expresion
    (70) expresion_unaria -> . MENOS expresion
    (71) expresion_logica -> . expresion AND expresion
    (72) expresion_logica -> . expresion OR expresion
    (73) expresion_logica -> . expresion XOR expresion
    (74) expresion_logica -> . NOT expresion
    (75) expresion_bit_bit -> . expresion PAND expresion
    (76) expresion_bit_bit -> . expresion BOR expresion
    (77) expresion_bit_bit -> . expresion XORR expresion
    (78) expresion_bit_bit -> . expresion SHIFTI expresion
    (79) expresion_bit_bit -> . expresion SHIFTD expresion
    (80) expresion_bit_bit -> . NOTR expresion

    PARIZQ          shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    CADENA          shift and go to state 33
    CADENAR_CHAR    shift and go to state 34
    ID              shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 37
    NOTR            shift and go to state 38

    expresion                      shift and go to state 197
    primitiva                      shift and go to state 24
    expresion_numerica             shift and go to state 25
    expresion_relacional           shift and go to state 26
    expresion_unaria               shift and go to state 27
    expresion_logica               shift and go to state 28
    expresion_bit_bit              shift and go to state 29

state 195

    (33) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    LLAVDER         shift and go to state 198
    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 120
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 196

    (34) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 199
    instruccion                    shift and go to state 71
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 197

    (38) elseif -> ELSE IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (87) expresion_numerica -> expresion . MAS expresion
    (88) expresion_numerica -> expresion . MENOS expresion
    (89) expresion_numerica -> expresion . POR expresion
    (90) expresion_numerica -> expresion . DIVIDIDO expresion
    (91) expresion_numerica -> expresion . RESTO expresion
    (81) expresion_relacional -> expresion . MENQUE expresion
    (82) expresion_relacional -> expresion . MAYQUE expresion
    (83) expresion_relacional -> expresion . MEIQUE expresion
    (84) expresion_relacional -> expresion . MAIQUE expresion
    (85) expresion_relacional -> expresion . IGUALQUE expresion
    (86) expresion_relacional -> expresion . NIGUALQUE expresion
    (71) expresion_logica -> expresion . AND expresion
    (72) expresion_logica -> expresion . OR expresion
    (73) expresion_logica -> expresion . XOR expresion
    (75) expresion_bit_bit -> expresion . PAND expresion
    (76) expresion_bit_bit -> expresion . BOR expresion
    (77) expresion_bit_bit -> expresion . XORR expresion
    (78) expresion_bit_bit -> expresion . SHIFTI expresion
    (79) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 200
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIDO        shift and go to state 48
    RESTO           shift and go to state 49
    MENQUE          shift and go to state 50
    MAYQUE          shift and go to state 51
    MEIQUE          shift and go to state 52
    MAIQUE          shift and go to state 53
    IGUALQUE        shift and go to state 54
    NIGUALQUE       shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57
    XOR             shift and go to state 58
    PAND            shift and go to state 59
    BOR             shift and go to state 60
    XORR            shift and go to state 61
    SHIFTI          shift and go to state 62
    SHIFTD          shift and go to state 63


state 198

    (33) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 33 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)


state 199

    (34) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    LLAVDER         shift and go to state 201
    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 120
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 200

    (38) elseif -> ELSE IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 202


state 201

    (34) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 34 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)


state 202

    (38) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (13) instrucciones -> . instrucciones instruccion
    (14) instrucciones -> . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instrucciones                  shift and go to state 203
    instruccion                    shift and go to state 71
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 203

    (38) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (13) instrucciones -> instrucciones . instruccion
    (15) instruccion -> . imprimir_instr
    (16) instruccion -> . asignacion
    (17) instruccion -> . declaracion
    (18) instruccion -> . sentencia_if
    (19) instruccion -> . sentencia_switch
    (20) instruccion -> . ins_break
    (21) instruccion -> . ins_scan
    (22) instruccion -> . error
    (40) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (41) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (42) asignacion -> . ID IGUAL expresion PTCOMA
    (43) asignacion -> . ID ASUMA expresion PTCOMA
    (44) asignacion -> . ID ARESTA expresion PTCOMA
    (45) asignacion -> . ID MULTIPLICATIVA expresion PTCOMA
    (46) asignacion -> . ID DIVIDIDA expresion PTCOMA
    (47) asignacion -> . ID ARESTO expresion PTCOMA
    (48) asignacion -> . ID ABOR expresion PTCOMA
    (49) asignacion -> . ID APAND expresion PTCOMA
    (50) asignacion -> . ID ASHIFTD expresion PTCOMA
    (51) asignacion -> . ID ASHIFTI expresion PTCOMA
    (52) asignacion -> . ID AXORR expresion PTCOMA
    (53) declaracion -> . TIPO lista_id PTCOMA
    (54) declaracion -> . TIPO lista_id IGUAL expresion PTCOMA
    (32) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (33) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (35) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (23) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (24) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (31) ins_break -> . BREAK PTCOMA
    (39) ins_scan -> . SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA
    (57) TIPO -> . INT
    (58) TIPO -> . FLOAT
    (59) TIPO -> . CHAR
    (60) TIPO -> . VOID

    LLAVDER         shift and go to state 204
    error           shift and go to state 79
    IMPRIMIR        shift and go to state 80
    ID              shift and go to state 69
    IF              shift and go to state 81
    SWITCH          shift and go to state 82
    BREAK           shift and go to state 83
    SCAN            shift and go to state 84
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    VOID            shift and go to state 11

    instruccion                    shift and go to state 120
    imprimir_instr                 shift and go to state 72
    asignacion                     shift and go to state 73
    declaracion                    shift and go to state 74
    sentencia_if                   shift and go to state 75
    sentencia_switch               shift and go to state 76
    ins_break                      shift and go to state 77
    ins_scan                       shift and go to state 78
    TIPO                           shift and go to state 68

state 204

    (38) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    ELSE            reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SCAN            reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 38 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 100 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 100 resolved as shift
WARNING: shift/reduce conflict for POR in state 100 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 100 resolved as shift
WARNING: shift/reduce conflict for RESTO in state 100 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 100 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 100 resolved as shift
WARNING: shift/reduce conflict for MEIQUE in state 100 resolved as shift
WARNING: shift/reduce conflict for MAIQUE in state 100 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 100 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 100 resolved as shift
WARNING: shift/reduce conflict for AND in state 100 resolved as shift
WARNING: shift/reduce conflict for OR in state 100 resolved as shift
WARNING: shift/reduce conflict for XOR in state 100 resolved as shift
WARNING: shift/reduce conflict for PAND in state 100 resolved as shift
WARNING: shift/reduce conflict for BOR in state 100 resolved as shift
WARNING: shift/reduce conflict for XORR in state 100 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 100 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 100 resolved as shift
