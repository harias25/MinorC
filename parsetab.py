
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMArightIGUALMULTIPLICATIVADIVIDIDAARESTOASUMAARESTAASHIFTDASHIFTIAPANDAXORRABORrightUNARIOleftORleftANDleftBORleftXORRleftPANDleftIGUALQUENIGUALQUEleftMENQUEMAYQUEMEIQUEMAIQUEleftSHIFTDSHIFTIleftMASMENOSleftPORDIVIDIDORESTOrightUMENOSNOTNOTRleftPARIZQPARDERCORIZQCORDERPUNTOABOR AND APAND ARESTA ARESTO ASHIFTD ASHIFTI ASUMA AXORR BOR BREAK CADENA CADENAR_CHAR CASE CHAR COMA CONTINUE CORDER CORIZQ DECIMAL DEFAULT DIVIDIDA DIVIDIDO DO DOSP ELSE ENTERO FLOAT FOR GOTO ID IF IGUAL IGUALQUE IMPRIMIR INT LLAVDER LLAVIZQ MAIQUE MAS MAYQUE MEIQUE MENOS MENQUE MULTIPLICATIVA NIGUALQUE NOT NOTR OR PAND PARDER PARIZQ POR PTCOMA PUNTO RESTO SCAN SHIFTD SHIFTI SWITCH UNARIO VOID WHILE XOR XORRinit            : globalesinit            : emptyglobales    : globales iglobalglobales    : iglobal  iglobal : funcion \n                | declaracion PTCOMAempty :funcion    : TIPO ID PARIZQ PARDER LLAVIZQ  instrucciones LLAVDER funcion    : TIPO ID PARIZQ parametros PARDER LLAVIZQ  instrucciones LLAVDER parametros    : parametros COMA parametroparametros    : parametro parametro : TIPO IDinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr \n                        | asignacion PTCOMA\n                        | declaracion PTCOMA\n                        | sentencia_if\n                        | sentencia_switch\n                        | ins_break\n                        | ins_scan\n                        | ins_while\n                        | ins_for\n                        | ins_continue\n                        | ins_etiqueta\n                        | ins_goto\n                        | error   ins_etiqueta : ID DOSPins_goto : GOTO ID PTCOMAins_for : FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER instruccion_for : asignacion \n                       | declaracion ins_while : WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDERins_while : DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMAins_continue : CONTINUE PTCOMA sentencia_switch : SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDERsentencia_switch : SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDERlista_case    : lista_case casolista_case    : caso caso    : CASE expresion DOSP instrucciones  caso    : CASE expresion DOSP  default_ins    : DEFAULT DOSP instrucciones  default_ins    : DEFAULT DOSP  ins_break : BREAK PTCOMA sentencia_if  : IF PARIZQ expresion PARDER LLAVIZQ  instrucciones LLAVDERsentencia_if  : IF PARIZQ expresion PARDER LLAVIZQ  instrucciones LLAVDER ELSE  LLAVIZQ  instrucciones LLAVDER sentencia_if  : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDERsentencia_if  : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseiflelseif    : lelseif elseiflelseif    : elseif elseif : ELSE IF PARIZQ expresion PARDER LLAVIZQ  instrucciones LLAVDER ins_scan     : SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMAimprimir_instr     : IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMAimprimir_instr     : IMPRIMIR PARIZQ CADENA PARDER PTCOMAasignacion : ID IGUAL expresion  asignacion : ID MAS MAS\n                  | ID MENOS MENOS asignacion   :   ID ASUMA expresion \n                    |   ID ARESTA expresion  \n                    |   ID MULTIPLICATIVA expresion \n                    |   ID DIVIDIDA expresion \n                    |   ID ARESTO expresion  \n                    |   ID ABOR expresion  \n                    |   ID APAND expresion \n                    |   ID ASHIFTD expresion \n                    |   ID ASHIFTI expresion \n                    |   ID AXORR expresion declaracion : TIPO lista_id declaracion : TIPO lista_id IGUAL expresion  lista_id    : lista_id COMA IDlista_id    : ID TIPO : INT \n                | FLOAT \n                | CHAR \n                | VOID expresiones : expresiones COMA expresion expresiones : expresion expresion : primitiva \n                 | expresion_numerica \n                 | expresion_relacional\n                 | expresion_unaria\n                 | expresion_logica \n                 | expresion_bit_bit expresion : PARIZQ expresion PARDER expresion_unaria   :   MENOS expresion %prec UMENOSexpresion_logica   : expresion AND expresion \n                          | expresion OR expresion\n                          | expresion XOR expresion expresion_logica   :   NOT expresion %prec NOTexpresion_bit_bit  : expresion PAND expresion \n                          | expresion BOR expresion\n                          | expresion XORR expresion \n                          | expresion SHIFTI expresion\n                          | expresion SHIFTD expresionexpresion_bit_bit   :   NOTR expresion %prec NOTRexpresion_relacional :   expresion MENQUE expresion \n                            |   expresion MAYQUE expresion \n                            |   expresion MEIQUE expresion\n                            |   expresion MAIQUE expresion\n                            |   expresion IGUALQUE expresion \n                            |   expresion NIGUALQUE expresion expresion_numerica   :   expresion MAS expresion \n                            |   expresion MENOS expresion \n                            |   expresion POR expresion\n                            |   expresion DIVIDIDO expresion\n                            |   expresion RESTO expresionprimitiva : ENTERO\n                 | DECIMAL\n                 | CADENA\n                 | CADENAR_CHAR\n                 | ID '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,12,13,131,170,],[-7,0,-1,-2,-4,-5,-3,-6,-8,-9,]),'INT':([0,2,4,5,12,13,16,41,43,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,131,132,133,134,138,141,142,143,145,164,169,170,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[8,8,-4,-5,-3,-6,8,8,8,8,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,8,-28,-8,-13,-16,-17,-44,8,8,-35,8,8,-29,-9,-54,8,8,8,8,-53,-45,-37,-33,-48,-50,-36,8,8,-52,8,-49,8,8,-34,8,8,8,8,-46,8,-30,-47,8,8,-51,]),'FLOAT':([0,2,4,5,12,13,16,41,43,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,131,132,133,134,138,141,142,143,145,164,169,170,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[9,9,-4,-5,-3,-6,9,9,9,9,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,9,-28,-8,-13,-16,-17,-44,9,9,-35,9,9,-29,-9,-54,9,9,9,9,-53,-45,-37,-33,-48,-50,-36,9,9,-52,9,-49,9,9,-34,9,9,9,9,-46,9,-30,-47,9,9,-51,]),'CHAR':([0,2,4,5,12,13,16,41,43,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,131,132,133,134,138,141,142,143,145,164,169,170,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[10,10,-4,-5,-3,-6,10,10,10,10,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,10,-28,-8,-13,-16,-17,-44,10,10,-35,10,10,-29,-9,-54,10,10,10,10,-53,-45,-37,-33,-48,-50,-36,10,10,-52,10,-49,10,10,-34,10,10,10,10,-46,10,-30,-47,10,10,-51,]),'VOID':([0,2,4,5,12,13,16,41,43,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,131,132,133,134,138,141,142,143,145,164,169,170,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[11,11,-4,-5,-3,-6,11,11,11,11,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,11,-28,-8,-13,-16,-17,-44,11,11,-35,11,11,-29,-9,-54,11,11,11,11,-53,-45,-37,-33,-48,-50,-36,11,11,-52,11,-49,11,11,-34,11,11,11,11,-46,11,-30,-47,11,11,-51,]),'PTCOMA':([6,14,15,23,24,25,26,27,28,29,31,32,33,34,35,39,64,65,66,72,73,87,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,144,146,147,148,149,150,151,152,153,154,155,156,157,158,165,166,167,172,187,189,206,217,],[13,-71,-68,-69,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,-70,-85,-89,-95,133,134,138,143,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,-86,-87,-88,-90,-91,-92,-93,-94,-84,-71,169,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,178,-31,-32,181,197,199,216,225,]),'ID':([7,8,9,10,11,17,18,19,30,36,37,38,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,67,69,70,71,74,75,76,77,78,79,80,81,82,83,93,94,117,120,121,122,123,124,125,126,127,128,129,130,132,133,134,136,137,138,140,141,142,143,145,164,169,171,178,181,182,184,185,188,190,193,195,196,197,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,227,228,229,230,232,233,234,236,237,238,239,],[14,-72,-73,-74,-75,35,39,40,35,35,35,35,68,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,116,68,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,144,68,35,35,35,35,35,35,35,35,35,35,35,-28,-13,-16,-17,35,35,-44,35,68,168,-35,68,68,-29,35,35,-54,68,194,68,35,68,35,68,35,168,-53,-45,-37,-33,-48,-50,-36,68,68,-52,68,-49,68,68,-34,68,35,68,68,68,-46,68,-30,-47,68,68,-51,]),'PARIZQ':([14,17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,84,85,86,88,89,91,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,186,188,193,196,219,227,],[16,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,135,136,137,139,140,142,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,196,30,30,30,227,30,]),'IGUAL':([14,15,39,68,116,168,],[-71,17,-70,117,-71,117,]),'COMA':([14,15,21,22,24,25,26,27,28,29,31,32,33,34,35,39,40,64,65,66,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,159,162,179,180,198,],[-71,18,43,-11,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,-70,-12,-85,-89,-95,-10,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,-86,-87,-88,-90,-91,-92,-93,-94,-84,-71,171,175,188,-77,-76,]),'PARDER':([16,21,22,24,25,26,27,28,29,31,32,33,34,35,40,63,64,65,66,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,179,180,194,198,208,209,231,],[20,42,-11,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,-12,115,-85,-89,-95,-10,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,-86,-87,-88,-90,-91,-92,-93,-94,-84,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,172,173,174,176,189,-77,206,-76,217,218,235,]),'ENTERO':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DECIMAL':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'CADENA':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,135,136,137,139,140,171,178,188,193,196,227,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,159,33,33,162,33,33,33,33,33,33,33,]),'CADENAR_CHAR':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'MENOS':([17,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,119,120,121,122,123,124,125,126,127,128,129,136,137,140,146,149,150,151,152,153,154,155,156,157,158,160,161,163,168,171,178,180,187,188,193,196,198,205,208,227,231,],[36,45,-78,-79,-80,-81,-82,-83,36,-107,-108,-109,-110,-111,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,45,-85,-89,-95,119,-102,-103,-104,-105,-106,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-84,36,148,36,36,36,36,36,36,36,36,36,36,36,36,36,45,45,45,45,45,45,45,45,45,45,45,45,45,45,119,36,36,45,45,36,36,36,45,45,45,36,45,]),'NOT':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'NOTR':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'LLAVIZQ':([20,42,90,173,174,176,210,218,221,235,],[41,94,141,182,183,185,220,226,229,237,]),'MAS':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,68,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,146,149,150,151,152,153,154,155,156,157,158,160,161,163,168,180,187,198,205,208,231,],[44,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,44,-85,-89,-95,118,-102,-103,-104,-105,-106,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-84,147,44,44,44,44,44,44,44,44,44,44,44,44,44,44,118,44,44,44,44,44,44,]),'POR':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[46,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,46,-85,-89,-95,46,46,-104,-105,-106,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-84,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'DIVIDIDO':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[47,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,47,-85,-89,-95,47,47,-104,-105,-106,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-84,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'RESTO':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[48,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,48,-85,-89,-95,48,48,-104,-105,-106,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-84,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'MENQUE':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[49,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,49,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,49,49,49,49,49,49,49,49,-93,-94,-84,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'MAYQUE':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[50,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,50,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,50,50,50,50,50,50,50,50,-93,-94,-84,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'MEIQUE':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[51,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,51,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,51,51,51,51,51,51,51,51,-93,-94,-84,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'MAIQUE':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[52,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,52,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,52,52,52,52,52,52,52,52,-93,-94,-84,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'IGUALQUE':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[53,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,53,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,53,53,53,53,53,53,-93,-94,-84,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'NIGUALQUE':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[54,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,54,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,54,54,54,54,54,54,-93,-94,-84,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'AND':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[55,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,55,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,-86,55,55,-90,-91,-92,-93,-94,-84,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'OR':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[56,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,56,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,-86,-87,56,-90,-91,-92,-93,-94,-84,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'XOR':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[57,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,57,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,-86,-87,57,-90,-91,-92,-93,-94,-84,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'PAND':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,175,180,187,198,205,208,231,],[58,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,58,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,58,58,58,-90,58,58,-93,-94,-84,58,58,58,58,58,58,58,58,58,58,58,58,58,58,184,58,58,58,58,58,58,]),'BOR':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[59,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,59,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,59,59,59,-90,-91,-92,-93,-94,-84,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'XORR':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[60,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,60,-85,-89,-95,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,60,60,60,-90,60,-92,-93,-94,-84,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'SHIFTI':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[61,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,61,-85,-89,-95,-102,-103,-104,-105,-106,61,61,61,61,61,61,61,61,61,61,61,61,-93,-94,-84,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'SHIFTD':([23,24,25,26,27,28,29,31,32,33,34,35,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,],[62,-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,62,-85,-89,-95,-102,-103,-104,-105,-106,62,62,62,62,62,62,62,62,62,62,62,62,-93,-94,-84,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'DOSP':([24,25,26,27,28,29,31,32,33,34,35,64,65,66,68,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,204,205,],[-78,-79,-80,-81,-82,-83,-107,-108,-109,-110,-111,-85,-89,-95,130,-102,-103,-104,-105,-106,-96,-97,-98,-99,-100,-101,-86,-87,-88,-90,-91,-92,-93,-94,-84,214,215,]),'error':([41,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,132,133,134,138,141,143,145,164,169,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[83,83,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,83,-28,-13,-16,-17,-44,83,-35,83,83,-29,-54,83,83,83,83,-53,-45,-37,-33,-48,-50,-36,83,83,-52,83,-49,83,83,-34,83,83,83,83,-46,83,-30,-47,83,83,-51,]),'IMPRIMIR':([41,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,132,133,134,138,141,143,145,164,169,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[84,84,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,84,-28,-13,-16,-17,-44,84,-35,84,84,-29,-54,84,84,84,84,-53,-45,-37,-33,-48,-50,-36,84,84,-52,84,-49,84,84,-34,84,84,84,84,-46,84,-30,-47,84,84,-51,]),'IF':([41,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,132,133,134,138,141,143,145,164,169,181,182,185,190,195,199,200,202,207,210,211,212,213,214,215,216,220,221,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[85,85,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,85,-28,-13,-16,-17,-44,85,-35,85,85,-29,-54,85,85,85,85,-53,-45,-37,-33,219,-48,-50,-36,85,85,-52,85,219,-49,85,85,-34,85,85,85,85,-46,85,-30,-47,85,85,-51,]),'SWITCH':([41,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,132,133,134,138,141,143,145,164,169,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[86,86,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,86,-28,-13,-16,-17,-44,86,-35,86,86,-29,-54,86,86,86,86,-53,-45,-37,-33,-48,-50,-36,86,86,-52,86,-49,86,86,-34,86,86,86,86,-46,86,-30,-47,86,86,-51,]),'BREAK':([41,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,132,133,134,138,141,143,145,164,169,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[87,87,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,87,-28,-13,-16,-17,-44,87,-35,87,87,-29,-54,87,87,87,87,-53,-45,-37,-33,-48,-50,-36,87,87,-52,87,-49,87,87,-34,87,87,87,87,-46,87,-30,-47,87,87,-51,]),'SCAN':([41,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,132,133,134,138,141,143,145,164,169,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[88,88,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,88,-28,-13,-16,-17,-44,88,-35,88,88,-29,-54,88,88,88,88,-53,-45,-37,-33,-48,-50,-36,88,88,-52,88,-49,88,88,-34,88,88,88,88,-46,88,-30,-47,88,88,-51,]),'WHILE':([41,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,132,133,134,138,141,143,145,164,169,177,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[89,89,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,89,-28,-13,-16,-17,-44,89,-35,89,89,-29,186,-54,89,89,89,89,-53,-45,-37,-33,-48,-50,-36,89,89,-52,89,-49,89,89,-34,89,89,89,89,-46,89,-30,-47,89,89,-51,]),'DO':([41,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,132,133,134,138,141,143,145,164,169,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[90,90,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,90,-28,-13,-16,-17,-44,90,-35,90,90,-29,-54,90,90,90,90,-53,-45,-37,-33,-48,-50,-36,90,90,-52,90,-49,90,90,-34,90,90,90,90,-46,90,-30,-47,90,90,-51,]),'FOR':([41,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,132,133,134,138,141,143,145,164,169,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[91,91,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,91,-28,-13,-16,-17,-44,91,-35,91,91,-29,-54,91,91,91,91,-53,-45,-37,-33,-48,-50,-36,91,91,-52,91,-49,91,91,-34,91,91,91,91,-46,91,-30,-47,91,91,-51,]),'CONTINUE':([41,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,132,133,134,138,141,143,145,164,169,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[92,92,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,92,-28,-13,-16,-17,-44,92,-35,92,92,-29,-54,92,92,92,92,-53,-45,-37,-33,-48,-50,-36,92,92,-52,92,-49,92,92,-34,92,92,92,92,-46,92,-30,-47,92,92,-51,]),'GOTO':([41,69,70,71,74,75,76,77,78,79,80,81,82,83,94,130,132,133,134,138,141,143,145,164,169,181,182,185,190,195,199,200,202,207,211,212,213,214,215,216,220,222,223,224,225,226,228,229,230,232,233,234,236,237,238,239,],[93,93,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,93,-28,-13,-16,-17,-44,93,-35,93,93,-29,-54,93,93,93,93,-53,-45,-37,-33,-48,-50,-36,93,93,-52,93,-49,93,93,-34,93,93,93,93,-46,93,-30,-47,93,93,-51,]),'ASUMA':([68,168,],[120,120,]),'ARESTA':([68,168,],[121,121,]),'MULTIPLICATIVA':([68,168,],[122,122,]),'DIVIDIDA':([68,168,],[123,123,]),'ARESTO':([68,168,],[124,124,]),'ABOR':([68,168,],[125,125,]),'APAND':([68,168,],[126,126,]),'ASHIFTD':([68,168,],[127,127,]),'ASHIFTI':([68,168,],[128,128,]),'AXORR':([68,168,],[129,129,]),'LLAVDER':([69,70,71,74,75,76,77,78,79,80,81,82,83,130,132,133,134,138,143,145,164,169,181,190,191,192,195,199,200,201,202,203,207,211,212,213,214,215,216,222,223,224,225,228,230,232,233,234,236,238,239,],[131,-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-13,-16,-17,-44,-35,170,177,-29,-54,200,202,-39,207,-53,-45,213,-37,-38,-33,-48,-50,-36,-43,-41,-52,-49,-42,-40,-34,232,234,-46,236,-30,-47,239,-51,]),'DEFAULT':([70,71,74,75,76,77,78,79,80,81,82,83,130,132,133,134,138,143,169,181,191,192,199,200,202,203,207,211,212,213,215,216,222,224,225,232,234,236,239,],[-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-13,-16,-17,-44,-35,-29,-54,204,-39,-53,-45,-37,-38,-33,-48,-50,-36,-41,-52,-49,-40,-34,-46,-30,-47,-51,]),'CASE':([70,71,74,75,76,77,78,79,80,81,82,83,130,132,133,134,138,143,169,181,183,191,192,199,200,202,203,207,211,212,213,215,216,222,224,225,232,234,236,239,],[-14,-15,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-13,-16,-17,-44,-35,-29,-54,193,193,-39,-53,-45,-37,-38,-33,-48,-50,-36,-41,-52,-49,-40,-34,-46,-30,-47,-51,]),'ELSE':([200,211,212,222,239,],[210,221,-50,-49,-51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'globales':([0,],[2,]),'empty':([0,],[3,]),'iglobal':([0,2,],[4,12,]),'funcion':([0,2,],[5,5,]),'declaracion':([0,2,41,69,94,141,142,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[6,6,73,73,73,73,167,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'TIPO':([0,2,16,41,43,69,94,141,142,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[7,7,19,67,19,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'lista_id':([7,67,],[15,15,]),'parametros':([16,],[21,]),'parametro':([16,43,],[22,95,]),'expresion':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[23,63,64,65,66,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,146,149,150,151,152,153,154,155,156,157,158,160,161,163,180,187,198,205,208,231,]),'primitiva':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'expresion_numerica':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'expresion_relacional':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expresion_unaria':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expresion_logica':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'expresion_bit_bit':([17,30,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,117,120,121,122,123,124,125,126,127,128,129,136,137,140,171,178,188,193,196,227,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'instrucciones':([41,94,141,182,185,214,215,220,226,229,237,],[69,145,164,190,195,223,224,228,230,233,238,]),'instruccion':([41,69,94,141,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[70,132,70,70,132,132,70,70,132,132,70,70,70,132,132,70,132,70,132,132,70,132,]),'imprimir_instr':([41,69,94,141,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'asignacion':([41,69,94,141,142,145,164,182,185,190,195,197,214,215,220,223,224,226,228,229,230,233,237,238,],[72,72,72,72,166,72,72,72,72,72,72,209,72,72,72,72,72,72,72,72,72,72,72,72,]),'sentencia_if':([41,69,94,141,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'sentencia_switch':([41,69,94,141,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'ins_break':([41,69,94,141,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'ins_scan':([41,69,94,141,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'ins_while':([41,69,94,141,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'ins_for':([41,69,94,141,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'ins_continue':([41,69,94,141,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'ins_etiqueta':([41,69,94,141,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'ins_goto':([41,69,94,141,145,164,182,185,190,195,214,215,220,223,224,226,228,229,230,233,237,238,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'instruccion_for':([142,],[165,]),'expresiones':([171,],[179,]),'lista_case':([183,],[191,]),'caso':([183,191,],[192,203,]),'default_ins':([191,],[201,]),'lelseif':([200,],[211,]),'elseif':([200,211,],[212,222,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> globales','init',1,'p_init','gramatica.py',256),
  ('init -> empty','init',1,'p_init_empty','gramatica.py',260),
  ('globales -> globales iglobal','globales',2,'p_etiquetas_lista','gramatica.py',266),
  ('globales -> iglobal','globales',1,'p_etiquetas','gramatica.py',274),
  ('iglobal -> funcion','iglobal',1,'p_iglobal','gramatica.py',281),
  ('iglobal -> declaracion PTCOMA','iglobal',2,'p_iglobal','gramatica.py',282),
  ('empty -> <empty>','empty',0,'p_empty','gramatica.py',289),
  ('funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER','funcion',7,'p_funcion_s','gramatica.py',293),
  ('funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER','funcion',8,'p_f_parametros','gramatica.py',300),
  ('parametros -> parametros COMA parametro','parametros',3,'p_parametros_lista','gramatica.py',307),
  ('parametros -> parametro','parametros',1,'p_parametros','gramatica.py',315),
  ('parametro -> TIPO ID','parametro',2,'p_parametro','gramatica.py',322),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',331),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',339),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','gramatica.py',346),
  ('instruccion -> asignacion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',347),
  ('instruccion -> declaracion PTCOMA','instruccion',2,'p_instruccion','gramatica.py',348),
  ('instruccion -> sentencia_if','instruccion',1,'p_instruccion','gramatica.py',349),
  ('instruccion -> sentencia_switch','instruccion',1,'p_instruccion','gramatica.py',350),
  ('instruccion -> ins_break','instruccion',1,'p_instruccion','gramatica.py',351),
  ('instruccion -> ins_scan','instruccion',1,'p_instruccion','gramatica.py',352),
  ('instruccion -> ins_while','instruccion',1,'p_instruccion','gramatica.py',353),
  ('instruccion -> ins_for','instruccion',1,'p_instruccion','gramatica.py',354),
  ('instruccion -> ins_continue','instruccion',1,'p_instruccion','gramatica.py',355),
  ('instruccion -> ins_etiqueta','instruccion',1,'p_instruccion','gramatica.py',356),
  ('instruccion -> ins_goto','instruccion',1,'p_instruccion','gramatica.py',357),
  ('instruccion -> error','instruccion',1,'p_instruccion','gramatica.py',358),
  ('ins_etiqueta -> ID DOSP','ins_etiqueta',2,'p_ins_etiqueta','gramatica.py',367),
  ('ins_goto -> GOTO ID PTCOMA','ins_goto',3,'p_ins_goto','gramatica.py',374),
  ('ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER','ins_for',11,'p_ins_for','gramatica.py',383),
  ('instruccion_for -> asignacion','instruccion_for',1,'p_instruccion_for','gramatica.py',390),
  ('instruccion_for -> declaracion','instruccion_for',1,'p_instruccion_for','gramatica.py',391),
  ('ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','ins_while',7,'p_ins_while','gramatica.py',400),
  ('ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA','ins_while',9,'p_ins_do_while','gramatica.py',407),
  ('ins_continue -> CONTINUE PTCOMA','ins_continue',2,'p_continue','gramatica.py',414),
  ('sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER','sentencia_switch',8,'p_sentencia_switch','gramatica.py',422),
  ('sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER','sentencia_switch',7,'p_sentencia_switch_sc','gramatica.py',429),
  ('lista_case -> lista_case caso','lista_case',2,'p_lista_case','gramatica.py',435),
  ('lista_case -> caso','lista_case',1,'p_lista_case_s','gramatica.py',443),
  ('caso -> CASE expresion DOSP instrucciones','caso',4,'p_caso','gramatica.py',450),
  ('caso -> CASE expresion DOSP','caso',3,'p_caso_S','gramatica.py',456),
  ('default_ins -> DEFAULT DOSP instrucciones','default_ins',3,'p_default','gramatica.py',462),
  ('default_ins -> DEFAULT DOSP','default_ins',2,'p_default_S','gramatica.py',468),
  ('ins_break -> BREAK PTCOMA','ins_break',2,'p_break','gramatica.py',475),
  ('sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','sentencia_if',7,'p_sentencia_if','gramatica.py',483),
  ('sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER','sentencia_if',11,'p_sentencia_if_else','gramatica.py',490),
  ('sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER','sentencia_if',12,'p_sentencia_if_elif_else','gramatica.py',497),
  ('sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif','sentencia_if',8,'p_sentencia_if_elif','gramatica.py',504),
  ('lelseif -> lelseif elseif','lelseif',2,'p_lelseif','gramatica.py',511),
  ('lelseif -> elseif','lelseif',1,'p_lelseif_s','gramatica.py',519),
  ('elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','elseif',8,'p_elseif','gramatica.py',526),
  ('ins_scan -> SCAN PARIZQ CADENA COMA PAND ID PARDER PTCOMA','ins_scan',8,'p_scan','gramatica.py',534),
  ('imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA','imprimir_instr',7,'p_instruccion_imprimir','gramatica.py',548),
  ('imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA','imprimir_instr',5,'p_instruccion_imprimir_cad','gramatica.py',557),
  ('asignacion -> ID IGUAL expresion','asignacion',3,'p_asignacion','gramatica.py',567),
  ('asignacion -> ID MAS MAS','asignacion',3,'p_incre_decre','gramatica.py',576),
  ('asignacion -> ID MENOS MENOS','asignacion',3,'p_incre_decre','gramatica.py',577),
  ('asignacion -> ID ASUMA expresion','asignacion',3,'p_operaciones_asignacion','gramatica.py',602),
  ('asignacion -> ID ARESTA expresion','asignacion',3,'p_operaciones_asignacion','gramatica.py',603),
  ('asignacion -> ID MULTIPLICATIVA expresion','asignacion',3,'p_operaciones_asignacion','gramatica.py',604),
  ('asignacion -> ID DIVIDIDA expresion','asignacion',3,'p_operaciones_asignacion','gramatica.py',605),
  ('asignacion -> ID ARESTO expresion','asignacion',3,'p_operaciones_asignacion','gramatica.py',606),
  ('asignacion -> ID ABOR expresion','asignacion',3,'p_operaciones_asignacion','gramatica.py',607),
  ('asignacion -> ID APAND expresion','asignacion',3,'p_operaciones_asignacion','gramatica.py',608),
  ('asignacion -> ID ASHIFTD expresion','asignacion',3,'p_operaciones_asignacion','gramatica.py',609),
  ('asignacion -> ID ASHIFTI expresion','asignacion',3,'p_operaciones_asignacion','gramatica.py',610),
  ('asignacion -> ID AXORR expresion','asignacion',3,'p_operaciones_asignacion','gramatica.py',611),
  ('declaracion -> TIPO lista_id','declaracion',2,'p_declaracion','gramatica.py',675),
  ('declaracion -> TIPO lista_id IGUAL expresion','declaracion',4,'p_declaracion_asigna','gramatica.py',682),
  ('lista_id -> lista_id COMA ID','lista_id',3,'p_lista','gramatica.py',689),
  ('lista_id -> ID','lista_id',1,'p_lista_id','gramatica.py',697),
  ('TIPO -> INT','TIPO',1,'p_tipo_dato','gramatica.py',704),
  ('TIPO -> FLOAT','TIPO',1,'p_tipo_dato','gramatica.py',705),
  ('TIPO -> CHAR','TIPO',1,'p_tipo_dato','gramatica.py',706),
  ('TIPO -> VOID','TIPO',1,'p_tipo_dato','gramatica.py',707),
  ('expresiones -> expresiones COMA expresion','expresiones',3,'p_expresiones','gramatica.py',725),
  ('expresiones -> expresion','expresiones',1,'p_expresiones_s','gramatica.py',733),
  ('expresion -> primitiva','expresion',1,'p_expresion','gramatica.py',741),
  ('expresion -> expresion_numerica','expresion',1,'p_expresion','gramatica.py',742),
  ('expresion -> expresion_relacional','expresion',1,'p_expresion','gramatica.py',743),
  ('expresion -> expresion_unaria','expresion',1,'p_expresion','gramatica.py',744),
  ('expresion -> expresion_logica','expresion',1,'p_expresion','gramatica.py',745),
  ('expresion -> expresion_bit_bit','expresion',1,'p_expresion','gramatica.py',746),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_parentesis','gramatica.py',753),
  ('expresion_unaria -> MENOS expresion','expresion_unaria',2,'p_expresion_unaria','gramatica.py',758),
  ('expresion_logica -> expresion AND expresion','expresion_logica',3,'p_expresion_logica','gramatica.py',767),
  ('expresion_logica -> expresion OR expresion','expresion_logica',3,'p_expresion_logica','gramatica.py',768),
  ('expresion_logica -> expresion XOR expresion','expresion_logica',3,'p_expresion_logica','gramatica.py',769),
  ('expresion_logica -> NOT expresion','expresion_logica',2,'p_expresion_negacion','gramatica.py',790),
  ('expresion_bit_bit -> expresion PAND expresion','expresion_bit_bit',3,'p_expresion_bit_bit','gramatica.py',799),
  ('expresion_bit_bit -> expresion BOR expresion','expresion_bit_bit',3,'p_expresion_bit_bit','gramatica.py',800),
  ('expresion_bit_bit -> expresion XORR expresion','expresion_bit_bit',3,'p_expresion_bit_bit','gramatica.py',801),
  ('expresion_bit_bit -> expresion SHIFTI expresion','expresion_bit_bit',3,'p_expresion_bit_bit','gramatica.py',802),
  ('expresion_bit_bit -> expresion SHIFTD expresion','expresion_bit_bit',3,'p_expresion_bit_bit','gramatica.py',803),
  ('expresion_bit_bit -> NOTR expresion','expresion_bit_bit',2,'p_expresion_negacion_bit','gramatica.py',834),
  ('expresion_relacional -> expresion MENQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',843),
  ('expresion_relacional -> expresion MAYQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',844),
  ('expresion_relacional -> expresion MEIQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',845),
  ('expresion_relacional -> expresion MAIQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',846),
  ('expresion_relacional -> expresion IGUALQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',847),
  ('expresion_relacional -> expresion NIGUALQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',848),
  ('expresion_numerica -> expresion MAS expresion','expresion_numerica',3,'p_expresion_numerica','gramatica.py',883),
  ('expresion_numerica -> expresion MENOS expresion','expresion_numerica',3,'p_expresion_numerica','gramatica.py',884),
  ('expresion_numerica -> expresion POR expresion','expresion_numerica',3,'p_expresion_numerica','gramatica.py',885),
  ('expresion_numerica -> expresion DIVIDIDO expresion','expresion_numerica',3,'p_expresion_numerica','gramatica.py',886),
  ('expresion_numerica -> expresion RESTO expresion','expresion_numerica',3,'p_expresion_numerica','gramatica.py',887),
  ('primitiva -> ENTERO','primitiva',1,'p_expresion_primitiva','gramatica.py',919),
  ('primitiva -> DECIMAL','primitiva',1,'p_expresion_primitiva','gramatica.py',920),
  ('primitiva -> CADENA','primitiva',1,'p_expresion_primitiva','gramatica.py',921),
  ('primitiva -> CADENAR_CHAR','primitiva',1,'p_expresion_primitiva','gramatica.py',922),
  ('primitiva -> ID','primitiva',1,'p_expresion_primitiva','gramatica.py',923),
]
