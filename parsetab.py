
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMArightIGUALMULTIPLICATIVADIVIDIDAARESTOASUMAARESTAASHIFTDASHIFTIAPANDAXORRABORrightUNARIOleftORleftANDleftBORleftXORRleftPANDleftIGUALQUENIGUALQUEleftMENQUEMAYQUEMEIQUEMAIQUEleftSHIFTDSHIFTIleftMASMENOSleftPORDIVIDIDORESTOrightUMENOSNOTNOTRleftPARIZQPARDERCORIZQCORDERPUNTOFLECHAABOR AND APAND ARESTA ARESTO ASHIFTD ASHIFTI ASUMA AXORR BOR CADENA CADENAR_CHAR CHAR COMA CORDER CORIZQ DECIMAL DIVIDIDA DIVIDIDO DOSP ELSE ENTERO FLECHA FLOAT ID IF IGUAL IGUALQUE IMPRIMIR INT LLAVDER LLAVIZQ MAIQUE MAS MAYQUE MEIQUE MENOS MENQUE MULTIPLICATIVA NIGUALQUE NOT NOTR OR PAND PARDER PARIZQ POR PTCOMA PUNTO RESTO SHIFTD SHIFTI UNARIO VOID XOR XORRinit            : globalesinit            : emptyglobales    : globales iglobalglobales    : iglobal  iglobal : funcion \n                | declaracion empty :funcion    : TIPO ID PARIZQ PARDER LLAVIZQ  instrucciones LLAVDER funcion    : TIPO ID PARIZQ parametros PARDER LLAVIZQ  instrucciones LLAVDER parametros    : parametros COMA parametroparametros    : parametro parametro : TIPO IDinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr \n                        | asignacion \n                        | declaracion\n                        | sentencia_if\n                        | error  sentencia_if  : IF PARIZQ expresion PARDER LLAVIZQ  instrucciones LLAVDERsentencia_if  : IF PARIZQ expresion PARDER LLAVIZQ  instrucciones LLAVDER ELSE  LLAVIZQ  instrucciones LLAVDER sentencia_if  : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDERsentencia_if  : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseiflelseif    : lelseif elseiflelseif    : elseif elseif : ELSE IF PARIZQ expresion PARDER LLAVIZQ  instrucciones LLAVDER imprimir_instr     : IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMAimprimir_instr     : IMPRIMIR PARIZQ CADENA PARDER PTCOMAasignacion : ID IGUAL expresion PTCOMA asignacion   :   ID ASUMA expresion PTCOMA\n                    |   ID ARESTA expresion  PTCOMA\n                    |   ID MULTIPLICATIVA expresion PTCOMA\n                    |   ID DIVIDIDA expresion PTCOMA\n                    |   ID ARESTO expresion PTCOMA \n                    |   ID ABOR expresion  PTCOMA\n                    |   ID APAND expresion PTCOMA\n                    |   ID ASHIFTD expresion PTCOMA\n                    |   ID ASHIFTI expresion PTCOMA\n                    |   ID AXORR expresion PTCOMAdeclaracion : TIPO lista_id PTCOMAdeclaracion : TIPO lista_id IGUAL expresion  PTCOMAlista_id    : lista_id COMA IDlista_id    : ID TIPO : INT \n                | FLOAT \n                | CHAR \n                | VOID expresiones : expresiones COMA expresion expresiones : expresion expresion : primitiva \n                 | expresion_numerica \n                 | expresion_relacional\n                 | expresion_unaria\n                 | expresion_logica \n                 | expresion_bit_bit expresion : PARIZQ expresion PARDER expresion_unaria   :   MENOS expresion %prec UMENOSexpresion_logica   : expresion AND expresion \n                          | expresion OR expresion\n                          | expresion XOR expresion expresion_logica   :   NOT expresion %prec NOTexpresion_bit_bit  : expresion PAND expresion \n                          | expresion BOR expresion\n                          | expresion XORR expresion \n                          | expresion SHIFTI expresion\n                          | expresion SHIFTD expresionexpresion_bit_bit   :   NOTR expresion %prec NOTRexpresion_relacional :   expresion MENQUE expresion \n                            |   expresion MAYQUE expresion \n                            |   expresion MEIQUE expresion\n                            |   expresion MAIQUE expresion\n                            |   expresion IGUALQUE expresion \n                            |   expresion NIGUALQUE expresion expresion_numerica   :   expresion MAS expresion \n                            |   expresion MENOS expresion \n                            |   expresion POR expresion\n                            |   expresion DIVIDIDO expresion\n                            |   expresion RESTO expresionprimitiva : ENTERO\n                 | DECIMAL\n                 | CADENA\n                 | CADENAR_CHAR\n                 | ID '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,12,16,44,113,131,],[-7,0,-1,-2,-4,-5,-6,-3,-40,-41,-8,-9,]),'INT':([0,2,4,5,6,12,15,16,41,43,44,70,71,72,73,74,75,76,79,113,114,117,131,132,133,134,135,136,137,138,139,140,141,142,148,149,152,154,155,157,158,160,162,164,165,167,168,170,171,172,173,],[8,8,-4,-5,-6,-3,8,-40,8,8,-41,8,-14,-15,-16,-17,-18,-19,8,-8,-13,8,-9,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-28,8,8,-27,-20,-23,-25,8,-24,8,8,-21,8,-22,8,8,-26,]),'FLOAT':([0,2,4,5,6,12,15,16,41,43,44,70,71,72,73,74,75,76,79,113,114,117,131,132,133,134,135,136,137,138,139,140,141,142,148,149,152,154,155,157,158,160,162,164,165,167,168,170,171,172,173,],[9,9,-4,-5,-6,-3,9,-40,9,9,-41,9,-14,-15,-16,-17,-18,-19,9,-8,-13,9,-9,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-28,9,9,-27,-20,-23,-25,9,-24,9,9,-21,9,-22,9,9,-26,]),'CHAR':([0,2,4,5,6,12,15,16,41,43,44,70,71,72,73,74,75,76,79,113,114,117,131,132,133,134,135,136,137,138,139,140,141,142,148,149,152,154,155,157,158,160,162,164,165,167,168,170,171,172,173,],[10,10,-4,-5,-6,-3,10,-40,10,10,-41,10,-14,-15,-16,-17,-18,-19,10,-8,-13,10,-9,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-28,10,10,-27,-20,-23,-25,10,-24,10,10,-21,10,-22,10,10,-26,]),'VOID':([0,2,4,5,6,12,15,16,41,43,44,70,71,72,73,74,75,76,79,113,114,117,131,132,133,134,135,136,137,138,139,140,141,142,148,149,152,154,155,157,158,160,162,164,165,167,168,170,171,172,173,],[11,11,-4,-5,-6,-3,11,-40,11,11,-41,11,-14,-15,-16,-17,-18,-19,11,-8,-13,11,-9,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-28,11,11,-27,-20,-23,-25,11,-24,11,11,-21,11,-22,11,11,-26,]),'ID':([7,8,9,10,11,16,17,18,19,30,36,37,38,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,70,71,72,73,74,75,76,79,102,103,104,105,106,107,108,109,110,111,112,114,116,117,132,133,134,135,136,137,138,139,140,141,142,143,148,149,150,152,154,155,157,158,160,162,163,164,165,167,168,170,171,172,173,],[13,-44,-45,-46,-47,-40,35,39,40,35,35,35,35,69,-41,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,101,69,-14,-15,-16,-17,-18,-19,69,35,35,35,35,35,35,35,35,35,35,35,-13,35,69,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,35,-28,69,35,69,-27,-20,-23,-25,69,-24,35,69,69,-21,69,-22,69,69,-26,]),'PARIZQ':([13,17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,77,78,102,103,104,105,106,107,108,109,110,111,112,116,143,150,159,163,],[15,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,115,116,30,30,30,30,30,30,30,30,30,30,30,30,30,30,163,30,]),'PTCOMA':([13,14,23,24,25,26,27,28,29,31,32,33,34,35,39,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,118,119,120,121,122,123,124,125,126,127,128,144,151,],[-43,16,44,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,-42,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,-72,-73,-58,-59,-60,-62,-63,-64,-65,-66,-56,-43,132,133,134,135,136,137,138,139,140,141,142,148,154,]),'IGUAL':([13,14,39,69,101,],[-43,17,-42,102,-43,]),'COMA':([13,14,21,22,24,25,26,27,28,29,31,32,33,34,35,39,40,65,66,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,129,146,147,153,],[-43,18,43,-11,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,-42,-12,-57,-61,-67,-10,-74,-75,-76,-77,-78,-68,-69,-70,-71,-72,-73,-58,-59,-60,-62,-63,-64,-65,-66,-56,-43,143,150,-49,-48,]),'PARDER':([15,21,22,24,25,26,27,28,29,31,32,33,34,35,40,64,65,66,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,129,130,146,147,153,166,],[20,42,-11,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,-12,100,-57,-61,-67,-10,-74,-75,-76,-77,-78,-68,-69,-70,-71,-72,-73,-58,-59,-60,-62,-63,-64,-65,-66,-56,144,145,151,-49,-48,169,]),'LLAVDER':([16,44,70,71,72,73,74,75,76,114,117,132,133,134,135,136,137,138,139,140,141,142,148,152,154,155,157,158,162,164,167,168,170,172,173,],[-40,-41,113,-14,-15,-16,-17,-18,-19,-13,131,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-28,155,-27,-20,-23,-25,-24,167,-21,170,-22,173,-26,]),'error':([16,41,44,70,71,72,73,74,75,76,79,114,117,132,133,134,135,136,137,138,139,140,141,142,148,149,152,154,155,157,158,160,162,164,165,167,168,170,171,172,173,],[-40,76,-41,76,-14,-15,-16,-17,-18,-19,76,-13,76,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-28,76,76,-27,-20,-23,-25,76,-24,76,76,-21,76,-22,76,76,-26,]),'IMPRIMIR':([16,41,44,70,71,72,73,74,75,76,79,114,117,132,133,134,135,136,137,138,139,140,141,142,148,149,152,154,155,157,158,160,162,164,165,167,168,170,171,172,173,],[-40,77,-41,77,-14,-15,-16,-17,-18,-19,77,-13,77,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-28,77,77,-27,-20,-23,-25,77,-24,77,77,-21,77,-22,77,77,-26,]),'IF':([16,41,44,70,71,72,73,74,75,76,79,114,117,132,133,134,135,136,137,138,139,140,141,142,148,149,152,154,155,156,157,158,160,161,162,164,165,167,168,170,171,172,173,],[-40,78,-41,78,-14,-15,-16,-17,-18,-19,78,-13,78,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-28,78,78,-27,-20,159,-23,-25,78,159,-24,78,78,-21,78,-22,78,78,-26,]),'ENTERO':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DECIMAL':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'CADENA':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,115,116,143,150,163,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,129,33,33,33,33,]),'CADENAR_CHAR':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'MENOS':([17,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,116,118,119,120,121,122,123,124,125,126,127,128,130,143,147,150,153,163,166,],[36,46,-50,-51,-52,-53,-54,-55,36,-79,-80,-81,-82,-83,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,46,-57,-61,-67,-74,-75,-76,-77,-78,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-56,36,36,36,36,36,36,36,36,36,36,36,36,46,46,46,46,46,46,46,46,46,46,46,46,36,46,36,46,36,46,]),'NOT':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'NOTR':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'LLAVIZQ':([20,42,145,156,161,169,],[41,79,149,160,165,171,]),'MAS':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[45,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,45,-57,-61,-67,-74,-75,-76,-77,-78,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-56,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'POR':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[47,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,47,-57,-61,-67,47,47,-76,-77,-78,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-56,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'DIVIDIDO':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[48,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,48,-57,-61,-67,48,48,-76,-77,-78,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-56,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'RESTO':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[49,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,49,-57,-61,-67,49,49,-76,-77,-78,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-56,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'MENQUE':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[50,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,50,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,50,50,50,50,50,50,50,50,-65,-66,-56,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'MAYQUE':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[51,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,51,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,51,51,51,51,51,51,51,51,-65,-66,-56,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'MEIQUE':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[52,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,52,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,52,52,52,52,52,52,52,52,-65,-66,-56,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'MAIQUE':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[53,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,53,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,53,53,53,53,53,53,53,53,-65,-66,-56,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'IGUALQUE':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[54,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,54,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,-72,-73,54,54,54,54,54,54,-65,-66,-56,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NIGUALQUE':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[55,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,55,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,-72,-73,55,55,55,55,55,55,-65,-66,-56,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'AND':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[56,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,56,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,-72,-73,-58,56,56,-62,-63,-64,-65,-66,-56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'OR':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[57,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,57,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,-72,-73,-58,-59,57,-62,-63,-64,-65,-66,-56,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'XOR':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[58,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,58,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,-72,-73,-58,-59,58,-62,-63,-64,-65,-66,-56,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'PAND':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[59,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,59,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,-72,-73,59,59,59,-62,59,59,-65,-66,-56,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'BOR':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[60,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,60,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,-72,-73,60,60,60,-62,-63,-64,-65,-66,-56,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'XORR':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[61,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,61,-57,-61,-67,-74,-75,-76,-77,-78,-68,-69,-70,-71,-72,-73,61,61,61,-62,61,-64,-65,-66,-56,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'SHIFTI':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[62,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,62,-57,-61,-67,-74,-75,-76,-77,-78,62,62,62,62,62,62,62,62,62,62,62,62,-65,-66,-56,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'SHIFTD':([23,24,25,26,27,28,29,31,32,33,34,35,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,],[63,-50,-51,-52,-53,-54,-55,-79,-80,-81,-82,-83,63,-57,-61,-67,-74,-75,-76,-77,-78,63,63,63,63,63,63,63,63,63,63,63,63,-65,-66,-56,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'ASUMA':([69,],[103,]),'ARESTA':([69,],[104,]),'MULTIPLICATIVA':([69,],[105,]),'DIVIDIDA':([69,],[106,]),'ARESTO':([69,],[107,]),'ABOR':([69,],[108,]),'APAND':([69,],[109,]),'ASHIFTD':([69,],[110,]),'ASHIFTI':([69,],[111,]),'AXORR':([69,],[112,]),'ELSE':([155,157,158,162,173,],[156,161,-25,-24,-26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'globales':([0,],[2,]),'empty':([0,],[3,]),'iglobal':([0,2,],[4,12,]),'funcion':([0,2,],[5,5,]),'declaracion':([0,2,41,70,79,117,149,152,160,164,165,168,171,172,],[6,6,74,74,74,74,74,74,74,74,74,74,74,74,]),'TIPO':([0,2,15,41,43,70,79,117,149,152,160,164,165,168,171,172,],[7,7,19,68,19,68,68,68,68,68,68,68,68,68,68,68,]),'lista_id':([7,68,],[14,14,]),'parametros':([15,],[21,]),'parametro':([15,43,],[22,80,]),'expresion':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[23,64,65,66,67,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,118,119,120,121,122,123,124,125,126,127,128,130,147,153,166,]),'primitiva':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'expresion_numerica':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'expresion_relacional':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expresion_unaria':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expresion_logica':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'expresion_bit_bit':([17,30,36,37,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,102,103,104,105,106,107,108,109,110,111,112,116,143,150,163,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'instrucciones':([41,79,149,160,165,171,],[70,117,152,164,168,172,]),'instruccion':([41,70,79,117,149,152,160,164,165,168,171,172,],[71,114,71,114,71,114,71,114,71,114,71,114,]),'imprimir_instr':([41,70,79,117,149,152,160,164,165,168,171,172,],[72,72,72,72,72,72,72,72,72,72,72,72,]),'asignacion':([41,70,79,117,149,152,160,164,165,168,171,172,],[73,73,73,73,73,73,73,73,73,73,73,73,]),'sentencia_if':([41,70,79,117,149,152,160,164,165,168,171,172,],[75,75,75,75,75,75,75,75,75,75,75,75,]),'expresiones':([143,],[146,]),'lelseif':([155,],[157,]),'elseif':([155,157,],[158,162,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> globales','init',1,'p_init','gramatica.py',237),
  ('init -> empty','init',1,'p_init_empty','gramatica.py',241),
  ('globales -> globales iglobal','globales',2,'p_etiquetas_lista','gramatica.py',247),
  ('globales -> iglobal','globales',1,'p_etiquetas','gramatica.py',255),
  ('iglobal -> funcion','iglobal',1,'p_iglobal','gramatica.py',262),
  ('iglobal -> declaracion','iglobal',1,'p_iglobal','gramatica.py',263),
  ('empty -> <empty>','empty',0,'p_empty','gramatica.py',270),
  ('funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER','funcion',7,'p_funcion_s','gramatica.py',274),
  ('funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER','funcion',8,'p_f_parametros','gramatica.py',281),
  ('parametros -> parametros COMA parametro','parametros',3,'p_parametros_lista','gramatica.py',288),
  ('parametros -> parametro','parametros',1,'p_parametros','gramatica.py',296),
  ('parametro -> TIPO ID','parametro',2,'p_parametro','gramatica.py',303),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',312),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',320),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','gramatica.py',327),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','gramatica.py',328),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','gramatica.py',329),
  ('instruccion -> sentencia_if','instruccion',1,'p_instruccion','gramatica.py',330),
  ('instruccion -> error','instruccion',1,'p_instruccion','gramatica.py',331),
  ('sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','sentencia_if',7,'p_sentencia_if','gramatica.py',339),
  ('sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER','sentencia_if',11,'p_sentencia_if_else','gramatica.py',346),
  ('sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER','sentencia_if',12,'p_sentencia_if_elif_else','gramatica.py',353),
  ('sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif','sentencia_if',8,'p_sentencia_if_elif','gramatica.py',360),
  ('lelseif -> lelseif elseif','lelseif',2,'p_lelseif','gramatica.py',367),
  ('lelseif -> elseif','lelseif',1,'p_lelseif_s','gramatica.py',375),
  ('elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','elseif',8,'p_elseif','gramatica.py',382),
  ('imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA','imprimir_instr',7,'p_instruccion_imprimir','gramatica.py',390),
  ('imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA','imprimir_instr',5,'p_instruccion_imprimir_cad','gramatica.py',399),
  ('asignacion -> ID IGUAL expresion PTCOMA','asignacion',4,'p_asignacion','gramatica.py',409),
  ('asignacion -> ID ASUMA expresion PTCOMA','asignacion',4,'p_operaciones_asignacion','gramatica.py',417),
  ('asignacion -> ID ARESTA expresion PTCOMA','asignacion',4,'p_operaciones_asignacion','gramatica.py',418),
  ('asignacion -> ID MULTIPLICATIVA expresion PTCOMA','asignacion',4,'p_operaciones_asignacion','gramatica.py',419),
  ('asignacion -> ID DIVIDIDA expresion PTCOMA','asignacion',4,'p_operaciones_asignacion','gramatica.py',420),
  ('asignacion -> ID ARESTO expresion PTCOMA','asignacion',4,'p_operaciones_asignacion','gramatica.py',421),
  ('asignacion -> ID ABOR expresion PTCOMA','asignacion',4,'p_operaciones_asignacion','gramatica.py',422),
  ('asignacion -> ID APAND expresion PTCOMA','asignacion',4,'p_operaciones_asignacion','gramatica.py',423),
  ('asignacion -> ID ASHIFTD expresion PTCOMA','asignacion',4,'p_operaciones_asignacion','gramatica.py',424),
  ('asignacion -> ID ASHIFTI expresion PTCOMA','asignacion',4,'p_operaciones_asignacion','gramatica.py',425),
  ('asignacion -> ID AXORR expresion PTCOMA','asignacion',4,'p_operaciones_asignacion','gramatica.py',426),
  ('declaracion -> TIPO lista_id PTCOMA','declaracion',3,'p_declaracion','gramatica.py',490),
  ('declaracion -> TIPO lista_id IGUAL expresion PTCOMA','declaracion',5,'p_declaracion_asigna','gramatica.py',497),
  ('lista_id -> lista_id COMA ID','lista_id',3,'p_lista','gramatica.py',504),
  ('lista_id -> ID','lista_id',1,'p_lista_id','gramatica.py',512),
  ('TIPO -> INT','TIPO',1,'p_tipo_dato','gramatica.py',519),
  ('TIPO -> FLOAT','TIPO',1,'p_tipo_dato','gramatica.py',520),
  ('TIPO -> CHAR','TIPO',1,'p_tipo_dato','gramatica.py',521),
  ('TIPO -> VOID','TIPO',1,'p_tipo_dato','gramatica.py',522),
  ('expresiones -> expresiones COMA expresion','expresiones',3,'p_expresiones','gramatica.py',540),
  ('expresiones -> expresion','expresiones',1,'p_expresiones_s','gramatica.py',548),
  ('expresion -> primitiva','expresion',1,'p_expresion','gramatica.py',556),
  ('expresion -> expresion_numerica','expresion',1,'p_expresion','gramatica.py',557),
  ('expresion -> expresion_relacional','expresion',1,'p_expresion','gramatica.py',558),
  ('expresion -> expresion_unaria','expresion',1,'p_expresion','gramatica.py',559),
  ('expresion -> expresion_logica','expresion',1,'p_expresion','gramatica.py',560),
  ('expresion -> expresion_bit_bit','expresion',1,'p_expresion','gramatica.py',561),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_parentesis','gramatica.py',568),
  ('expresion_unaria -> MENOS expresion','expresion_unaria',2,'p_expresion_unaria','gramatica.py',573),
  ('expresion_logica -> expresion AND expresion','expresion_logica',3,'p_expresion_logica','gramatica.py',582),
  ('expresion_logica -> expresion OR expresion','expresion_logica',3,'p_expresion_logica','gramatica.py',583),
  ('expresion_logica -> expresion XOR expresion','expresion_logica',3,'p_expresion_logica','gramatica.py',584),
  ('expresion_logica -> NOT expresion','expresion_logica',2,'p_expresion_negacion','gramatica.py',605),
  ('expresion_bit_bit -> expresion PAND expresion','expresion_bit_bit',3,'p_expresion_bit_bit','gramatica.py',614),
  ('expresion_bit_bit -> expresion BOR expresion','expresion_bit_bit',3,'p_expresion_bit_bit','gramatica.py',615),
  ('expresion_bit_bit -> expresion XORR expresion','expresion_bit_bit',3,'p_expresion_bit_bit','gramatica.py',616),
  ('expresion_bit_bit -> expresion SHIFTI expresion','expresion_bit_bit',3,'p_expresion_bit_bit','gramatica.py',617),
  ('expresion_bit_bit -> expresion SHIFTD expresion','expresion_bit_bit',3,'p_expresion_bit_bit','gramatica.py',618),
  ('expresion_bit_bit -> NOTR expresion','expresion_bit_bit',2,'p_expresion_negacion_bit','gramatica.py',649),
  ('expresion_relacional -> expresion MENQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',658),
  ('expresion_relacional -> expresion MAYQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',659),
  ('expresion_relacional -> expresion MEIQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',660),
  ('expresion_relacional -> expresion MAIQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',661),
  ('expresion_relacional -> expresion IGUALQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',662),
  ('expresion_relacional -> expresion NIGUALQUE expresion','expresion_relacional',3,'p_expresion_relacional','gramatica.py',663),
  ('expresion_numerica -> expresion MAS expresion','expresion_numerica',3,'p_expresion_numerica','gramatica.py',698),
  ('expresion_numerica -> expresion MENOS expresion','expresion_numerica',3,'p_expresion_numerica','gramatica.py',699),
  ('expresion_numerica -> expresion POR expresion','expresion_numerica',3,'p_expresion_numerica','gramatica.py',700),
  ('expresion_numerica -> expresion DIVIDIDO expresion','expresion_numerica',3,'p_expresion_numerica','gramatica.py',701),
  ('expresion_numerica -> expresion RESTO expresion','expresion_numerica',3,'p_expresion_numerica','gramatica.py',702),
  ('primitiva -> ENTERO','primitiva',1,'p_expresion_primitiva','gramatica.py',734),
  ('primitiva -> DECIMAL','primitiva',1,'p_expresion_primitiva','gramatica.py',735),
  ('primitiva -> CADENA','primitiva',1,'p_expresion_primitiva','gramatica.py',736),
  ('primitiva -> CADENAR_CHAR','primitiva',1,'p_expresion_primitiva','gramatica.py',737),
  ('primitiva -> ID','primitiva',1,'p_expresion_primitiva','gramatica.py',738),
]
