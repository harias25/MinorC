Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    UNARIO

Grammar

Rule 0     S' -> init
Rule 1     init -> globales
Rule 2     init -> empty
Rule 3     globales -> globales iglobal
Rule 4     globales -> iglobal
Rule 5     iglobal -> funcion
Rule 6     iglobal -> declaracion PTCOMA
Rule 7     iglobal -> definicion_struct
Rule 8     definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA
Rule 9     declaraciones -> declaraciones declaracion PTCOMA
Rule 10    declaraciones -> declaracion PTCOMA
Rule 11    empty -> <empty>
Rule 12    funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
Rule 13    funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
Rule 14    parametros -> parametros COMA parametro
Rule 15    parametros -> parametro
Rule 16    parametro -> TIPO ID
Rule 17    instrucciones -> instrucciones instruccion
Rule 18    instrucciones -> instruccion
Rule 19    instruccion -> imprimir_instr
Rule 20    instruccion -> asignacion PTCOMA
Rule 21    instruccion -> declaracion PTCOMA
Rule 22    instruccion -> sentencia_if
Rule 23    instruccion -> sentencia_switch
Rule 24    instruccion -> ins_break
Rule 25    instruccion -> ins_while
Rule 26    instruccion -> ins_for
Rule 27    instruccion -> ins_continue
Rule 28    instruccion -> ins_etiqueta
Rule 29    instruccion -> ins_goto
Rule 30    instruccion -> declaracion_struct PTCOMA
Rule 31    instruccion -> llamada PTCOMA
Rule 32    instruccion -> ins_return
Rule 33    instruccion -> error
Rule 34    llamada -> ID PARIZQ expresiones PARDER
Rule 35    llamada -> ID PARIZQ PARDER
Rule 36    ins_return -> RETURN expresion PTCOMA
Rule 37    declaracion_struct -> ID lista_id
Rule 38    asignacion -> acceso_struct IGUAL expresion
Rule 39    acceso_struct -> ID PUNTO ID
Rule 40    ins_etiqueta -> ID DOSP
Rule 41    ins_goto -> GOTO ID PTCOMA
Rule 42    ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
Rule 43    instruccion_for -> asignacion
Rule 44    instruccion_for -> declaracion
Rule 45    ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 46    ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
Rule 47    ins_continue -> CONTINUE PTCOMA
Rule 48    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
Rule 49    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
Rule 50    lista_case -> lista_case caso
Rule 51    lista_case -> caso
Rule 52    caso -> CASE expresion DOSP instrucciones
Rule 53    caso -> CASE expresion DOSP
Rule 54    default_ins -> DEFAULT DOSP instrucciones
Rule 55    default_ins -> DEFAULT DOSP
Rule 56    ins_break -> BREAK PTCOMA
Rule 57    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 58    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 59    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
Rule 60    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
Rule 61    lelseif -> lelseif elseif
Rule 62    lelseif -> elseif
Rule 63    elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 64    imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
Rule 65    imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA
Rule 66    asignacion -> ID IGUAL expresion
Rule 67    asignacion -> acceso_lista IGUAL expresion
Rule 68    asignacion -> ID IGUAL SCAN PARIZQ PARDER
Rule 69    asignacion -> ID MAS MAS
Rule 70    asignacion -> ID MENOS MENOS
Rule 71    asignacion -> ID ASUMA expresion
Rule 72    asignacion -> ID ARESTA expresion
Rule 73    asignacion -> ID MULTIPLICATIVA expresion
Rule 74    asignacion -> ID DIVIDIDA expresion
Rule 75    asignacion -> ID ARESTO expresion
Rule 76    asignacion -> ID ABOR expresion
Rule 77    asignacion -> ID APAND expresion
Rule 78    asignacion -> ID ASHIFTD expresion
Rule 79    asignacion -> ID ASHIFTI expresion
Rule 80    asignacion -> ID AXORR expresion
Rule 81    accesos -> accesos acceso
Rule 82    accesos -> acceso
Rule 83    acceso -> CORIZQ expresion CORDER
Rule 84    acceso_lista -> ID accesos
Rule 85    declaracion -> TIPO lista_id
Rule 86    declaracion -> TIPO lista_id IGUAL expresion
Rule 87    declaracion -> TIPO lista_id IGUAL SCAN PARIZQ PARDER
Rule 88    lista_id -> lista_id COMA tipo_var
Rule 89    lista_id -> tipo_var
Rule 90    tipo_var -> ID
Rule 91    tipo_var -> acceso_lista
Rule 92    TIPO -> INT
Rule 93    TIPO -> FLOAT
Rule 94    TIPO -> CHAR
Rule 95    TIPO -> DOOBLE
Rule 96    TIPO -> VOID
Rule 97    expresiones -> expresiones COMA expresion
Rule 98    expresiones -> expresion
Rule 99    expresion -> primitiva
Rule 100   expresion -> expresion_numerica
Rule 101   expresion -> expresion_relacional
Rule 102   expresion -> expresion_unaria
Rule 103   expresion -> expresion_logica
Rule 104   expresion -> expresion_bit_bit
Rule 105   expresion -> PARIZQ expresion PARDER
Rule 106   expresion_unaria -> MENOS expresion
Rule 107   expresion_logica -> expresion AND expresion
Rule 108   expresion_logica -> expresion OR expresion
Rule 109   expresion_logica -> expresion XOR expresion
Rule 110   expresion_logica -> NOT expresion
Rule 111   expresion_bit_bit -> expresion PAND expresion
Rule 112   expresion_bit_bit -> expresion BOR expresion
Rule 113   expresion_bit_bit -> expresion XORR expresion
Rule 114   expresion_bit_bit -> expresion SHIFTI expresion
Rule 115   expresion_bit_bit -> expresion SHIFTD expresion
Rule 116   expresion_bit_bit -> NOTR expresion
Rule 117   expresion_relacional -> expresion MENQUE expresion
Rule 118   expresion_relacional -> expresion MAYQUE expresion
Rule 119   expresion_relacional -> expresion MEIQUE expresion
Rule 120   expresion_relacional -> expresion MAIQUE expresion
Rule 121   expresion_relacional -> expresion IGUALQUE expresion
Rule 122   expresion_relacional -> expresion NIGUALQUE expresion
Rule 123   expresion_numerica -> expresion MAS expresion
Rule 124   expresion_numerica -> expresion MENOS expresion
Rule 125   expresion_numerica -> expresion POR expresion
Rule 126   expresion_numerica -> expresion DIVIDIDO expresion
Rule 127   expresion_numerica -> expresion RESTO expresion
Rule 128   primitiva -> ENTERO
Rule 129   primitiva -> DECIMAL
Rule 130   primitiva -> CADENA
Rule 131   primitiva -> CADENAR_CHAR
Rule 132   primitiva -> ID
Rule 133   primitiva -> acceso_struct
Rule 134   primitiva -> llamada
Rule 135   primitiva -> acceso_lista
Rule 136   primitiva -> array
Rule 137   array -> LLAVIZQ expresiones LLAVDER

Terminals, with rules where they appear

ABOR                 : 76
AND                  : 107
APAND                : 77
ARESTA               : 72
ARESTO               : 75
ASHIFTD              : 78
ASHIFTI              : 79
ASUMA                : 71
AXORR                : 80
BOR                  : 112
BREAK                : 56
CADENA               : 64 65 130
CADENAR_CHAR         : 131
CASE                 : 52 53
CHAR                 : 94
COMA                 : 14 64 88 97
CONTINUE             : 47
CORDER               : 83
CORIZQ               : 83
DECIMAL              : 129
DEFAULT              : 54 55
DIVIDIDA             : 74
DIVIDIDO             : 126
DO                   : 46
DOOBLE               : 95
DOSP                 : 40 52 53 54 55
ELSE                 : 58 59 63
ENTERO               : 128
FLOAT                : 93
FOR                  : 42
GOTO                 : 41
ID                   : 8 12 13 16 34 35 37 39 39 40 41 66 68 69 70 71 72 73 74 75 76 77 78 79 80 84 90 132
IF                   : 57 58 59 60 63
IGUAL                : 38 66 67 68 86 87
IGUALQUE             : 121
IMPRIMIR             : 64 65
INT                  : 92
LLAVDER              : 12 13 42 45 46 48 49 57 58 58 59 59 60 63 137
LLAVIZQ              : 12 13 42 45 46 48 49 57 58 58 59 59 60 63 137
MAIQUE               : 120
MAS                  : 69 69 123
MAYQUE               : 118
MEIQUE               : 119
MENOS                : 70 70 106 124
MENQUE               : 117
MULTIPLICATIVA       : 73
NIGUALQUE            : 122
NOT                  : 110
NOTR                 : 116
OR                   : 108
PAND                 : 111
PARDER               : 8 12 13 34 35 42 45 46 48 49 57 58 59 60 63 64 65 68 87 105
PARIZQ               : 8 12 13 34 35 42 45 46 48 49 57 58 59 60 63 64 65 68 87 105
POR                  : 125
PTCOMA               : 6 8 9 10 20 21 30 31 36 41 42 42 46 47 56 64 65
PUNTO                : 39
RESTO                : 127
RETURN               : 36
SCAN                 : 68 87
SHIFTD               : 115
SHIFTI               : 114
STRUCT               : 8
SWITCH               : 48 49
UNARIO               : 
VOID                 : 96
WHILE                : 45 46
XOR                  : 109
XORR                 : 113
error                : 33

Nonterminals, with rules where they appear

TIPO                 : 12 13 16 85 86 87
acceso               : 81 82
acceso_lista         : 67 91 135
acceso_struct        : 38 133
accesos              : 81 84
array                : 136
asignacion           : 20 42 43
caso                 : 50 51
declaracion          : 6 9 10 21 44
declaracion_struct   : 30
declaraciones        : 8 9
default_ins          : 48
definicion_struct    : 7
elseif               : 61 62
empty                : 2
expresion            : 36 38 42 45 46 48 49 52 53 57 58 59 60 63 66 67 71 72 73 74 75 76 77 78 79 80 83 86 97 98 105 106 107 107 108 108 109 109 110 111 111 112 112 113 113 114 114 115 115 116 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127
expresion_bit_bit    : 104
expresion_logica     : 103
expresion_numerica   : 100
expresion_relacional : 101
expresion_unaria     : 102
expresiones          : 34 64 97 137
funcion              : 5
globales             : 1 3
iglobal              : 3 4
imprimir_instr       : 19
init                 : 0
ins_break            : 24
ins_continue         : 27
ins_etiqueta         : 28
ins_for              : 26
ins_goto             : 29
ins_return           : 32
ins_while            : 25
instruccion          : 17 18
instruccion_for      : 42
instrucciones        : 12 13 17 42 45 46 52 54 57 58 58 59 59 60 63
lelseif              : 59 60 61
lista_case           : 48 49 50
lista_id             : 37 85 86 87 88
llamada              : 31 134
parametro            : 14 15
parametros           : 13 14
primitiva            : 99
sentencia_if         : 22
sentencia_switch     : 23
tipo_var             : 88 89

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . globales
    (2) init -> . empty
    (3) globales -> . globales iglobal
    (4) globales -> . iglobal
    (11) empty -> .
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion PTCOMA
    (7) iglobal -> . definicion_struct
    (12) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (8) definicion_struct -> . STRUCT ID PARIZQ declaraciones PARDER PTCOMA
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    $end            reduce using rule 11 (empty -> .)
    STRUCT          shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    init                           shift and go to state 1
    globales                       shift and go to state 2
    empty                          shift and go to state 3
    iglobal                        shift and go to state 4
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    definicion_struct              shift and go to state 7
    TIPO                           shift and go to state 8

state 1

    (0) S' -> init .



state 2

    (1) init -> globales .
    (3) globales -> globales . iglobal
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion PTCOMA
    (7) iglobal -> . definicion_struct
    (12) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (8) definicion_struct -> . STRUCT ID PARIZQ declaraciones PARDER PTCOMA
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    $end            reduce using rule 1 (init -> globales .)
    STRUCT          shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    iglobal                        shift and go to state 15
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    definicion_struct              shift and go to state 7
    TIPO                           shift and go to state 8

state 3

    (2) init -> empty .

    $end            reduce using rule 2 (init -> empty .)


state 4

    (4) globales -> iglobal .

    STRUCT          reduce using rule 4 (globales -> iglobal .)
    INT             reduce using rule 4 (globales -> iglobal .)
    FLOAT           reduce using rule 4 (globales -> iglobal .)
    CHAR            reduce using rule 4 (globales -> iglobal .)
    DOOBLE          reduce using rule 4 (globales -> iglobal .)
    VOID            reduce using rule 4 (globales -> iglobal .)
    $end            reduce using rule 4 (globales -> iglobal .)


state 5

    (5) iglobal -> funcion .

    STRUCT          reduce using rule 5 (iglobal -> funcion .)
    INT             reduce using rule 5 (iglobal -> funcion .)
    FLOAT           reduce using rule 5 (iglobal -> funcion .)
    CHAR            reduce using rule 5 (iglobal -> funcion .)
    DOOBLE          reduce using rule 5 (iglobal -> funcion .)
    VOID            reduce using rule 5 (iglobal -> funcion .)
    $end            reduce using rule 5 (iglobal -> funcion .)


state 6

    (6) iglobal -> declaracion . PTCOMA

    PTCOMA          shift and go to state 16


state 7

    (7) iglobal -> definicion_struct .

    STRUCT          reduce using rule 7 (iglobal -> definicion_struct .)
    INT             reduce using rule 7 (iglobal -> definicion_struct .)
    FLOAT           reduce using rule 7 (iglobal -> definicion_struct .)
    CHAR            reduce using rule 7 (iglobal -> definicion_struct .)
    DOOBLE          reduce using rule 7 (iglobal -> definicion_struct .)
    VOID            reduce using rule 7 (iglobal -> definicion_struct .)
    $end            reduce using rule 7 (iglobal -> definicion_struct .)


state 8

    (12) funcion -> TIPO . ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO . ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (85) declaracion -> TIPO . lista_id
    (86) declaracion -> TIPO . lista_id IGUAL expresion
    (87) declaracion -> TIPO . lista_id IGUAL SCAN PARIZQ PARDER
    (88) lista_id -> . lista_id COMA tipo_var
    (89) lista_id -> . tipo_var
    (90) tipo_var -> . ID
    (91) tipo_var -> . acceso_lista
    (84) acceso_lista -> . ID accesos

    ID              shift and go to state 17

    lista_id                       shift and go to state 18
    tipo_var                       shift and go to state 19
    acceso_lista                   shift and go to state 20

state 9

    (8) definicion_struct -> STRUCT . ID PARIZQ declaraciones PARDER PTCOMA

    ID              shift and go to state 21


state 10

    (92) TIPO -> INT .

    ID              reduce using rule 92 (TIPO -> INT .)


state 11

    (93) TIPO -> FLOAT .

    ID              reduce using rule 93 (TIPO -> FLOAT .)


state 12

    (94) TIPO -> CHAR .

    ID              reduce using rule 94 (TIPO -> CHAR .)


state 13

    (95) TIPO -> DOOBLE .

    ID              reduce using rule 95 (TIPO -> DOOBLE .)


state 14

    (96) TIPO -> VOID .

    ID              reduce using rule 96 (TIPO -> VOID .)


state 15

    (3) globales -> globales iglobal .

    STRUCT          reduce using rule 3 (globales -> globales iglobal .)
    INT             reduce using rule 3 (globales -> globales iglobal .)
    FLOAT           reduce using rule 3 (globales -> globales iglobal .)
    CHAR            reduce using rule 3 (globales -> globales iglobal .)
    DOOBLE          reduce using rule 3 (globales -> globales iglobal .)
    VOID            reduce using rule 3 (globales -> globales iglobal .)
    $end            reduce using rule 3 (globales -> globales iglobal .)


state 16

    (6) iglobal -> declaracion PTCOMA .

    STRUCT          reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    INT             reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    FLOAT           reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    CHAR            reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    VOID            reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    $end            reduce using rule 6 (iglobal -> declaracion PTCOMA .)


state 17

    (12) funcion -> TIPO ID . PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO ID . PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (90) tipo_var -> ID .
    (84) acceso_lista -> ID . accesos
    (81) accesos -> . accesos acceso
    (82) accesos -> . acceso
    (83) acceso -> . CORIZQ expresion CORDER

    PARIZQ          shift and go to state 22
    IGUAL           reduce using rule 90 (tipo_var -> ID .)
    COMA            reduce using rule 90 (tipo_var -> ID .)
    PTCOMA          reduce using rule 90 (tipo_var -> ID .)
    CORIZQ          shift and go to state 25

    accesos                        shift and go to state 23
    acceso                         shift and go to state 24

state 18

    (85) declaracion -> TIPO lista_id .
    (86) declaracion -> TIPO lista_id . IGUAL expresion
    (87) declaracion -> TIPO lista_id . IGUAL SCAN PARIZQ PARDER
    (88) lista_id -> lista_id . COMA tipo_var

    PTCOMA          reduce using rule 85 (declaracion -> TIPO lista_id .)
    IGUAL           shift and go to state 26
    COMA            shift and go to state 27


state 19

    (89) lista_id -> tipo_var .

    IGUAL           reduce using rule 89 (lista_id -> tipo_var .)
    COMA            reduce using rule 89 (lista_id -> tipo_var .)
    PTCOMA          reduce using rule 89 (lista_id -> tipo_var .)


state 20

    (91) tipo_var -> acceso_lista .

    IGUAL           reduce using rule 91 (tipo_var -> acceso_lista .)
    COMA            reduce using rule 91 (tipo_var -> acceso_lista .)
    PTCOMA          reduce using rule 91 (tipo_var -> acceso_lista .)


state 21

    (8) definicion_struct -> STRUCT ID . PARIZQ declaraciones PARDER PTCOMA

    PARIZQ          shift and go to state 28


state 22

    (12) funcion -> TIPO ID PARIZQ . PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO ID PARIZQ . parametros PARDER LLAVIZQ instrucciones LLAVDER
    (14) parametros -> . parametros COMA parametro
    (15) parametros -> . parametro
    (16) parametro -> . TIPO ID
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    PARDER          shift and go to state 30
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 29
    parametros                     shift and go to state 31
    parametro                      shift and go to state 32

state 23

    (84) acceso_lista -> ID accesos .
    (81) accesos -> accesos . acceso
    (83) acceso -> . CORIZQ expresion CORDER

    IGUAL           reduce using rule 84 (acceso_lista -> ID accesos .)
    COMA            reduce using rule 84 (acceso_lista -> ID accesos .)
    PTCOMA          reduce using rule 84 (acceso_lista -> ID accesos .)
    CORDER          reduce using rule 84 (acceso_lista -> ID accesos .)
    MAS             reduce using rule 84 (acceso_lista -> ID accesos .)
    MENOS           reduce using rule 84 (acceso_lista -> ID accesos .)
    POR             reduce using rule 84 (acceso_lista -> ID accesos .)
    DIVIDIDO        reduce using rule 84 (acceso_lista -> ID accesos .)
    RESTO           reduce using rule 84 (acceso_lista -> ID accesos .)
    MENQUE          reduce using rule 84 (acceso_lista -> ID accesos .)
    MAYQUE          reduce using rule 84 (acceso_lista -> ID accesos .)
    MEIQUE          reduce using rule 84 (acceso_lista -> ID accesos .)
    MAIQUE          reduce using rule 84 (acceso_lista -> ID accesos .)
    IGUALQUE        reduce using rule 84 (acceso_lista -> ID accesos .)
    NIGUALQUE       reduce using rule 84 (acceso_lista -> ID accesos .)
    AND             reduce using rule 84 (acceso_lista -> ID accesos .)
    OR              reduce using rule 84 (acceso_lista -> ID accesos .)
    XOR             reduce using rule 84 (acceso_lista -> ID accesos .)
    PAND            reduce using rule 84 (acceso_lista -> ID accesos .)
    BOR             reduce using rule 84 (acceso_lista -> ID accesos .)
    XORR            reduce using rule 84 (acceso_lista -> ID accesos .)
    SHIFTI          reduce using rule 84 (acceso_lista -> ID accesos .)
    SHIFTD          reduce using rule 84 (acceso_lista -> ID accesos .)
    PARDER          reduce using rule 84 (acceso_lista -> ID accesos .)
    LLAVDER         reduce using rule 84 (acceso_lista -> ID accesos .)
    DOSP            reduce using rule 84 (acceso_lista -> ID accesos .)
    CORIZQ          shift and go to state 25

    acceso                         shift and go to state 33

state 24

    (82) accesos -> acceso .

    CORIZQ          reduce using rule 82 (accesos -> acceso .)
    IGUAL           reduce using rule 82 (accesos -> acceso .)
    COMA            reduce using rule 82 (accesos -> acceso .)
    PTCOMA          reduce using rule 82 (accesos -> acceso .)
    CORDER          reduce using rule 82 (accesos -> acceso .)
    MAS             reduce using rule 82 (accesos -> acceso .)
    MENOS           reduce using rule 82 (accesos -> acceso .)
    POR             reduce using rule 82 (accesos -> acceso .)
    DIVIDIDO        reduce using rule 82 (accesos -> acceso .)
    RESTO           reduce using rule 82 (accesos -> acceso .)
    MENQUE          reduce using rule 82 (accesos -> acceso .)
    MAYQUE          reduce using rule 82 (accesos -> acceso .)
    MEIQUE          reduce using rule 82 (accesos -> acceso .)
    MAIQUE          reduce using rule 82 (accesos -> acceso .)
    IGUALQUE        reduce using rule 82 (accesos -> acceso .)
    NIGUALQUE       reduce using rule 82 (accesos -> acceso .)
    AND             reduce using rule 82 (accesos -> acceso .)
    OR              reduce using rule 82 (accesos -> acceso .)
    XOR             reduce using rule 82 (accesos -> acceso .)
    PAND            reduce using rule 82 (accesos -> acceso .)
    BOR             reduce using rule 82 (accesos -> acceso .)
    XORR            reduce using rule 82 (accesos -> acceso .)
    SHIFTI          reduce using rule 82 (accesos -> acceso .)
    SHIFTD          reduce using rule 82 (accesos -> acceso .)
    PARDER          reduce using rule 82 (accesos -> acceso .)
    LLAVDER         reduce using rule 82 (accesos -> acceso .)
    DOSP            reduce using rule 82 (accesos -> acceso .)


state 25

    (83) acceso -> CORIZQ . expresion CORDER
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 34
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 26

    (86) declaracion -> TIPO lista_id IGUAL . expresion
    (87) declaracion -> TIPO lista_id IGUAL . SCAN PARIZQ PARDER
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    SCAN            shift and go to state 56
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 55
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 27

    (88) lista_id -> lista_id COMA . tipo_var
    (90) tipo_var -> . ID
    (91) tipo_var -> . acceso_lista
    (84) acceso_lista -> . ID accesos

    ID              shift and go to state 58

    tipo_var                       shift and go to state 57
    acceso_lista                   shift and go to state 20

state 28

    (8) definicion_struct -> STRUCT ID PARIZQ . declaraciones PARDER PTCOMA
    (9) declaraciones -> . declaraciones declaracion PTCOMA
    (10) declaraciones -> . declaracion PTCOMA
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    declaraciones                  shift and go to state 59
    declaracion                    shift and go to state 60
    TIPO                           shift and go to state 61

state 29

    (16) parametro -> TIPO . ID

    ID              shift and go to state 62


state 30

    (12) funcion -> TIPO ID PARIZQ PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 63


state 31

    (13) funcion -> TIPO ID PARIZQ parametros . PARDER LLAVIZQ instrucciones LLAVDER
    (14) parametros -> parametros . COMA parametro

    PARDER          shift and go to state 64
    COMA            shift and go to state 65


state 32

    (15) parametros -> parametro .

    PARDER          reduce using rule 15 (parametros -> parametro .)
    COMA            reduce using rule 15 (parametros -> parametro .)


state 33

    (81) accesos -> accesos acceso .

    CORIZQ          reduce using rule 81 (accesos -> accesos acceso .)
    IGUAL           reduce using rule 81 (accesos -> accesos acceso .)
    COMA            reduce using rule 81 (accesos -> accesos acceso .)
    PTCOMA          reduce using rule 81 (accesos -> accesos acceso .)
    CORDER          reduce using rule 81 (accesos -> accesos acceso .)
    MAS             reduce using rule 81 (accesos -> accesos acceso .)
    MENOS           reduce using rule 81 (accesos -> accesos acceso .)
    POR             reduce using rule 81 (accesos -> accesos acceso .)
    DIVIDIDO        reduce using rule 81 (accesos -> accesos acceso .)
    RESTO           reduce using rule 81 (accesos -> accesos acceso .)
    MENQUE          reduce using rule 81 (accesos -> accesos acceso .)
    MAYQUE          reduce using rule 81 (accesos -> accesos acceso .)
    MEIQUE          reduce using rule 81 (accesos -> accesos acceso .)
    MAIQUE          reduce using rule 81 (accesos -> accesos acceso .)
    IGUALQUE        reduce using rule 81 (accesos -> accesos acceso .)
    NIGUALQUE       reduce using rule 81 (accesos -> accesos acceso .)
    AND             reduce using rule 81 (accesos -> accesos acceso .)
    OR              reduce using rule 81 (accesos -> accesos acceso .)
    XOR             reduce using rule 81 (accesos -> accesos acceso .)
    PAND            reduce using rule 81 (accesos -> accesos acceso .)
    BOR             reduce using rule 81 (accesos -> accesos acceso .)
    XORR            reduce using rule 81 (accesos -> accesos acceso .)
    SHIFTI          reduce using rule 81 (accesos -> accesos acceso .)
    SHIFTD          reduce using rule 81 (accesos -> accesos acceso .)
    PARDER          reduce using rule 81 (accesos -> accesos acceso .)
    LLAVDER         reduce using rule 81 (accesos -> accesos acceso .)
    DOSP            reduce using rule 81 (accesos -> accesos acceso .)


state 34

    (83) acceso -> CORIZQ expresion . CORDER
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          shift and go to state 66
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 35

    (99) expresion -> primitiva .

    CORDER          reduce using rule 99 (expresion -> primitiva .)
    MAS             reduce using rule 99 (expresion -> primitiva .)
    MENOS           reduce using rule 99 (expresion -> primitiva .)
    POR             reduce using rule 99 (expresion -> primitiva .)
    DIVIDIDO        reduce using rule 99 (expresion -> primitiva .)
    RESTO           reduce using rule 99 (expresion -> primitiva .)
    MENQUE          reduce using rule 99 (expresion -> primitiva .)
    MAYQUE          reduce using rule 99 (expresion -> primitiva .)
    MEIQUE          reduce using rule 99 (expresion -> primitiva .)
    MAIQUE          reduce using rule 99 (expresion -> primitiva .)
    IGUALQUE        reduce using rule 99 (expresion -> primitiva .)
    NIGUALQUE       reduce using rule 99 (expresion -> primitiva .)
    AND             reduce using rule 99 (expresion -> primitiva .)
    OR              reduce using rule 99 (expresion -> primitiva .)
    XOR             reduce using rule 99 (expresion -> primitiva .)
    PAND            reduce using rule 99 (expresion -> primitiva .)
    BOR             reduce using rule 99 (expresion -> primitiva .)
    XORR            reduce using rule 99 (expresion -> primitiva .)
    SHIFTI          reduce using rule 99 (expresion -> primitiva .)
    SHIFTD          reduce using rule 99 (expresion -> primitiva .)
    PTCOMA          reduce using rule 99 (expresion -> primitiva .)
    PARDER          reduce using rule 99 (expresion -> primitiva .)
    LLAVDER         reduce using rule 99 (expresion -> primitiva .)
    COMA            reduce using rule 99 (expresion -> primitiva .)
    DOSP            reduce using rule 99 (expresion -> primitiva .)


state 36

    (100) expresion -> expresion_numerica .

    CORDER          reduce using rule 100 (expresion -> expresion_numerica .)
    MAS             reduce using rule 100 (expresion -> expresion_numerica .)
    MENOS           reduce using rule 100 (expresion -> expresion_numerica .)
    POR             reduce using rule 100 (expresion -> expresion_numerica .)
    DIVIDIDO        reduce using rule 100 (expresion -> expresion_numerica .)
    RESTO           reduce using rule 100 (expresion -> expresion_numerica .)
    MENQUE          reduce using rule 100 (expresion -> expresion_numerica .)
    MAYQUE          reduce using rule 100 (expresion -> expresion_numerica .)
    MEIQUE          reduce using rule 100 (expresion -> expresion_numerica .)
    MAIQUE          reduce using rule 100 (expresion -> expresion_numerica .)
    IGUALQUE        reduce using rule 100 (expresion -> expresion_numerica .)
    NIGUALQUE       reduce using rule 100 (expresion -> expresion_numerica .)
    AND             reduce using rule 100 (expresion -> expresion_numerica .)
    OR              reduce using rule 100 (expresion -> expresion_numerica .)
    XOR             reduce using rule 100 (expresion -> expresion_numerica .)
    PAND            reduce using rule 100 (expresion -> expresion_numerica .)
    BOR             reduce using rule 100 (expresion -> expresion_numerica .)
    XORR            reduce using rule 100 (expresion -> expresion_numerica .)
    SHIFTI          reduce using rule 100 (expresion -> expresion_numerica .)
    SHIFTD          reduce using rule 100 (expresion -> expresion_numerica .)
    PTCOMA          reduce using rule 100 (expresion -> expresion_numerica .)
    PARDER          reduce using rule 100 (expresion -> expresion_numerica .)
    LLAVDER         reduce using rule 100 (expresion -> expresion_numerica .)
    COMA            reduce using rule 100 (expresion -> expresion_numerica .)
    DOSP            reduce using rule 100 (expresion -> expresion_numerica .)


state 37

    (101) expresion -> expresion_relacional .

    CORDER          reduce using rule 101 (expresion -> expresion_relacional .)
    MAS             reduce using rule 101 (expresion -> expresion_relacional .)
    MENOS           reduce using rule 101 (expresion -> expresion_relacional .)
    POR             reduce using rule 101 (expresion -> expresion_relacional .)
    DIVIDIDO        reduce using rule 101 (expresion -> expresion_relacional .)
    RESTO           reduce using rule 101 (expresion -> expresion_relacional .)
    MENQUE          reduce using rule 101 (expresion -> expresion_relacional .)
    MAYQUE          reduce using rule 101 (expresion -> expresion_relacional .)
    MEIQUE          reduce using rule 101 (expresion -> expresion_relacional .)
    MAIQUE          reduce using rule 101 (expresion -> expresion_relacional .)
    IGUALQUE        reduce using rule 101 (expresion -> expresion_relacional .)
    NIGUALQUE       reduce using rule 101 (expresion -> expresion_relacional .)
    AND             reduce using rule 101 (expresion -> expresion_relacional .)
    OR              reduce using rule 101 (expresion -> expresion_relacional .)
    XOR             reduce using rule 101 (expresion -> expresion_relacional .)
    PAND            reduce using rule 101 (expresion -> expresion_relacional .)
    BOR             reduce using rule 101 (expresion -> expresion_relacional .)
    XORR            reduce using rule 101 (expresion -> expresion_relacional .)
    SHIFTI          reduce using rule 101 (expresion -> expresion_relacional .)
    SHIFTD          reduce using rule 101 (expresion -> expresion_relacional .)
    PTCOMA          reduce using rule 101 (expresion -> expresion_relacional .)
    PARDER          reduce using rule 101 (expresion -> expresion_relacional .)
    LLAVDER         reduce using rule 101 (expresion -> expresion_relacional .)
    COMA            reduce using rule 101 (expresion -> expresion_relacional .)
    DOSP            reduce using rule 101 (expresion -> expresion_relacional .)


state 38

    (102) expresion -> expresion_unaria .

    CORDER          reduce using rule 102 (expresion -> expresion_unaria .)
    MAS             reduce using rule 102 (expresion -> expresion_unaria .)
    MENOS           reduce using rule 102 (expresion -> expresion_unaria .)
    POR             reduce using rule 102 (expresion -> expresion_unaria .)
    DIVIDIDO        reduce using rule 102 (expresion -> expresion_unaria .)
    RESTO           reduce using rule 102 (expresion -> expresion_unaria .)
    MENQUE          reduce using rule 102 (expresion -> expresion_unaria .)
    MAYQUE          reduce using rule 102 (expresion -> expresion_unaria .)
    MEIQUE          reduce using rule 102 (expresion -> expresion_unaria .)
    MAIQUE          reduce using rule 102 (expresion -> expresion_unaria .)
    IGUALQUE        reduce using rule 102 (expresion -> expresion_unaria .)
    NIGUALQUE       reduce using rule 102 (expresion -> expresion_unaria .)
    AND             reduce using rule 102 (expresion -> expresion_unaria .)
    OR              reduce using rule 102 (expresion -> expresion_unaria .)
    XOR             reduce using rule 102 (expresion -> expresion_unaria .)
    PAND            reduce using rule 102 (expresion -> expresion_unaria .)
    BOR             reduce using rule 102 (expresion -> expresion_unaria .)
    XORR            reduce using rule 102 (expresion -> expresion_unaria .)
    SHIFTI          reduce using rule 102 (expresion -> expresion_unaria .)
    SHIFTD          reduce using rule 102 (expresion -> expresion_unaria .)
    PTCOMA          reduce using rule 102 (expresion -> expresion_unaria .)
    PARDER          reduce using rule 102 (expresion -> expresion_unaria .)
    LLAVDER         reduce using rule 102 (expresion -> expresion_unaria .)
    COMA            reduce using rule 102 (expresion -> expresion_unaria .)
    DOSP            reduce using rule 102 (expresion -> expresion_unaria .)


state 39

    (103) expresion -> expresion_logica .

    CORDER          reduce using rule 103 (expresion -> expresion_logica .)
    MAS             reduce using rule 103 (expresion -> expresion_logica .)
    MENOS           reduce using rule 103 (expresion -> expresion_logica .)
    POR             reduce using rule 103 (expresion -> expresion_logica .)
    DIVIDIDO        reduce using rule 103 (expresion -> expresion_logica .)
    RESTO           reduce using rule 103 (expresion -> expresion_logica .)
    MENQUE          reduce using rule 103 (expresion -> expresion_logica .)
    MAYQUE          reduce using rule 103 (expresion -> expresion_logica .)
    MEIQUE          reduce using rule 103 (expresion -> expresion_logica .)
    MAIQUE          reduce using rule 103 (expresion -> expresion_logica .)
    IGUALQUE        reduce using rule 103 (expresion -> expresion_logica .)
    NIGUALQUE       reduce using rule 103 (expresion -> expresion_logica .)
    AND             reduce using rule 103 (expresion -> expresion_logica .)
    OR              reduce using rule 103 (expresion -> expresion_logica .)
    XOR             reduce using rule 103 (expresion -> expresion_logica .)
    PAND            reduce using rule 103 (expresion -> expresion_logica .)
    BOR             reduce using rule 103 (expresion -> expresion_logica .)
    XORR            reduce using rule 103 (expresion -> expresion_logica .)
    SHIFTI          reduce using rule 103 (expresion -> expresion_logica .)
    SHIFTD          reduce using rule 103 (expresion -> expresion_logica .)
    PTCOMA          reduce using rule 103 (expresion -> expresion_logica .)
    PARDER          reduce using rule 103 (expresion -> expresion_logica .)
    LLAVDER         reduce using rule 103 (expresion -> expresion_logica .)
    COMA            reduce using rule 103 (expresion -> expresion_logica .)
    DOSP            reduce using rule 103 (expresion -> expresion_logica .)


state 40

    (104) expresion -> expresion_bit_bit .

    CORDER          reduce using rule 104 (expresion -> expresion_bit_bit .)
    MAS             reduce using rule 104 (expresion -> expresion_bit_bit .)
    MENOS           reduce using rule 104 (expresion -> expresion_bit_bit .)
    POR             reduce using rule 104 (expresion -> expresion_bit_bit .)
    DIVIDIDO        reduce using rule 104 (expresion -> expresion_bit_bit .)
    RESTO           reduce using rule 104 (expresion -> expresion_bit_bit .)
    MENQUE          reduce using rule 104 (expresion -> expresion_bit_bit .)
    MAYQUE          reduce using rule 104 (expresion -> expresion_bit_bit .)
    MEIQUE          reduce using rule 104 (expresion -> expresion_bit_bit .)
    MAIQUE          reduce using rule 104 (expresion -> expresion_bit_bit .)
    IGUALQUE        reduce using rule 104 (expresion -> expresion_bit_bit .)
    NIGUALQUE       reduce using rule 104 (expresion -> expresion_bit_bit .)
    AND             reduce using rule 104 (expresion -> expresion_bit_bit .)
    OR              reduce using rule 104 (expresion -> expresion_bit_bit .)
    XOR             reduce using rule 104 (expresion -> expresion_bit_bit .)
    PAND            reduce using rule 104 (expresion -> expresion_bit_bit .)
    BOR             reduce using rule 104 (expresion -> expresion_bit_bit .)
    XORR            reduce using rule 104 (expresion -> expresion_bit_bit .)
    SHIFTI          reduce using rule 104 (expresion -> expresion_bit_bit .)
    SHIFTD          reduce using rule 104 (expresion -> expresion_bit_bit .)
    PTCOMA          reduce using rule 104 (expresion -> expresion_bit_bit .)
    PARDER          reduce using rule 104 (expresion -> expresion_bit_bit .)
    LLAVDER         reduce using rule 104 (expresion -> expresion_bit_bit .)
    COMA            reduce using rule 104 (expresion -> expresion_bit_bit .)
    DOSP            reduce using rule 104 (expresion -> expresion_bit_bit .)


state 41

    (105) expresion -> PARIZQ . expresion PARDER
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 86
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 42

    (128) primitiva -> ENTERO .

    CORDER          reduce using rule 128 (primitiva -> ENTERO .)
    MAS             reduce using rule 128 (primitiva -> ENTERO .)
    MENOS           reduce using rule 128 (primitiva -> ENTERO .)
    POR             reduce using rule 128 (primitiva -> ENTERO .)
    DIVIDIDO        reduce using rule 128 (primitiva -> ENTERO .)
    RESTO           reduce using rule 128 (primitiva -> ENTERO .)
    MENQUE          reduce using rule 128 (primitiva -> ENTERO .)
    MAYQUE          reduce using rule 128 (primitiva -> ENTERO .)
    MEIQUE          reduce using rule 128 (primitiva -> ENTERO .)
    MAIQUE          reduce using rule 128 (primitiva -> ENTERO .)
    IGUALQUE        reduce using rule 128 (primitiva -> ENTERO .)
    NIGUALQUE       reduce using rule 128 (primitiva -> ENTERO .)
    AND             reduce using rule 128 (primitiva -> ENTERO .)
    OR              reduce using rule 128 (primitiva -> ENTERO .)
    XOR             reduce using rule 128 (primitiva -> ENTERO .)
    PAND            reduce using rule 128 (primitiva -> ENTERO .)
    BOR             reduce using rule 128 (primitiva -> ENTERO .)
    XORR            reduce using rule 128 (primitiva -> ENTERO .)
    SHIFTI          reduce using rule 128 (primitiva -> ENTERO .)
    SHIFTD          reduce using rule 128 (primitiva -> ENTERO .)
    PTCOMA          reduce using rule 128 (primitiva -> ENTERO .)
    PARDER          reduce using rule 128 (primitiva -> ENTERO .)
    LLAVDER         reduce using rule 128 (primitiva -> ENTERO .)
    COMA            reduce using rule 128 (primitiva -> ENTERO .)
    DOSP            reduce using rule 128 (primitiva -> ENTERO .)


state 43

    (129) primitiva -> DECIMAL .

    CORDER          reduce using rule 129 (primitiva -> DECIMAL .)
    MAS             reduce using rule 129 (primitiva -> DECIMAL .)
    MENOS           reduce using rule 129 (primitiva -> DECIMAL .)
    POR             reduce using rule 129 (primitiva -> DECIMAL .)
    DIVIDIDO        reduce using rule 129 (primitiva -> DECIMAL .)
    RESTO           reduce using rule 129 (primitiva -> DECIMAL .)
    MENQUE          reduce using rule 129 (primitiva -> DECIMAL .)
    MAYQUE          reduce using rule 129 (primitiva -> DECIMAL .)
    MEIQUE          reduce using rule 129 (primitiva -> DECIMAL .)
    MAIQUE          reduce using rule 129 (primitiva -> DECIMAL .)
    IGUALQUE        reduce using rule 129 (primitiva -> DECIMAL .)
    NIGUALQUE       reduce using rule 129 (primitiva -> DECIMAL .)
    AND             reduce using rule 129 (primitiva -> DECIMAL .)
    OR              reduce using rule 129 (primitiva -> DECIMAL .)
    XOR             reduce using rule 129 (primitiva -> DECIMAL .)
    PAND            reduce using rule 129 (primitiva -> DECIMAL .)
    BOR             reduce using rule 129 (primitiva -> DECIMAL .)
    XORR            reduce using rule 129 (primitiva -> DECIMAL .)
    SHIFTI          reduce using rule 129 (primitiva -> DECIMAL .)
    SHIFTD          reduce using rule 129 (primitiva -> DECIMAL .)
    PTCOMA          reduce using rule 129 (primitiva -> DECIMAL .)
    PARDER          reduce using rule 129 (primitiva -> DECIMAL .)
    LLAVDER         reduce using rule 129 (primitiva -> DECIMAL .)
    COMA            reduce using rule 129 (primitiva -> DECIMAL .)
    DOSP            reduce using rule 129 (primitiva -> DECIMAL .)


state 44

    (130) primitiva -> CADENA .

    CORDER          reduce using rule 130 (primitiva -> CADENA .)
    MAS             reduce using rule 130 (primitiva -> CADENA .)
    MENOS           reduce using rule 130 (primitiva -> CADENA .)
    POR             reduce using rule 130 (primitiva -> CADENA .)
    DIVIDIDO        reduce using rule 130 (primitiva -> CADENA .)
    RESTO           reduce using rule 130 (primitiva -> CADENA .)
    MENQUE          reduce using rule 130 (primitiva -> CADENA .)
    MAYQUE          reduce using rule 130 (primitiva -> CADENA .)
    MEIQUE          reduce using rule 130 (primitiva -> CADENA .)
    MAIQUE          reduce using rule 130 (primitiva -> CADENA .)
    IGUALQUE        reduce using rule 130 (primitiva -> CADENA .)
    NIGUALQUE       reduce using rule 130 (primitiva -> CADENA .)
    AND             reduce using rule 130 (primitiva -> CADENA .)
    OR              reduce using rule 130 (primitiva -> CADENA .)
    XOR             reduce using rule 130 (primitiva -> CADENA .)
    PAND            reduce using rule 130 (primitiva -> CADENA .)
    BOR             reduce using rule 130 (primitiva -> CADENA .)
    XORR            reduce using rule 130 (primitiva -> CADENA .)
    SHIFTI          reduce using rule 130 (primitiva -> CADENA .)
    SHIFTD          reduce using rule 130 (primitiva -> CADENA .)
    PTCOMA          reduce using rule 130 (primitiva -> CADENA .)
    PARDER          reduce using rule 130 (primitiva -> CADENA .)
    LLAVDER         reduce using rule 130 (primitiva -> CADENA .)
    COMA            reduce using rule 130 (primitiva -> CADENA .)
    DOSP            reduce using rule 130 (primitiva -> CADENA .)


state 45

    (131) primitiva -> CADENAR_CHAR .

    CORDER          reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    MAS             reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    MENOS           reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    POR             reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    DIVIDIDO        reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    RESTO           reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    MENQUE          reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    MAYQUE          reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    MEIQUE          reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    MAIQUE          reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    IGUALQUE        reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    NIGUALQUE       reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    AND             reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    OR              reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    XOR             reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    PAND            reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    BOR             reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    XORR            reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    SHIFTI          reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    SHIFTD          reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    PTCOMA          reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    PARDER          reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    LLAVDER         reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    COMA            reduce using rule 131 (primitiva -> CADENAR_CHAR .)
    DOSP            reduce using rule 131 (primitiva -> CADENAR_CHAR .)


state 46

    (132) primitiva -> ID .
    (39) acceso_struct -> ID . PUNTO ID
    (34) llamada -> ID . PARIZQ expresiones PARDER
    (35) llamada -> ID . PARIZQ PARDER
    (84) acceso_lista -> ID . accesos
    (81) accesos -> . accesos acceso
    (82) accesos -> . acceso
    (83) acceso -> . CORIZQ expresion CORDER

    CORDER          reduce using rule 132 (primitiva -> ID .)
    MAS             reduce using rule 132 (primitiva -> ID .)
    MENOS           reduce using rule 132 (primitiva -> ID .)
    POR             reduce using rule 132 (primitiva -> ID .)
    DIVIDIDO        reduce using rule 132 (primitiva -> ID .)
    RESTO           reduce using rule 132 (primitiva -> ID .)
    MENQUE          reduce using rule 132 (primitiva -> ID .)
    MAYQUE          reduce using rule 132 (primitiva -> ID .)
    MEIQUE          reduce using rule 132 (primitiva -> ID .)
    MAIQUE          reduce using rule 132 (primitiva -> ID .)
    IGUALQUE        reduce using rule 132 (primitiva -> ID .)
    NIGUALQUE       reduce using rule 132 (primitiva -> ID .)
    AND             reduce using rule 132 (primitiva -> ID .)
    OR              reduce using rule 132 (primitiva -> ID .)
    XOR             reduce using rule 132 (primitiva -> ID .)
    PAND            reduce using rule 132 (primitiva -> ID .)
    BOR             reduce using rule 132 (primitiva -> ID .)
    XORR            reduce using rule 132 (primitiva -> ID .)
    SHIFTI          reduce using rule 132 (primitiva -> ID .)
    SHIFTD          reduce using rule 132 (primitiva -> ID .)
    PTCOMA          reduce using rule 132 (primitiva -> ID .)
    PARDER          reduce using rule 132 (primitiva -> ID .)
    LLAVDER         reduce using rule 132 (primitiva -> ID .)
    COMA            reduce using rule 132 (primitiva -> ID .)
    DOSP            reduce using rule 132 (primitiva -> ID .)
    PUNTO           shift and go to state 87
    PARIZQ          shift and go to state 88
    CORIZQ          shift and go to state 25

    accesos                        shift and go to state 23
    acceso                         shift and go to state 24

state 47

    (133) primitiva -> acceso_struct .

    CORDER          reduce using rule 133 (primitiva -> acceso_struct .)
    MAS             reduce using rule 133 (primitiva -> acceso_struct .)
    MENOS           reduce using rule 133 (primitiva -> acceso_struct .)
    POR             reduce using rule 133 (primitiva -> acceso_struct .)
    DIVIDIDO        reduce using rule 133 (primitiva -> acceso_struct .)
    RESTO           reduce using rule 133 (primitiva -> acceso_struct .)
    MENQUE          reduce using rule 133 (primitiva -> acceso_struct .)
    MAYQUE          reduce using rule 133 (primitiva -> acceso_struct .)
    MEIQUE          reduce using rule 133 (primitiva -> acceso_struct .)
    MAIQUE          reduce using rule 133 (primitiva -> acceso_struct .)
    IGUALQUE        reduce using rule 133 (primitiva -> acceso_struct .)
    NIGUALQUE       reduce using rule 133 (primitiva -> acceso_struct .)
    AND             reduce using rule 133 (primitiva -> acceso_struct .)
    OR              reduce using rule 133 (primitiva -> acceso_struct .)
    XOR             reduce using rule 133 (primitiva -> acceso_struct .)
    PAND            reduce using rule 133 (primitiva -> acceso_struct .)
    BOR             reduce using rule 133 (primitiva -> acceso_struct .)
    XORR            reduce using rule 133 (primitiva -> acceso_struct .)
    SHIFTI          reduce using rule 133 (primitiva -> acceso_struct .)
    SHIFTD          reduce using rule 133 (primitiva -> acceso_struct .)
    PTCOMA          reduce using rule 133 (primitiva -> acceso_struct .)
    PARDER          reduce using rule 133 (primitiva -> acceso_struct .)
    LLAVDER         reduce using rule 133 (primitiva -> acceso_struct .)
    COMA            reduce using rule 133 (primitiva -> acceso_struct .)
    DOSP            reduce using rule 133 (primitiva -> acceso_struct .)


state 48

    (134) primitiva -> llamada .

    CORDER          reduce using rule 134 (primitiva -> llamada .)
    MAS             reduce using rule 134 (primitiva -> llamada .)
    MENOS           reduce using rule 134 (primitiva -> llamada .)
    POR             reduce using rule 134 (primitiva -> llamada .)
    DIVIDIDO        reduce using rule 134 (primitiva -> llamada .)
    RESTO           reduce using rule 134 (primitiva -> llamada .)
    MENQUE          reduce using rule 134 (primitiva -> llamada .)
    MAYQUE          reduce using rule 134 (primitiva -> llamada .)
    MEIQUE          reduce using rule 134 (primitiva -> llamada .)
    MAIQUE          reduce using rule 134 (primitiva -> llamada .)
    IGUALQUE        reduce using rule 134 (primitiva -> llamada .)
    NIGUALQUE       reduce using rule 134 (primitiva -> llamada .)
    AND             reduce using rule 134 (primitiva -> llamada .)
    OR              reduce using rule 134 (primitiva -> llamada .)
    XOR             reduce using rule 134 (primitiva -> llamada .)
    PAND            reduce using rule 134 (primitiva -> llamada .)
    BOR             reduce using rule 134 (primitiva -> llamada .)
    XORR            reduce using rule 134 (primitiva -> llamada .)
    SHIFTI          reduce using rule 134 (primitiva -> llamada .)
    SHIFTD          reduce using rule 134 (primitiva -> llamada .)
    PTCOMA          reduce using rule 134 (primitiva -> llamada .)
    PARDER          reduce using rule 134 (primitiva -> llamada .)
    LLAVDER         reduce using rule 134 (primitiva -> llamada .)
    COMA            reduce using rule 134 (primitiva -> llamada .)
    DOSP            reduce using rule 134 (primitiva -> llamada .)


state 49

    (135) primitiva -> acceso_lista .

    CORDER          reduce using rule 135 (primitiva -> acceso_lista .)
    MAS             reduce using rule 135 (primitiva -> acceso_lista .)
    MENOS           reduce using rule 135 (primitiva -> acceso_lista .)
    POR             reduce using rule 135 (primitiva -> acceso_lista .)
    DIVIDIDO        reduce using rule 135 (primitiva -> acceso_lista .)
    RESTO           reduce using rule 135 (primitiva -> acceso_lista .)
    MENQUE          reduce using rule 135 (primitiva -> acceso_lista .)
    MAYQUE          reduce using rule 135 (primitiva -> acceso_lista .)
    MEIQUE          reduce using rule 135 (primitiva -> acceso_lista .)
    MAIQUE          reduce using rule 135 (primitiva -> acceso_lista .)
    IGUALQUE        reduce using rule 135 (primitiva -> acceso_lista .)
    NIGUALQUE       reduce using rule 135 (primitiva -> acceso_lista .)
    AND             reduce using rule 135 (primitiva -> acceso_lista .)
    OR              reduce using rule 135 (primitiva -> acceso_lista .)
    XOR             reduce using rule 135 (primitiva -> acceso_lista .)
    PAND            reduce using rule 135 (primitiva -> acceso_lista .)
    BOR             reduce using rule 135 (primitiva -> acceso_lista .)
    XORR            reduce using rule 135 (primitiva -> acceso_lista .)
    SHIFTI          reduce using rule 135 (primitiva -> acceso_lista .)
    SHIFTD          reduce using rule 135 (primitiva -> acceso_lista .)
    PTCOMA          reduce using rule 135 (primitiva -> acceso_lista .)
    PARDER          reduce using rule 135 (primitiva -> acceso_lista .)
    LLAVDER         reduce using rule 135 (primitiva -> acceso_lista .)
    COMA            reduce using rule 135 (primitiva -> acceso_lista .)
    DOSP            reduce using rule 135 (primitiva -> acceso_lista .)


state 50

    (136) primitiva -> array .

    CORDER          reduce using rule 136 (primitiva -> array .)
    MAS             reduce using rule 136 (primitiva -> array .)
    MENOS           reduce using rule 136 (primitiva -> array .)
    POR             reduce using rule 136 (primitiva -> array .)
    DIVIDIDO        reduce using rule 136 (primitiva -> array .)
    RESTO           reduce using rule 136 (primitiva -> array .)
    MENQUE          reduce using rule 136 (primitiva -> array .)
    MAYQUE          reduce using rule 136 (primitiva -> array .)
    MEIQUE          reduce using rule 136 (primitiva -> array .)
    MAIQUE          reduce using rule 136 (primitiva -> array .)
    IGUALQUE        reduce using rule 136 (primitiva -> array .)
    NIGUALQUE       reduce using rule 136 (primitiva -> array .)
    AND             reduce using rule 136 (primitiva -> array .)
    OR              reduce using rule 136 (primitiva -> array .)
    XOR             reduce using rule 136 (primitiva -> array .)
    PAND            reduce using rule 136 (primitiva -> array .)
    BOR             reduce using rule 136 (primitiva -> array .)
    XORR            reduce using rule 136 (primitiva -> array .)
    SHIFTI          reduce using rule 136 (primitiva -> array .)
    SHIFTD          reduce using rule 136 (primitiva -> array .)
    PTCOMA          reduce using rule 136 (primitiva -> array .)
    PARDER          reduce using rule 136 (primitiva -> array .)
    LLAVDER         reduce using rule 136 (primitiva -> array .)
    COMA            reduce using rule 136 (primitiva -> array .)
    DOSP            reduce using rule 136 (primitiva -> array .)


state 51

    (106) expresion_unaria -> MENOS . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 89
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 52

    (110) expresion_logica -> NOT . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 90
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 53

    (116) expresion_bit_bit -> NOTR . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 91
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 54

    (137) array -> LLAVIZQ . expresiones LLAVDER
    (97) expresiones -> . expresiones COMA expresion
    (98) expresiones -> . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresiones                    shift and go to state 92
    expresion                      shift and go to state 93
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 55

    (86) declaracion -> TIPO lista_id IGUAL expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 86 (declaracion -> TIPO lista_id IGUAL expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 56

    (87) declaracion -> TIPO lista_id IGUAL SCAN . PARIZQ PARDER

    PARIZQ          shift and go to state 94


state 57

    (88) lista_id -> lista_id COMA tipo_var .

    IGUAL           reduce using rule 88 (lista_id -> lista_id COMA tipo_var .)
    COMA            reduce using rule 88 (lista_id -> lista_id COMA tipo_var .)
    PTCOMA          reduce using rule 88 (lista_id -> lista_id COMA tipo_var .)


state 58

    (90) tipo_var -> ID .
    (84) acceso_lista -> ID . accesos
    (81) accesos -> . accesos acceso
    (82) accesos -> . acceso
    (83) acceso -> . CORIZQ expresion CORDER

    IGUAL           reduce using rule 90 (tipo_var -> ID .)
    COMA            reduce using rule 90 (tipo_var -> ID .)
    PTCOMA          reduce using rule 90 (tipo_var -> ID .)
    CORIZQ          shift and go to state 25

    accesos                        shift and go to state 23
    acceso                         shift and go to state 24

state 59

    (8) definicion_struct -> STRUCT ID PARIZQ declaraciones . PARDER PTCOMA
    (9) declaraciones -> declaraciones . declaracion PTCOMA
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    PARDER          shift and go to state 95
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    declaracion                    shift and go to state 96
    TIPO                           shift and go to state 61

state 60

    (10) declaraciones -> declaracion . PTCOMA

    PTCOMA          shift and go to state 97


state 61

    (85) declaracion -> TIPO . lista_id
    (86) declaracion -> TIPO . lista_id IGUAL expresion
    (87) declaracion -> TIPO . lista_id IGUAL SCAN PARIZQ PARDER
    (88) lista_id -> . lista_id COMA tipo_var
    (89) lista_id -> . tipo_var
    (90) tipo_var -> . ID
    (91) tipo_var -> . acceso_lista
    (84) acceso_lista -> . ID accesos

    ID              shift and go to state 58

    lista_id                       shift and go to state 18
    tipo_var                       shift and go to state 19
    acceso_lista                   shift and go to state 20

state 62

    (16) parametro -> TIPO ID .

    PARDER          reduce using rule 16 (parametro -> TIPO ID .)
    COMA            reduce using rule 16 (parametro -> TIPO ID .)


state 63

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 61
    instrucciones                  shift and go to state 99
    instruccion                    shift and go to state 100
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118

state 64

    (13) funcion -> TIPO ID PARIZQ parametros PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 128


state 65

    (14) parametros -> parametros COMA . parametro
    (16) parametro -> . TIPO ID
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    parametro                      shift and go to state 129
    TIPO                           shift and go to state 29

state 66

    (83) acceso -> CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    IGUAL           reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    POR             reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    RESTO           reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    MENQUE          reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    MAYQUE          reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    MEIQUE          reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    MAIQUE          reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    NIGUALQUE       reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    AND             reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    OR              reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    XOR             reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    PAND            reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    BOR             reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    XORR            reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    SHIFTI          reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    SHIFTD          reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    LLAVDER         reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)
    DOSP            reduce using rule 83 (acceso -> CORIZQ expresion CORDER .)


state 67

    (123) expresion_numerica -> expresion MAS . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 130
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 68

    (124) expresion_numerica -> expresion MENOS . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 131
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 69

    (125) expresion_numerica -> expresion POR . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 132
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 70

    (126) expresion_numerica -> expresion DIVIDIDO . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 133
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 71

    (127) expresion_numerica -> expresion RESTO . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 134
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 72

    (117) expresion_relacional -> expresion MENQUE . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 135
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 73

    (118) expresion_relacional -> expresion MAYQUE . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 136
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 74

    (119) expresion_relacional -> expresion MEIQUE . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 137
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 75

    (120) expresion_relacional -> expresion MAIQUE . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 138
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 76

    (121) expresion_relacional -> expresion IGUALQUE . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 139
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 77

    (122) expresion_relacional -> expresion NIGUALQUE . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 140
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 78

    (107) expresion_logica -> expresion AND . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 141
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 79

    (108) expresion_logica -> expresion OR . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 142
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 80

    (109) expresion_logica -> expresion XOR . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 143
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 81

    (111) expresion_bit_bit -> expresion PAND . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 144
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 82

    (112) expresion_bit_bit -> expresion BOR . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 145
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 83

    (113) expresion_bit_bit -> expresion XORR . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 146
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 84

    (114) expresion_bit_bit -> expresion SHIFTI . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 147
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 85

    (115) expresion_bit_bit -> expresion SHIFTD . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 148
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 86

    (105) expresion -> PARIZQ expresion . PARDER
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 149
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 87

    (39) acceso_struct -> ID PUNTO . ID

    ID              shift and go to state 150


state 88

    (34) llamada -> ID PARIZQ . expresiones PARDER
    (35) llamada -> ID PARIZQ . PARDER
    (97) expresiones -> . expresiones COMA expresion
    (98) expresiones -> . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARDER          shift and go to state 152
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresiones                    shift and go to state 151
    expresion                      shift and go to state 93
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 89

    (106) expresion_unaria -> MENOS expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    MAS             reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    MENOS           reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    POR             reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    DIVIDIDO        reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    RESTO           reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    MENQUE          reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    MAYQUE          reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    MEIQUE          reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    MAIQUE          reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    IGUALQUE        reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    NIGUALQUE       reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    AND             reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    OR              reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    XOR             reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    PAND            reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    BOR             reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    XORR            reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    SHIFTI          reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    SHIFTD          reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    PTCOMA          reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    PARDER          reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    LLAVDER         reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    COMA            reduce using rule 106 (expresion_unaria -> MENOS expresion .)
    DOSP            reduce using rule 106 (expresion_unaria -> MENOS expresion .)

  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! POR             [ shift and go to state 69 ]
  ! DIVIDIDO        [ shift and go to state 70 ]
  ! RESTO           [ shift and go to state 71 ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]
  ! SHIFTI          [ shift and go to state 84 ]
  ! SHIFTD          [ shift and go to state 85 ]


state 90

    (110) expresion_logica -> NOT expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 110 (expresion_logica -> NOT expresion .)
    MAS             reduce using rule 110 (expresion_logica -> NOT expresion .)
    MENOS           reduce using rule 110 (expresion_logica -> NOT expresion .)
    POR             reduce using rule 110 (expresion_logica -> NOT expresion .)
    DIVIDIDO        reduce using rule 110 (expresion_logica -> NOT expresion .)
    RESTO           reduce using rule 110 (expresion_logica -> NOT expresion .)
    MENQUE          reduce using rule 110 (expresion_logica -> NOT expresion .)
    MAYQUE          reduce using rule 110 (expresion_logica -> NOT expresion .)
    MEIQUE          reduce using rule 110 (expresion_logica -> NOT expresion .)
    MAIQUE          reduce using rule 110 (expresion_logica -> NOT expresion .)
    IGUALQUE        reduce using rule 110 (expresion_logica -> NOT expresion .)
    NIGUALQUE       reduce using rule 110 (expresion_logica -> NOT expresion .)
    AND             reduce using rule 110 (expresion_logica -> NOT expresion .)
    OR              reduce using rule 110 (expresion_logica -> NOT expresion .)
    XOR             reduce using rule 110 (expresion_logica -> NOT expresion .)
    PAND            reduce using rule 110 (expresion_logica -> NOT expresion .)
    BOR             reduce using rule 110 (expresion_logica -> NOT expresion .)
    XORR            reduce using rule 110 (expresion_logica -> NOT expresion .)
    SHIFTI          reduce using rule 110 (expresion_logica -> NOT expresion .)
    SHIFTD          reduce using rule 110 (expresion_logica -> NOT expresion .)
    PTCOMA          reduce using rule 110 (expresion_logica -> NOT expresion .)
    PARDER          reduce using rule 110 (expresion_logica -> NOT expresion .)
    LLAVDER         reduce using rule 110 (expresion_logica -> NOT expresion .)
    COMA            reduce using rule 110 (expresion_logica -> NOT expresion .)
    DOSP            reduce using rule 110 (expresion_logica -> NOT expresion .)

  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! POR             [ shift and go to state 69 ]
  ! DIVIDIDO        [ shift and go to state 70 ]
  ! RESTO           [ shift and go to state 71 ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]
  ! SHIFTI          [ shift and go to state 84 ]
  ! SHIFTD          [ shift and go to state 85 ]


state 91

    (116) expresion_bit_bit -> NOTR expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    MAS             reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    MENOS           reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    POR             reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    DIVIDIDO        reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    RESTO           reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    MENQUE          reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    MAYQUE          reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    MEIQUE          reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    MAIQUE          reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    IGUALQUE        reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    NIGUALQUE       reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    AND             reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    OR              reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    XOR             reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    PAND            reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    BOR             reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    XORR            reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    SHIFTI          reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    SHIFTD          reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    PTCOMA          reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    PARDER          reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    LLAVDER         reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    COMA            reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)
    DOSP            reduce using rule 116 (expresion_bit_bit -> NOTR expresion .)

  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! POR             [ shift and go to state 69 ]
  ! DIVIDIDO        [ shift and go to state 70 ]
  ! RESTO           [ shift and go to state 71 ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]
  ! SHIFTI          [ shift and go to state 84 ]
  ! SHIFTD          [ shift and go to state 85 ]


state 92

    (137) array -> LLAVIZQ expresiones . LLAVDER
    (97) expresiones -> expresiones . COMA expresion

    LLAVDER         shift and go to state 153
    COMA            shift and go to state 154


state 93

    (98) expresiones -> expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    LLAVDER         reduce using rule 98 (expresiones -> expresion .)
    COMA            reduce using rule 98 (expresiones -> expresion .)
    PARDER          reduce using rule 98 (expresiones -> expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 94

    (87) declaracion -> TIPO lista_id IGUAL SCAN PARIZQ . PARDER

    PARDER          shift and go to state 155


state 95

    (8) definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER . PTCOMA

    PTCOMA          shift and go to state 156


state 96

    (9) declaraciones -> declaraciones declaracion . PTCOMA

    PTCOMA          shift and go to state 157


state 97

    (10) declaraciones -> declaracion PTCOMA .

    PARDER          reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    INT             reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    FLOAT           reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    CHAR            reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    VOID            reduce using rule 10 (declaraciones -> declaracion PTCOMA .)


state 98

    (66) asignacion -> ID . IGUAL expresion
    (68) asignacion -> ID . IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> ID . MAS MAS
    (70) asignacion -> ID . MENOS MENOS
    (71) asignacion -> ID . ASUMA expresion
    (72) asignacion -> ID . ARESTA expresion
    (73) asignacion -> ID . MULTIPLICATIVA expresion
    (74) asignacion -> ID . DIVIDIDA expresion
    (75) asignacion -> ID . ARESTO expresion
    (76) asignacion -> ID . ABOR expresion
    (77) asignacion -> ID . APAND expresion
    (78) asignacion -> ID . ASHIFTD expresion
    (79) asignacion -> ID . ASHIFTI expresion
    (80) asignacion -> ID . AXORR expresion
    (40) ins_etiqueta -> ID . DOSP
    (37) declaracion_struct -> ID . lista_id
    (34) llamada -> ID . PARIZQ expresiones PARDER
    (35) llamada -> ID . PARIZQ PARDER
    (39) acceso_struct -> ID . PUNTO ID
    (84) acceso_lista -> ID . accesos
    (88) lista_id -> . lista_id COMA tipo_var
    (89) lista_id -> . tipo_var
    (81) accesos -> . accesos acceso
    (82) accesos -> . acceso
    (90) tipo_var -> . ID
    (91) tipo_var -> . acceso_lista
    (83) acceso -> . CORIZQ expresion CORDER
    (84) acceso_lista -> . ID accesos

    IGUAL           shift and go to state 158
    MAS             shift and go to state 159
    MENOS           shift and go to state 160
    ASUMA           shift and go to state 161
    ARESTA          shift and go to state 162
    MULTIPLICATIVA  shift and go to state 163
    DIVIDIDA        shift and go to state 164
    ARESTO          shift and go to state 165
    ABOR            shift and go to state 166
    APAND           shift and go to state 167
    ASHIFTD         shift and go to state 168
    ASHIFTI         shift and go to state 169
    AXORR           shift and go to state 170
    DOSP            shift and go to state 171
    PARIZQ          shift and go to state 88
    PUNTO           shift and go to state 87
    ID              shift and go to state 58
    CORIZQ          shift and go to state 25

    lista_id                       shift and go to state 172
    accesos                        shift and go to state 23
    tipo_var                       shift and go to state 19
    acceso                         shift and go to state 24
    acceso_lista                   shift and go to state 20

state 99

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         shift and go to state 173
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 61
    instruccion                    shift and go to state 174
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118

state 100

    (18) instrucciones -> instruccion .

    LLAVDER         reduce using rule 18 (instrucciones -> instruccion .)
    error           reduce using rule 18 (instrucciones -> instruccion .)
    IMPRIMIR        reduce using rule 18 (instrucciones -> instruccion .)
    ID              reduce using rule 18 (instrucciones -> instruccion .)
    IF              reduce using rule 18 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 18 (instrucciones -> instruccion .)
    BREAK           reduce using rule 18 (instrucciones -> instruccion .)
    WHILE           reduce using rule 18 (instrucciones -> instruccion .)
    DO              reduce using rule 18 (instrucciones -> instruccion .)
    FOR             reduce using rule 18 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 18 (instrucciones -> instruccion .)
    GOTO            reduce using rule 18 (instrucciones -> instruccion .)
    RETURN          reduce using rule 18 (instrucciones -> instruccion .)
    INT             reduce using rule 18 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 18 (instrucciones -> instruccion .)
    CHAR            reduce using rule 18 (instrucciones -> instruccion .)
    DOOBLE          reduce using rule 18 (instrucciones -> instruccion .)
    VOID            reduce using rule 18 (instrucciones -> instruccion .)
    DEFAULT         reduce using rule 18 (instrucciones -> instruccion .)
    CASE            reduce using rule 18 (instrucciones -> instruccion .)


state 101

    (19) instruccion -> imprimir_instr .

    LLAVDER         reduce using rule 19 (instruccion -> imprimir_instr .)
    error           reduce using rule 19 (instruccion -> imprimir_instr .)
    IMPRIMIR        reduce using rule 19 (instruccion -> imprimir_instr .)
    ID              reduce using rule 19 (instruccion -> imprimir_instr .)
    IF              reduce using rule 19 (instruccion -> imprimir_instr .)
    SWITCH          reduce using rule 19 (instruccion -> imprimir_instr .)
    BREAK           reduce using rule 19 (instruccion -> imprimir_instr .)
    WHILE           reduce using rule 19 (instruccion -> imprimir_instr .)
    DO              reduce using rule 19 (instruccion -> imprimir_instr .)
    FOR             reduce using rule 19 (instruccion -> imprimir_instr .)
    CONTINUE        reduce using rule 19 (instruccion -> imprimir_instr .)
    GOTO            reduce using rule 19 (instruccion -> imprimir_instr .)
    RETURN          reduce using rule 19 (instruccion -> imprimir_instr .)
    INT             reduce using rule 19 (instruccion -> imprimir_instr .)
    FLOAT           reduce using rule 19 (instruccion -> imprimir_instr .)
    CHAR            reduce using rule 19 (instruccion -> imprimir_instr .)
    DOOBLE          reduce using rule 19 (instruccion -> imprimir_instr .)
    VOID            reduce using rule 19 (instruccion -> imprimir_instr .)
    DEFAULT         reduce using rule 19 (instruccion -> imprimir_instr .)
    CASE            reduce using rule 19 (instruccion -> imprimir_instr .)


state 102

    (20) instruccion -> asignacion . PTCOMA

    PTCOMA          shift and go to state 175


state 103

    (21) instruccion -> declaracion . PTCOMA

    PTCOMA          shift and go to state 176


state 104

    (22) instruccion -> sentencia_if .

    LLAVDER         reduce using rule 22 (instruccion -> sentencia_if .)
    error           reduce using rule 22 (instruccion -> sentencia_if .)
    IMPRIMIR        reduce using rule 22 (instruccion -> sentencia_if .)
    ID              reduce using rule 22 (instruccion -> sentencia_if .)
    IF              reduce using rule 22 (instruccion -> sentencia_if .)
    SWITCH          reduce using rule 22 (instruccion -> sentencia_if .)
    BREAK           reduce using rule 22 (instruccion -> sentencia_if .)
    WHILE           reduce using rule 22 (instruccion -> sentencia_if .)
    DO              reduce using rule 22 (instruccion -> sentencia_if .)
    FOR             reduce using rule 22 (instruccion -> sentencia_if .)
    CONTINUE        reduce using rule 22 (instruccion -> sentencia_if .)
    GOTO            reduce using rule 22 (instruccion -> sentencia_if .)
    RETURN          reduce using rule 22 (instruccion -> sentencia_if .)
    INT             reduce using rule 22 (instruccion -> sentencia_if .)
    FLOAT           reduce using rule 22 (instruccion -> sentencia_if .)
    CHAR            reduce using rule 22 (instruccion -> sentencia_if .)
    DOOBLE          reduce using rule 22 (instruccion -> sentencia_if .)
    VOID            reduce using rule 22 (instruccion -> sentencia_if .)
    DEFAULT         reduce using rule 22 (instruccion -> sentencia_if .)
    CASE            reduce using rule 22 (instruccion -> sentencia_if .)


state 105

    (23) instruccion -> sentencia_switch .

    LLAVDER         reduce using rule 23 (instruccion -> sentencia_switch .)
    error           reduce using rule 23 (instruccion -> sentencia_switch .)
    IMPRIMIR        reduce using rule 23 (instruccion -> sentencia_switch .)
    ID              reduce using rule 23 (instruccion -> sentencia_switch .)
    IF              reduce using rule 23 (instruccion -> sentencia_switch .)
    SWITCH          reduce using rule 23 (instruccion -> sentencia_switch .)
    BREAK           reduce using rule 23 (instruccion -> sentencia_switch .)
    WHILE           reduce using rule 23 (instruccion -> sentencia_switch .)
    DO              reduce using rule 23 (instruccion -> sentencia_switch .)
    FOR             reduce using rule 23 (instruccion -> sentencia_switch .)
    CONTINUE        reduce using rule 23 (instruccion -> sentencia_switch .)
    GOTO            reduce using rule 23 (instruccion -> sentencia_switch .)
    RETURN          reduce using rule 23 (instruccion -> sentencia_switch .)
    INT             reduce using rule 23 (instruccion -> sentencia_switch .)
    FLOAT           reduce using rule 23 (instruccion -> sentencia_switch .)
    CHAR            reduce using rule 23 (instruccion -> sentencia_switch .)
    DOOBLE          reduce using rule 23 (instruccion -> sentencia_switch .)
    VOID            reduce using rule 23 (instruccion -> sentencia_switch .)
    DEFAULT         reduce using rule 23 (instruccion -> sentencia_switch .)
    CASE            reduce using rule 23 (instruccion -> sentencia_switch .)


state 106

    (24) instruccion -> ins_break .

    LLAVDER         reduce using rule 24 (instruccion -> ins_break .)
    error           reduce using rule 24 (instruccion -> ins_break .)
    IMPRIMIR        reduce using rule 24 (instruccion -> ins_break .)
    ID              reduce using rule 24 (instruccion -> ins_break .)
    IF              reduce using rule 24 (instruccion -> ins_break .)
    SWITCH          reduce using rule 24 (instruccion -> ins_break .)
    BREAK           reduce using rule 24 (instruccion -> ins_break .)
    WHILE           reduce using rule 24 (instruccion -> ins_break .)
    DO              reduce using rule 24 (instruccion -> ins_break .)
    FOR             reduce using rule 24 (instruccion -> ins_break .)
    CONTINUE        reduce using rule 24 (instruccion -> ins_break .)
    GOTO            reduce using rule 24 (instruccion -> ins_break .)
    RETURN          reduce using rule 24 (instruccion -> ins_break .)
    INT             reduce using rule 24 (instruccion -> ins_break .)
    FLOAT           reduce using rule 24 (instruccion -> ins_break .)
    CHAR            reduce using rule 24 (instruccion -> ins_break .)
    DOOBLE          reduce using rule 24 (instruccion -> ins_break .)
    VOID            reduce using rule 24 (instruccion -> ins_break .)
    DEFAULT         reduce using rule 24 (instruccion -> ins_break .)
    CASE            reduce using rule 24 (instruccion -> ins_break .)


state 107

    (25) instruccion -> ins_while .

    LLAVDER         reduce using rule 25 (instruccion -> ins_while .)
    error           reduce using rule 25 (instruccion -> ins_while .)
    IMPRIMIR        reduce using rule 25 (instruccion -> ins_while .)
    ID              reduce using rule 25 (instruccion -> ins_while .)
    IF              reduce using rule 25 (instruccion -> ins_while .)
    SWITCH          reduce using rule 25 (instruccion -> ins_while .)
    BREAK           reduce using rule 25 (instruccion -> ins_while .)
    WHILE           reduce using rule 25 (instruccion -> ins_while .)
    DO              reduce using rule 25 (instruccion -> ins_while .)
    FOR             reduce using rule 25 (instruccion -> ins_while .)
    CONTINUE        reduce using rule 25 (instruccion -> ins_while .)
    GOTO            reduce using rule 25 (instruccion -> ins_while .)
    RETURN          reduce using rule 25 (instruccion -> ins_while .)
    INT             reduce using rule 25 (instruccion -> ins_while .)
    FLOAT           reduce using rule 25 (instruccion -> ins_while .)
    CHAR            reduce using rule 25 (instruccion -> ins_while .)
    DOOBLE          reduce using rule 25 (instruccion -> ins_while .)
    VOID            reduce using rule 25 (instruccion -> ins_while .)
    DEFAULT         reduce using rule 25 (instruccion -> ins_while .)
    CASE            reduce using rule 25 (instruccion -> ins_while .)


state 108

    (26) instruccion -> ins_for .

    LLAVDER         reduce using rule 26 (instruccion -> ins_for .)
    error           reduce using rule 26 (instruccion -> ins_for .)
    IMPRIMIR        reduce using rule 26 (instruccion -> ins_for .)
    ID              reduce using rule 26 (instruccion -> ins_for .)
    IF              reduce using rule 26 (instruccion -> ins_for .)
    SWITCH          reduce using rule 26 (instruccion -> ins_for .)
    BREAK           reduce using rule 26 (instruccion -> ins_for .)
    WHILE           reduce using rule 26 (instruccion -> ins_for .)
    DO              reduce using rule 26 (instruccion -> ins_for .)
    FOR             reduce using rule 26 (instruccion -> ins_for .)
    CONTINUE        reduce using rule 26 (instruccion -> ins_for .)
    GOTO            reduce using rule 26 (instruccion -> ins_for .)
    RETURN          reduce using rule 26 (instruccion -> ins_for .)
    INT             reduce using rule 26 (instruccion -> ins_for .)
    FLOAT           reduce using rule 26 (instruccion -> ins_for .)
    CHAR            reduce using rule 26 (instruccion -> ins_for .)
    DOOBLE          reduce using rule 26 (instruccion -> ins_for .)
    VOID            reduce using rule 26 (instruccion -> ins_for .)
    DEFAULT         reduce using rule 26 (instruccion -> ins_for .)
    CASE            reduce using rule 26 (instruccion -> ins_for .)


state 109

    (27) instruccion -> ins_continue .

    LLAVDER         reduce using rule 27 (instruccion -> ins_continue .)
    error           reduce using rule 27 (instruccion -> ins_continue .)
    IMPRIMIR        reduce using rule 27 (instruccion -> ins_continue .)
    ID              reduce using rule 27 (instruccion -> ins_continue .)
    IF              reduce using rule 27 (instruccion -> ins_continue .)
    SWITCH          reduce using rule 27 (instruccion -> ins_continue .)
    BREAK           reduce using rule 27 (instruccion -> ins_continue .)
    WHILE           reduce using rule 27 (instruccion -> ins_continue .)
    DO              reduce using rule 27 (instruccion -> ins_continue .)
    FOR             reduce using rule 27 (instruccion -> ins_continue .)
    CONTINUE        reduce using rule 27 (instruccion -> ins_continue .)
    GOTO            reduce using rule 27 (instruccion -> ins_continue .)
    RETURN          reduce using rule 27 (instruccion -> ins_continue .)
    INT             reduce using rule 27 (instruccion -> ins_continue .)
    FLOAT           reduce using rule 27 (instruccion -> ins_continue .)
    CHAR            reduce using rule 27 (instruccion -> ins_continue .)
    DOOBLE          reduce using rule 27 (instruccion -> ins_continue .)
    VOID            reduce using rule 27 (instruccion -> ins_continue .)
    DEFAULT         reduce using rule 27 (instruccion -> ins_continue .)
    CASE            reduce using rule 27 (instruccion -> ins_continue .)


state 110

    (28) instruccion -> ins_etiqueta .

    LLAVDER         reduce using rule 28 (instruccion -> ins_etiqueta .)
    error           reduce using rule 28 (instruccion -> ins_etiqueta .)
    IMPRIMIR        reduce using rule 28 (instruccion -> ins_etiqueta .)
    ID              reduce using rule 28 (instruccion -> ins_etiqueta .)
    IF              reduce using rule 28 (instruccion -> ins_etiqueta .)
    SWITCH          reduce using rule 28 (instruccion -> ins_etiqueta .)
    BREAK           reduce using rule 28 (instruccion -> ins_etiqueta .)
    WHILE           reduce using rule 28 (instruccion -> ins_etiqueta .)
    DO              reduce using rule 28 (instruccion -> ins_etiqueta .)
    FOR             reduce using rule 28 (instruccion -> ins_etiqueta .)
    CONTINUE        reduce using rule 28 (instruccion -> ins_etiqueta .)
    GOTO            reduce using rule 28 (instruccion -> ins_etiqueta .)
    RETURN          reduce using rule 28 (instruccion -> ins_etiqueta .)
    INT             reduce using rule 28 (instruccion -> ins_etiqueta .)
    FLOAT           reduce using rule 28 (instruccion -> ins_etiqueta .)
    CHAR            reduce using rule 28 (instruccion -> ins_etiqueta .)
    DOOBLE          reduce using rule 28 (instruccion -> ins_etiqueta .)
    VOID            reduce using rule 28 (instruccion -> ins_etiqueta .)
    DEFAULT         reduce using rule 28 (instruccion -> ins_etiqueta .)
    CASE            reduce using rule 28 (instruccion -> ins_etiqueta .)


state 111

    (29) instruccion -> ins_goto .

    LLAVDER         reduce using rule 29 (instruccion -> ins_goto .)
    error           reduce using rule 29 (instruccion -> ins_goto .)
    IMPRIMIR        reduce using rule 29 (instruccion -> ins_goto .)
    ID              reduce using rule 29 (instruccion -> ins_goto .)
    IF              reduce using rule 29 (instruccion -> ins_goto .)
    SWITCH          reduce using rule 29 (instruccion -> ins_goto .)
    BREAK           reduce using rule 29 (instruccion -> ins_goto .)
    WHILE           reduce using rule 29 (instruccion -> ins_goto .)
    DO              reduce using rule 29 (instruccion -> ins_goto .)
    FOR             reduce using rule 29 (instruccion -> ins_goto .)
    CONTINUE        reduce using rule 29 (instruccion -> ins_goto .)
    GOTO            reduce using rule 29 (instruccion -> ins_goto .)
    RETURN          reduce using rule 29 (instruccion -> ins_goto .)
    INT             reduce using rule 29 (instruccion -> ins_goto .)
    FLOAT           reduce using rule 29 (instruccion -> ins_goto .)
    CHAR            reduce using rule 29 (instruccion -> ins_goto .)
    DOOBLE          reduce using rule 29 (instruccion -> ins_goto .)
    VOID            reduce using rule 29 (instruccion -> ins_goto .)
    DEFAULT         reduce using rule 29 (instruccion -> ins_goto .)
    CASE            reduce using rule 29 (instruccion -> ins_goto .)


state 112

    (30) instruccion -> declaracion_struct . PTCOMA

    PTCOMA          shift and go to state 177


state 113

    (31) instruccion -> llamada . PTCOMA

    PTCOMA          shift and go to state 178


state 114

    (32) instruccion -> ins_return .

    LLAVDER         reduce using rule 32 (instruccion -> ins_return .)
    error           reduce using rule 32 (instruccion -> ins_return .)
    IMPRIMIR        reduce using rule 32 (instruccion -> ins_return .)
    ID              reduce using rule 32 (instruccion -> ins_return .)
    IF              reduce using rule 32 (instruccion -> ins_return .)
    SWITCH          reduce using rule 32 (instruccion -> ins_return .)
    BREAK           reduce using rule 32 (instruccion -> ins_return .)
    WHILE           reduce using rule 32 (instruccion -> ins_return .)
    DO              reduce using rule 32 (instruccion -> ins_return .)
    FOR             reduce using rule 32 (instruccion -> ins_return .)
    CONTINUE        reduce using rule 32 (instruccion -> ins_return .)
    GOTO            reduce using rule 32 (instruccion -> ins_return .)
    RETURN          reduce using rule 32 (instruccion -> ins_return .)
    INT             reduce using rule 32 (instruccion -> ins_return .)
    FLOAT           reduce using rule 32 (instruccion -> ins_return .)
    CHAR            reduce using rule 32 (instruccion -> ins_return .)
    DOOBLE          reduce using rule 32 (instruccion -> ins_return .)
    VOID            reduce using rule 32 (instruccion -> ins_return .)
    DEFAULT         reduce using rule 32 (instruccion -> ins_return .)
    CASE            reduce using rule 32 (instruccion -> ins_return .)


state 115

    (33) instruccion -> error .

    LLAVDER         reduce using rule 33 (instruccion -> error .)
    error           reduce using rule 33 (instruccion -> error .)
    IMPRIMIR        reduce using rule 33 (instruccion -> error .)
    ID              reduce using rule 33 (instruccion -> error .)
    IF              reduce using rule 33 (instruccion -> error .)
    SWITCH          reduce using rule 33 (instruccion -> error .)
    BREAK           reduce using rule 33 (instruccion -> error .)
    WHILE           reduce using rule 33 (instruccion -> error .)
    DO              reduce using rule 33 (instruccion -> error .)
    FOR             reduce using rule 33 (instruccion -> error .)
    CONTINUE        reduce using rule 33 (instruccion -> error .)
    GOTO            reduce using rule 33 (instruccion -> error .)
    RETURN          reduce using rule 33 (instruccion -> error .)
    INT             reduce using rule 33 (instruccion -> error .)
    FLOAT           reduce using rule 33 (instruccion -> error .)
    CHAR            reduce using rule 33 (instruccion -> error .)
    DOOBLE          reduce using rule 33 (instruccion -> error .)
    VOID            reduce using rule 33 (instruccion -> error .)
    DEFAULT         reduce using rule 33 (instruccion -> error .)
    CASE            reduce using rule 33 (instruccion -> error .)


state 116

    (64) imprimir_instr -> IMPRIMIR . PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> IMPRIMIR . PARIZQ CADENA PARDER PTCOMA

    PARIZQ          shift and go to state 179


state 117

    (38) asignacion -> acceso_struct . IGUAL expresion

    IGUAL           shift and go to state 180


state 118

    (67) asignacion -> acceso_lista . IGUAL expresion

    IGUAL           shift and go to state 181


state 119

    (57) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif

    PARIZQ          shift and go to state 182


state 120

    (48) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER

    PARIZQ          shift and go to state 183


state 121

    (56) ins_break -> BREAK . PTCOMA

    PTCOMA          shift and go to state 184


state 122

    (45) ins_while -> WHILE . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 185


state 123

    (46) ins_while -> DO . LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA

    LLAVIZQ         shift and go to state 186


state 124

    (42) ins_for -> FOR . PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 187


state 125

    (47) ins_continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 188


state 126

    (41) ins_goto -> GOTO . ID PTCOMA

    ID              shift and go to state 189


state 127

    (36) ins_return -> RETURN . expresion PTCOMA
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 190
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 128

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 61
    instrucciones                  shift and go to state 191
    instruccion                    shift and go to state 100
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118

state 129

    (14) parametros -> parametros COMA parametro .

    PARDER          reduce using rule 14 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 14 (parametros -> parametros COMA parametro .)


state 130

    (123) expresion_numerica -> expresion MAS expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    MAS             reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    MENOS           reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    MENQUE          reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    MAYQUE          reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    MEIQUE          reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    MAIQUE          reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    NIGUALQUE       reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    AND             reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    OR              reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    XOR             reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    PAND            reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    BOR             reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    XORR            reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    SHIFTI          reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    SHIFTD          reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    PTCOMA          reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    PARDER          reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    LLAVDER         reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    COMA            reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    DOSP            reduce using rule 123 (expresion_numerica -> expresion MAS expresion .)
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71

  ! POR             [ reduce using rule 123 (expresion_numerica -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 123 (expresion_numerica -> expresion MAS expresion .) ]
  ! RESTO           [ reduce using rule 123 (expresion_numerica -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]
  ! SHIFTI          [ shift and go to state 84 ]
  ! SHIFTD          [ shift and go to state 85 ]


state 131

    (124) expresion_numerica -> expresion MENOS expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    MAS             reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    MENOS           reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    MENQUE          reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    MAYQUE          reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    MEIQUE          reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    MAIQUE          reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    NIGUALQUE       reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    AND             reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    OR              reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    XOR             reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    PAND            reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    BOR             reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    XORR            reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTI          reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTD          reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    PARDER          reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    LLAVDER         reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    COMA            reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    DOSP            reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .)
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71

  ! POR             [ reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .) ]
  ! RESTO           [ reduce using rule 124 (expresion_numerica -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]
  ! SHIFTI          [ shift and go to state 84 ]
  ! SHIFTD          [ shift and go to state 85 ]


state 132

    (125) expresion_numerica -> expresion POR expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    MAS             reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    MENOS           reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    POR             reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    RESTO           reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    MENQUE          reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    MAYQUE          reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    MEIQUE          reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    MAIQUE          reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    IGUALQUE        reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    NIGUALQUE       reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    AND             reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    OR              reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    XOR             reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    PAND            reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    BOR             reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    XORR            reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    SHIFTI          reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    SHIFTD          reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    PTCOMA          reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    PARDER          reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    LLAVDER         reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    COMA            reduce using rule 125 (expresion_numerica -> expresion POR expresion .)
    DOSP            reduce using rule 125 (expresion_numerica -> expresion POR expresion .)

  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! POR             [ shift and go to state 69 ]
  ! DIVIDIDO        [ shift and go to state 70 ]
  ! RESTO           [ shift and go to state 71 ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]
  ! SHIFTI          [ shift and go to state 84 ]
  ! SHIFTD          [ shift and go to state 85 ]


state 133

    (126) expresion_numerica -> expresion DIVIDIDO expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    RESTO           reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENQUE          reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAYQUE          reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MEIQUE          reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAIQUE          reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    NIGUALQUE       reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XOR             reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PAND            reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    BOR             reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XORR            reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTI          reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTD          reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    LLAVDER         reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DOSP            reduce using rule 126 (expresion_numerica -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! POR             [ shift and go to state 69 ]
  ! DIVIDIDO        [ shift and go to state 70 ]
  ! RESTO           [ shift and go to state 71 ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]
  ! SHIFTI          [ shift and go to state 84 ]
  ! SHIFTD          [ shift and go to state 85 ]


state 134

    (127) expresion_numerica -> expresion RESTO expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    MAS             reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    MENOS           reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    POR             reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    DIVIDIDO        reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    RESTO           reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    MENQUE          reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    MAYQUE          reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    MEIQUE          reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    MAIQUE          reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    IGUALQUE        reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    NIGUALQUE       reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    AND             reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    OR              reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    XOR             reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    PAND            reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    BOR             reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    XORR            reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTI          reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTD          reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    PTCOMA          reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    PARDER          reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    LLAVDER         reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    COMA            reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)
    DOSP            reduce using rule 127 (expresion_numerica -> expresion RESTO expresion .)

  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! POR             [ shift and go to state 69 ]
  ! DIVIDIDO        [ shift and go to state 70 ]
  ! RESTO           [ shift and go to state 71 ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]
  ! SHIFTI          [ shift and go to state 84 ]
  ! SHIFTD          [ shift and go to state 85 ]


state 135

    (117) expresion_relacional -> expresion MENQUE expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    MENQUE          reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    MAYQUE          reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    MEIQUE          reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    MAIQUE          reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    IGUALQUE        reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    NIGUALQUE       reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    AND             reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    XOR             reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    PAND            reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    BOR             reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    XORR            reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    PTCOMA          reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    PARDER          reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    LLAVDER         reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    COMA            reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    DOSP            reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENOS           [ reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! POR             [ reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! RESTO           [ reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 117 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]


state 136

    (118) expresion_relacional -> expresion MAYQUE expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    MENQUE          reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    MAYQUE          reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    MEIQUE          reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    MAIQUE          reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    IGUALQUE        reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    NIGUALQUE       reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    AND             reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    XOR             reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    PAND            reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    BOR             reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    XORR            reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    PTCOMA          reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    PARDER          reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    LLAVDER         reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    COMA            reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    DOSP            reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENOS           [ reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! POR             [ reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! RESTO           [ reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 118 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]


state 137

    (119) expresion_relacional -> expresion MEIQUE expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    MENQUE          reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    MAYQUE          reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    MEIQUE          reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    MAIQUE          reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    IGUALQUE        reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    NIGUALQUE       reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    AND             reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    OR              reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    XOR             reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    PAND            reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    BOR             reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    XORR            reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    PTCOMA          reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    PARDER          reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    LLAVDER         reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    COMA            reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    DOSP            reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENOS           [ reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! POR             [ reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! RESTO           [ reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 119 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]


state 138

    (120) expresion_relacional -> expresion MAIQUE expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    MENQUE          reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    MAYQUE          reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    MEIQUE          reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    MAIQUE          reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    IGUALQUE        reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    NIGUALQUE       reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    AND             reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    OR              reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    XOR             reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    PAND            reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    BOR             reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    XORR            reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    PTCOMA          reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    PARDER          reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    LLAVDER         reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    COMA            reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    DOSP            reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENOS           [ reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! POR             [ reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! RESTO           [ reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 120 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]


state 139

    (121) expresion_relacional -> expresion IGUALQUE expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    NIGUALQUE       reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    AND             reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    OR              reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    XOR             reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    PAND            reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    BOR             reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    XORR            reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    LLAVDER         reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    DOSP            reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 121 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]


state 140

    (122) expresion_relacional -> expresion NIGUALQUE expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    IGUALQUE        reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    NIGUALQUE       reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    AND             reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    OR              reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XOR             reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PAND            reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    BOR             reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XORR            reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PTCOMA          reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PARDER          reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    LLAVDER         reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    COMA            reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    DOSP            reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 122 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]


state 141

    (107) expresion_logica -> expresion AND expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 107 (expresion_logica -> expresion AND expresion .)
    AND             reduce using rule 107 (expresion_logica -> expresion AND expresion .)
    OR              reduce using rule 107 (expresion_logica -> expresion AND expresion .)
    XOR             reduce using rule 107 (expresion_logica -> expresion AND expresion .)
    PTCOMA          reduce using rule 107 (expresion_logica -> expresion AND expresion .)
    PARDER          reduce using rule 107 (expresion_logica -> expresion AND expresion .)
    LLAVDER         reduce using rule 107 (expresion_logica -> expresion AND expresion .)
    COMA            reduce using rule 107 (expresion_logica -> expresion AND expresion .)
    DOSP            reduce using rule 107 (expresion_logica -> expresion AND expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! RESTO           [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! MENQUE          [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! MAYQUE          [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! MEIQUE          [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! MAIQUE          [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! PAND            [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! BOR             [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! XORR            [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTI          [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTD          [ reduce using rule 107 (expresion_logica -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]


state 142

    (108) expresion_logica -> expresion OR expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 108 (expresion_logica -> expresion OR expresion .)
    OR              reduce using rule 108 (expresion_logica -> expresion OR expresion .)
    XOR             reduce using rule 108 (expresion_logica -> expresion OR expresion .)
    PTCOMA          reduce using rule 108 (expresion_logica -> expresion OR expresion .)
    PARDER          reduce using rule 108 (expresion_logica -> expresion OR expresion .)
    LLAVDER         reduce using rule 108 (expresion_logica -> expresion OR expresion .)
    COMA            reduce using rule 108 (expresion_logica -> expresion OR expresion .)
    DOSP            reduce using rule 108 (expresion_logica -> expresion OR expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! RESTO           [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! MENQUE          [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! MAYQUE          [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! MEIQUE          [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! MAIQUE          [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! PAND            [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! BOR             [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! XORR            [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTI          [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTD          [ reduce using rule 108 (expresion_logica -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]


state 143

    (109) expresion_logica -> expresion XOR expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for RESTO resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MEIQUE resolved as shift
  ! shift/reduce conflict for MAIQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for PAND resolved as shift
  ! shift/reduce conflict for BOR resolved as shift
  ! shift/reduce conflict for XORR resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
    CORDER          reduce using rule 109 (expresion_logica -> expresion XOR expresion .)
    PTCOMA          reduce using rule 109 (expresion_logica -> expresion XOR expresion .)
    PARDER          reduce using rule 109 (expresion_logica -> expresion XOR expresion .)
    LLAVDER         reduce using rule 109 (expresion_logica -> expresion XOR expresion .)
    COMA            reduce using rule 109 (expresion_logica -> expresion XOR expresion .)
    DOSP            reduce using rule 109 (expresion_logica -> expresion XOR expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! MENOS           [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! POR             [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! RESTO           [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! MENQUE          [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! MAYQUE          [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! MEIQUE          [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! MAIQUE          [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! AND             [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! OR              [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! XOR             [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! PAND            [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! BOR             [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! XORR            [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTI          [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTD          [ reduce using rule 109 (expresion_logica -> expresion XOR expresion .) ]


state 144

    (111) expresion_bit_bit -> expresion PAND expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    AND             reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    OR              reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    XOR             reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    PAND            reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    BOR             reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    XORR            reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    PTCOMA          reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    PARDER          reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    LLAVDER         reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    COMA            reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    DOSP            reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENOS           [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! POR             [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! RESTO           [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENQUE          [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAYQUE          [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MEIQUE          [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAIQUE          [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! IGUALQUE        [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTI          [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTD          [ reduce using rule 111 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]


state 145

    (112) expresion_bit_bit -> expresion BOR expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .)
    AND             reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .)
    OR              reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .)
    XOR             reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .)
    BOR             reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .)
    PTCOMA          reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .)
    PARDER          reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .)
    LLAVDER         reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .)
    COMA            reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .)
    DOSP            reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    PAND            shift and go to state 81
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENOS           [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! POR             [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! RESTO           [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENQUE          [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAYQUE          [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MEIQUE          [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAIQUE          [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! PAND            [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! XORR            [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTI          [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTD          [ reduce using rule 112 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! BOR             [ shift and go to state 82 ]


state 146

    (113) expresion_bit_bit -> expresion XORR expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .)
    AND             reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .)
    OR              reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .)
    XOR             reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .)
    BOR             reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .)
    XORR            reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .)
    PTCOMA          reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .)
    PARDER          reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .)
    LLAVDER         reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .)
    COMA            reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .)
    DOSP            reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    PAND            shift and go to state 81
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85

  ! MAS             [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENOS           [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! POR             [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! RESTO           [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENQUE          [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAYQUE          [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MEIQUE          [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAIQUE          [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! IGUALQUE        [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! PAND            [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTI          [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTD          [ reduce using rule 113 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]


state 147

    (114) expresion_bit_bit -> expresion SHIFTI expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MENQUE          reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAYQUE          reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MEIQUE          reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAIQUE          reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    IGUALQUE        reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    NIGUALQUE       reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    AND             reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    OR              reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XOR             reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PAND            reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    BOR             reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XORR            reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTI          reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTD          reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PTCOMA          reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PARDER          reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    LLAVDER         reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    COMA            reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    DOSP            reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71

  ! MAS             [ reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENOS           [ reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! POR             [ reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! DIVIDIDO        [ reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! RESTO           [ reduce using rule 114 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]
  ! SHIFTI          [ shift and go to state 84 ]
  ! SHIFTD          [ shift and go to state 85 ]


state 148

    (115) expresion_bit_bit -> expresion SHIFTD expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MENQUE          reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAYQUE          reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MEIQUE          reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAIQUE          reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    IGUALQUE        reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    NIGUALQUE       reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    AND             reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    OR              reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XOR             reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PAND            reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    BOR             reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XORR            reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTI          reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTD          reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PTCOMA          reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PARDER          reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    LLAVDER         reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    COMA            reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    DOSP            reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71

  ! MAS             [ reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENOS           [ reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! POR             [ reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! DIVIDIDO        [ reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! RESTO           [ reduce using rule 115 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENQUE          [ shift and go to state 72 ]
  ! MAYQUE          [ shift and go to state 73 ]
  ! MEIQUE          [ shift and go to state 74 ]
  ! MAIQUE          [ shift and go to state 75 ]
  ! IGUALQUE        [ shift and go to state 76 ]
  ! NIGUALQUE       [ shift and go to state 77 ]
  ! AND             [ shift and go to state 78 ]
  ! OR              [ shift and go to state 79 ]
  ! XOR             [ shift and go to state 80 ]
  ! PAND            [ shift and go to state 81 ]
  ! BOR             [ shift and go to state 82 ]
  ! XORR            [ shift and go to state 83 ]
  ! SHIFTI          [ shift and go to state 84 ]
  ! SHIFTD          [ shift and go to state 85 ]


state 149

    (105) expresion -> PARIZQ expresion PARDER .

    CORDER          reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    RESTO           reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    MENQUE          reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    MAYQUE          reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    MEIQUE          reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    MAIQUE          reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    NIGUALQUE       reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    XOR             reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    PAND            reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    BOR             reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    XORR            reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    SHIFTI          reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    SHIFTD          reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    LLAVDER         reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)
    DOSP            reduce using rule 105 (expresion -> PARIZQ expresion PARDER .)


state 150

    (39) acceso_struct -> ID PUNTO ID .

    CORDER          reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    MAS             reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    MENOS           reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    POR             reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    DIVIDIDO        reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    RESTO           reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    MENQUE          reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    MAYQUE          reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    MEIQUE          reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    MAIQUE          reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    IGUALQUE        reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    NIGUALQUE       reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    AND             reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    OR              reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    XOR             reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    PAND            reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    BOR             reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    XORR            reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    SHIFTI          reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    SHIFTD          reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    PTCOMA          reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    PARDER          reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    LLAVDER         reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    COMA            reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    DOSP            reduce using rule 39 (acceso_struct -> ID PUNTO ID .)
    IGUAL           reduce using rule 39 (acceso_struct -> ID PUNTO ID .)


state 151

    (34) llamada -> ID PARIZQ expresiones . PARDER
    (97) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 192
    COMA            shift and go to state 154


state 152

    (35) llamada -> ID PARIZQ PARDER .

    CORDER          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MAS             reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    POR             reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    RESTO           reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MENQUE          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MAYQUE          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MEIQUE          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    MAIQUE          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    AND             reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    OR              reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    XOR             reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    PAND            reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    BOR             reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    XORR            reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    SHIFTI          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    SHIFTD          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    PTCOMA          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    LLAVDER         reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    COMA            reduce using rule 35 (llamada -> ID PARIZQ PARDER .)
    DOSP            reduce using rule 35 (llamada -> ID PARIZQ PARDER .)


state 153

    (137) array -> LLAVIZQ expresiones LLAVDER .

    CORDER          reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    MAS             reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    MENOS           reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    POR             reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    DIVIDIDO        reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    RESTO           reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    MENQUE          reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    MAYQUE          reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    MEIQUE          reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    MAIQUE          reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    IGUALQUE        reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    NIGUALQUE       reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    AND             reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    OR              reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    XOR             reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    PAND            reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    BOR             reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    XORR            reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    SHIFTI          reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    SHIFTD          reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    PTCOMA          reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    PARDER          reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    LLAVDER         reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    COMA            reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)
    DOSP            reduce using rule 137 (array -> LLAVIZQ expresiones LLAVDER .)


state 154

    (97) expresiones -> expresiones COMA . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 193
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 155

    (87) declaracion -> TIPO lista_id IGUAL SCAN PARIZQ PARDER .

    PTCOMA          reduce using rule 87 (declaracion -> TIPO lista_id IGUAL SCAN PARIZQ PARDER .)


state 156

    (8) definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .

    STRUCT          reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    INT             reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    FLOAT           reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    CHAR            reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    DOOBLE          reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    VOID            reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)
    $end            reduce using rule 8 (definicion_struct -> STRUCT ID PARIZQ declaraciones PARDER PTCOMA .)


state 157

    (9) declaraciones -> declaraciones declaracion PTCOMA .

    PARDER          reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    INT             reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    FLOAT           reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    CHAR            reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    DOOBLE          reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    VOID            reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)


state 158

    (66) asignacion -> ID IGUAL . expresion
    (68) asignacion -> ID IGUAL . SCAN PARIZQ PARDER
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    SCAN            shift and go to state 195
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 194
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 159

    (69) asignacion -> ID MAS . MAS

    MAS             shift and go to state 196


state 160

    (70) asignacion -> ID MENOS . MENOS

    MENOS           shift and go to state 197


state 161

    (71) asignacion -> ID ASUMA . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 198
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 162

    (72) asignacion -> ID ARESTA . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 199
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 163

    (73) asignacion -> ID MULTIPLICATIVA . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 200
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 164

    (74) asignacion -> ID DIVIDIDA . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 201
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 165

    (75) asignacion -> ID ARESTO . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 202
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 166

    (76) asignacion -> ID ABOR . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 203
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 167

    (77) asignacion -> ID APAND . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 204
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 168

    (78) asignacion -> ID ASHIFTD . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 205
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 169

    (79) asignacion -> ID ASHIFTI . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 206
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 170

    (80) asignacion -> ID AXORR . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 207
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 171

    (40) ins_etiqueta -> ID DOSP .

    LLAVDER         reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    error           reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    IMPRIMIR        reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    ID              reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    IF              reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    SWITCH          reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    BREAK           reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    WHILE           reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    DO              reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    FOR             reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    CONTINUE        reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    GOTO            reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    RETURN          reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    INT             reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    FLOAT           reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    CHAR            reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    DOOBLE          reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    VOID            reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    DEFAULT         reduce using rule 40 (ins_etiqueta -> ID DOSP .)
    CASE            reduce using rule 40 (ins_etiqueta -> ID DOSP .)


state 172

    (37) declaracion_struct -> ID lista_id .
    (88) lista_id -> lista_id . COMA tipo_var

    PTCOMA          reduce using rule 37 (declaracion_struct -> ID lista_id .)
    COMA            shift and go to state 27


state 173

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .

    STRUCT          reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)


state 174

    (17) instrucciones -> instrucciones instruccion .

    LLAVDER         reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    error           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    IMPRIMIR        reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    DO              reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    GOTO            reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    DOOBLE          reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    VOID            reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    DEFAULT         reduce using rule 17 (instrucciones -> instrucciones instruccion .)
    CASE            reduce using rule 17 (instrucciones -> instrucciones instruccion .)


state 175

    (20) instruccion -> asignacion PTCOMA .

    LLAVDER         reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    error           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    IMPRIMIR        reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    IF              reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    SWITCH          reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    BREAK           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    WHILE           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    DO              reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    FOR             reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    CONTINUE        reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    GOTO            reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    RETURN          reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    INT             reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    FLOAT           reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    CHAR            reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    DOOBLE          reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    VOID            reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    DEFAULT         reduce using rule 20 (instruccion -> asignacion PTCOMA .)
    CASE            reduce using rule 20 (instruccion -> asignacion PTCOMA .)


state 176

    (21) instruccion -> declaracion PTCOMA .

    LLAVDER         reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    error           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    IMPRIMIR        reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    ID              reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    IF              reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    SWITCH          reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    BREAK           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    WHILE           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    DO              reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    FOR             reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    CONTINUE        reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    GOTO            reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    RETURN          reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    INT             reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    FLOAT           reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    CHAR            reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    VOID            reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    DEFAULT         reduce using rule 21 (instruccion -> declaracion PTCOMA .)
    CASE            reduce using rule 21 (instruccion -> declaracion PTCOMA .)


state 177

    (30) instruccion -> declaracion_struct PTCOMA .

    LLAVDER         reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    error           reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    IMPRIMIR        reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    ID              reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    IF              reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    SWITCH          reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    BREAK           reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    WHILE           reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    DO              reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    FOR             reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    CONTINUE        reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    GOTO            reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    RETURN          reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    INT             reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    FLOAT           reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    CHAR            reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    DOOBLE          reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    VOID            reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    DEFAULT         reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)
    CASE            reduce using rule 30 (instruccion -> declaracion_struct PTCOMA .)


state 178

    (31) instruccion -> llamada PTCOMA .

    LLAVDER         reduce using rule 31 (instruccion -> llamada PTCOMA .)
    error           reduce using rule 31 (instruccion -> llamada PTCOMA .)
    IMPRIMIR        reduce using rule 31 (instruccion -> llamada PTCOMA .)
    ID              reduce using rule 31 (instruccion -> llamada PTCOMA .)
    IF              reduce using rule 31 (instruccion -> llamada PTCOMA .)
    SWITCH          reduce using rule 31 (instruccion -> llamada PTCOMA .)
    BREAK           reduce using rule 31 (instruccion -> llamada PTCOMA .)
    WHILE           reduce using rule 31 (instruccion -> llamada PTCOMA .)
    DO              reduce using rule 31 (instruccion -> llamada PTCOMA .)
    FOR             reduce using rule 31 (instruccion -> llamada PTCOMA .)
    CONTINUE        reduce using rule 31 (instruccion -> llamada PTCOMA .)
    GOTO            reduce using rule 31 (instruccion -> llamada PTCOMA .)
    RETURN          reduce using rule 31 (instruccion -> llamada PTCOMA .)
    INT             reduce using rule 31 (instruccion -> llamada PTCOMA .)
    FLOAT           reduce using rule 31 (instruccion -> llamada PTCOMA .)
    CHAR            reduce using rule 31 (instruccion -> llamada PTCOMA .)
    DOOBLE          reduce using rule 31 (instruccion -> llamada PTCOMA .)
    VOID            reduce using rule 31 (instruccion -> llamada PTCOMA .)
    DEFAULT         reduce using rule 31 (instruccion -> llamada PTCOMA .)
    CASE            reduce using rule 31 (instruccion -> llamada PTCOMA .)


state 179

    (64) imprimir_instr -> IMPRIMIR PARIZQ . CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> IMPRIMIR PARIZQ . CADENA PARDER PTCOMA

    CADENA          shift and go to state 208


state 180

    (38) asignacion -> acceso_struct IGUAL . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    acceso_struct                  shift and go to state 47
    expresion                      shift and go to state 209
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 181

    (67) asignacion -> acceso_lista IGUAL . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    acceso_lista                   shift and go to state 49
    expresion                      shift and go to state 210
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    array                          shift and go to state 50

state 182

    (57) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 211
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 183

    (48) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case LLAVDER
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 212
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 184

    (56) ins_break -> BREAK PTCOMA .

    LLAVDER         reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    error           reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    IMPRIMIR        reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    ID              reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    IF              reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    SWITCH          reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    BREAK           reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    WHILE           reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    DO              reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    FOR             reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    GOTO            reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    RETURN          reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    INT             reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    FLOAT           reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    CHAR            reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    DOOBLE          reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    VOID            reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    DEFAULT         reduce using rule 56 (ins_break -> BREAK PTCOMA .)
    CASE            reduce using rule 56 (ins_break -> BREAK PTCOMA .)


state 185

    (45) ins_while -> WHILE PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 213
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 186

    (46) ins_while -> DO LLAVIZQ . instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 214
    instruccion                    shift and go to state 100
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 187

    (42) ins_for -> FOR PARIZQ . instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (43) instruccion_for -> . asignacion
    (44) instruccion_for -> . declaracion
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    ID              shift and go to state 218
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion_for                shift and go to state 215
    asignacion                     shift and go to state 216
    declaracion                    shift and go to state 217
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 188

    (47) ins_continue -> CONTINUE PTCOMA .

    LLAVDER         reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    error           reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    IMPRIMIR        reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    SWITCH          reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    DO              reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    FOR             reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    GOTO            reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    INT             reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    FLOAT           reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    CHAR            reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    DOOBLE          reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    VOID            reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    DEFAULT         reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)
    CASE            reduce using rule 47 (ins_continue -> CONTINUE PTCOMA .)


state 189

    (41) ins_goto -> GOTO ID . PTCOMA

    PTCOMA          shift and go to state 219


state 190

    (36) ins_return -> RETURN expresion . PTCOMA
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 220
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 191

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         shift and go to state 221
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 61
    instruccion                    shift and go to state 174
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118

state 192

    (34) llamada -> ID PARIZQ expresiones PARDER .

    CORDER          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MAS             reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MENOS           reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    POR             reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    DIVIDIDO        reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    RESTO           reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MENQUE          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MAYQUE          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MEIQUE          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    MAIQUE          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    IGUALQUE        reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    NIGUALQUE       reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    AND             reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    OR              reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    XOR             reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    PAND            reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    BOR             reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    XORR            reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    SHIFTI          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    SHIFTD          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    PTCOMA          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    PARDER          reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    LLAVDER         reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    COMA            reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)
    DOSP            reduce using rule 34 (llamada -> ID PARIZQ expresiones PARDER .)


state 193

    (97) expresiones -> expresiones COMA expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    LLAVDER         reduce using rule 97 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 97 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 97 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 194

    (66) asignacion -> ID IGUAL expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 66 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 66 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 195

    (68) asignacion -> ID IGUAL SCAN . PARIZQ PARDER

    PARIZQ          shift and go to state 222


state 196

    (69) asignacion -> ID MAS MAS .

    PTCOMA          reduce using rule 69 (asignacion -> ID MAS MAS .)
    PARDER          reduce using rule 69 (asignacion -> ID MAS MAS .)


state 197

    (70) asignacion -> ID MENOS MENOS .

    PTCOMA          reduce using rule 70 (asignacion -> ID MENOS MENOS .)
    PARDER          reduce using rule 70 (asignacion -> ID MENOS MENOS .)


state 198

    (71) asignacion -> ID ASUMA expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 71 (asignacion -> ID ASUMA expresion .)
    PARDER          reduce using rule 71 (asignacion -> ID ASUMA expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 199

    (72) asignacion -> ID ARESTA expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 72 (asignacion -> ID ARESTA expresion .)
    PARDER          reduce using rule 72 (asignacion -> ID ARESTA expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 200

    (73) asignacion -> ID MULTIPLICATIVA expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 73 (asignacion -> ID MULTIPLICATIVA expresion .)
    PARDER          reduce using rule 73 (asignacion -> ID MULTIPLICATIVA expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 201

    (74) asignacion -> ID DIVIDIDA expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 74 (asignacion -> ID DIVIDIDA expresion .)
    PARDER          reduce using rule 74 (asignacion -> ID DIVIDIDA expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 202

    (75) asignacion -> ID ARESTO expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 75 (asignacion -> ID ARESTO expresion .)
    PARDER          reduce using rule 75 (asignacion -> ID ARESTO expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 203

    (76) asignacion -> ID ABOR expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 76 (asignacion -> ID ABOR expresion .)
    PARDER          reduce using rule 76 (asignacion -> ID ABOR expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 204

    (77) asignacion -> ID APAND expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 77 (asignacion -> ID APAND expresion .)
    PARDER          reduce using rule 77 (asignacion -> ID APAND expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 205

    (78) asignacion -> ID ASHIFTD expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 78 (asignacion -> ID ASHIFTD expresion .)
    PARDER          reduce using rule 78 (asignacion -> ID ASHIFTD expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 206

    (79) asignacion -> ID ASHIFTI expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 79 (asignacion -> ID ASHIFTI expresion .)
    PARDER          reduce using rule 79 (asignacion -> ID ASHIFTI expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 207

    (80) asignacion -> ID AXORR expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 80 (asignacion -> ID AXORR expresion .)
    PARDER          reduce using rule 80 (asignacion -> ID AXORR expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 208

    (64) imprimir_instr -> IMPRIMIR PARIZQ CADENA . COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> IMPRIMIR PARIZQ CADENA . PARDER PTCOMA

    COMA            shift and go to state 223
    PARDER          shift and go to state 224


state 209

    (38) asignacion -> acceso_struct IGUAL expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 38 (asignacion -> acceso_struct IGUAL expresion .)
    PARDER          reduce using rule 38 (asignacion -> acceso_struct IGUAL expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 210

    (67) asignacion -> acceso_lista IGUAL expresion .
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 67 (asignacion -> acceso_lista IGUAL expresion .)
    PARDER          reduce using rule 67 (asignacion -> acceso_lista IGUAL expresion .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 211

    (57) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 225
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 212

    (48) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case LLAVDER
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 226
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 213

    (45) ins_while -> WHILE PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 227
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 214

    (46) ins_while -> DO LLAVIZQ instrucciones . LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         shift and go to state 228
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 174
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 215

    (42) ins_for -> FOR PARIZQ instruccion_for . PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PTCOMA          shift and go to state 229


state 216

    (43) instruccion_for -> asignacion .

    PTCOMA          reduce using rule 43 (instruccion_for -> asignacion .)


state 217

    (44) instruccion_for -> declaracion .

    PTCOMA          reduce using rule 44 (instruccion_for -> declaracion .)


state 218

    (66) asignacion -> ID . IGUAL expresion
    (68) asignacion -> ID . IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> ID . MAS MAS
    (70) asignacion -> ID . MENOS MENOS
    (71) asignacion -> ID . ASUMA expresion
    (72) asignacion -> ID . ARESTA expresion
    (73) asignacion -> ID . MULTIPLICATIVA expresion
    (74) asignacion -> ID . DIVIDIDA expresion
    (75) asignacion -> ID . ARESTO expresion
    (76) asignacion -> ID . ABOR expresion
    (77) asignacion -> ID . APAND expresion
    (78) asignacion -> ID . ASHIFTD expresion
    (79) asignacion -> ID . ASHIFTI expresion
    (80) asignacion -> ID . AXORR expresion
    (39) acceso_struct -> ID . PUNTO ID
    (84) acceso_lista -> ID . accesos
    (81) accesos -> . accesos acceso
    (82) accesos -> . acceso
    (83) acceso -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 158
    MAS             shift and go to state 159
    MENOS           shift and go to state 160
    ASUMA           shift and go to state 161
    ARESTA          shift and go to state 162
    MULTIPLICATIVA  shift and go to state 163
    DIVIDIDA        shift and go to state 164
    ARESTO          shift and go to state 165
    ABOR            shift and go to state 166
    APAND           shift and go to state 167
    ASHIFTD         shift and go to state 168
    ASHIFTI         shift and go to state 169
    AXORR           shift and go to state 170
    PUNTO           shift and go to state 87
    CORIZQ          shift and go to state 25

    accesos                        shift and go to state 23
    acceso                         shift and go to state 24

state 219

    (41) ins_goto -> GOTO ID PTCOMA .

    LLAVDER         reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    error           reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    IMPRIMIR        reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    ID              reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    IF              reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    SWITCH          reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    BREAK           reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    WHILE           reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    DO              reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    FOR             reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    CONTINUE        reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    GOTO            reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    RETURN          reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    INT             reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    FLOAT           reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    CHAR            reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    DOOBLE          reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    VOID            reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    DEFAULT         reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)
    CASE            reduce using rule 41 (ins_goto -> GOTO ID PTCOMA .)


state 220

    (36) ins_return -> RETURN expresion PTCOMA .

    LLAVDER         reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    error           reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    IMPRIMIR        reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    SWITCH          reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    DO              reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    FOR             reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    GOTO            reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    INT             reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    FLOAT           reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    CHAR            reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    DOOBLE          reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    VOID            reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    DEFAULT         reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)
    CASE            reduce using rule 36 (ins_return -> RETURN expresion PTCOMA .)


state 221

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .

    STRUCT          reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)


state 222

    (68) asignacion -> ID IGUAL SCAN PARIZQ . PARDER

    PARDER          shift and go to state 230


state 223

    (64) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA . expresiones PARDER PTCOMA
    (97) expresiones -> . expresiones COMA expresion
    (98) expresiones -> . expresion
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresiones                    shift and go to state 231
    expresion                      shift and go to state 93
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 224

    (65) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER . PTCOMA

    PTCOMA          shift and go to state 232


state 225

    (57) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif

    LLAVIZQ         shift and go to state 233


state 226

    (48) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case LLAVDER

    LLAVIZQ         shift and go to state 234


state 227

    (45) ins_while -> WHILE PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 235


state 228

    (46) ins_while -> DO LLAVIZQ instrucciones LLAVDER . WHILE PARIZQ expresion PARDER PTCOMA

    WHILE           shift and go to state 236


state 229

    (42) ins_for -> FOR PARIZQ instruccion_for PTCOMA . expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 237
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 230

    (68) asignacion -> ID IGUAL SCAN PARIZQ PARDER .

    PTCOMA          reduce using rule 68 (asignacion -> ID IGUAL SCAN PARIZQ PARDER .)
    PARDER          reduce using rule 68 (asignacion -> ID IGUAL SCAN PARIZQ PARDER .)


state 231

    (64) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones . PARDER PTCOMA
    (97) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 238
    COMA            shift and go to state 154


state 232

    (65) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .

    LLAVDER         reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    error           reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    ID              reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IF              reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    SWITCH          reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    BREAK           reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    WHILE           reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DO              reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    FOR             reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CONTINUE        reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    GOTO            reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    RETURN          reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    INT             reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    FLOAT           reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CHAR            reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DOOBLE          reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    VOID            reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DEFAULT         reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CASE            reduce using rule 65 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)


state 233

    (57) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (58) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 239
    instruccion                    shift and go to state 100
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 234

    (48) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case default_ins LLAVDER
    (49) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case LLAVDER
    (50) lista_case -> . lista_case caso
    (51) lista_case -> . caso
    (52) caso -> . CASE expresion DOSP instrucciones
    (53) caso -> . CASE expresion DOSP

    CASE            shift and go to state 242

    lista_case                     shift and go to state 240
    caso                           shift and go to state 241

state 235

    (45) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 243
    instruccion                    shift and go to state 100
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 236

    (46) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 244


state 237

    (42) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion . PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 245
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 238

    (64) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 246


state 239

    (57) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (58) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         shift and go to state 247
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 174
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 240

    (48) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . default_ins LLAVDER
    (49) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . LLAVDER
    (50) lista_case -> lista_case . caso
    (54) default_ins -> . DEFAULT DOSP instrucciones
    (55) default_ins -> . DEFAULT DOSP
    (52) caso -> . CASE expresion DOSP instrucciones
    (53) caso -> . CASE expresion DOSP

    LLAVDER         shift and go to state 249
    DEFAULT         shift and go to state 251
    CASE            shift and go to state 242

    default_ins                    shift and go to state 248
    caso                           shift and go to state 250

state 241

    (51) lista_case -> caso .

    LLAVDER         reduce using rule 51 (lista_case -> caso .)
    DEFAULT         reduce using rule 51 (lista_case -> caso .)
    CASE            reduce using rule 51 (lista_case -> caso .)


state 242

    (52) caso -> CASE . expresion DOSP instrucciones
    (53) caso -> CASE . expresion DOSP
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 252
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 243

    (45) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         shift and go to state 253
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 174
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 244

    (46) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ . expresion PARDER PTCOMA
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 254
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 245

    (42) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA . asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos

    ID              shift and go to state 218

    asignacion                     shift and go to state 255
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118

state 246

    (64) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .

    LLAVDER         reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    error           reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    SWITCH          reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DO              reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    FOR             reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    GOTO            reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    INT             reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    FLOAT           reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CHAR            reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DOOBLE          reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    VOID            reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DEFAULT         reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CASE            reduce using rule 64 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)


state 247

    (57) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .
    (58) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif
    (61) lelseif -> . lelseif elseif
    (62) lelseif -> . elseif
    (63) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVDER         reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 57 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 256

    lelseif                        shift and go to state 257
    elseif                         shift and go to state 258

state 248

    (48) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins . LLAVDER

    LLAVDER         shift and go to state 259


state 249

    (49) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .

    LLAVDER         reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    error           reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IMPRIMIR        reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    ID              reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IF              reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    SWITCH          reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    BREAK           reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    WHILE           reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DO              reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    FOR             reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CONTINUE        reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    GOTO            reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    RETURN          reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    INT             reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    FLOAT           reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CHAR            reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DOOBLE          reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    VOID            reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DEFAULT         reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CASE            reduce using rule 49 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)


state 250

    (50) lista_case -> lista_case caso .

    LLAVDER         reduce using rule 50 (lista_case -> lista_case caso .)
    DEFAULT         reduce using rule 50 (lista_case -> lista_case caso .)
    CASE            reduce using rule 50 (lista_case -> lista_case caso .)


state 251

    (54) default_ins -> DEFAULT . DOSP instrucciones
    (55) default_ins -> DEFAULT . DOSP

    DOSP            shift and go to state 260


state 252

    (52) caso -> CASE expresion . DOSP instrucciones
    (53) caso -> CASE expresion . DOSP
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    DOSP            shift and go to state 261
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 253

    (45) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 45 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)


state 254

    (46) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion . PARDER PTCOMA
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 262
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 255

    (42) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 263


state 256

    (58) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER
    (63) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 265
    IF              shift and go to state 264


state 257

    (59) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif . ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .
    (61) lelseif -> lelseif . elseif
    (63) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    ELSE            shift and go to state 266
    LLAVDER         reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    error           reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IMPRIMIR        reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    ID              reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IF              reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    SWITCH          reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    BREAK           reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    WHILE           reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DO              reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    FOR             reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CONTINUE        reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    GOTO            reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    RETURN          reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    INT             reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    FLOAT           reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CHAR            reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DOOBLE          reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    VOID            reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DEFAULT         reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CASE            reduce using rule 60 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)

    elseif                         shift and go to state 267

state 258

    (62) lelseif -> elseif .

    ELSE            reduce using rule 62 (lelseif -> elseif .)
    LLAVDER         reduce using rule 62 (lelseif -> elseif .)
    error           reduce using rule 62 (lelseif -> elseif .)
    IMPRIMIR        reduce using rule 62 (lelseif -> elseif .)
    ID              reduce using rule 62 (lelseif -> elseif .)
    IF              reduce using rule 62 (lelseif -> elseif .)
    SWITCH          reduce using rule 62 (lelseif -> elseif .)
    BREAK           reduce using rule 62 (lelseif -> elseif .)
    WHILE           reduce using rule 62 (lelseif -> elseif .)
    DO              reduce using rule 62 (lelseif -> elseif .)
    FOR             reduce using rule 62 (lelseif -> elseif .)
    CONTINUE        reduce using rule 62 (lelseif -> elseif .)
    GOTO            reduce using rule 62 (lelseif -> elseif .)
    RETURN          reduce using rule 62 (lelseif -> elseif .)
    INT             reduce using rule 62 (lelseif -> elseif .)
    FLOAT           reduce using rule 62 (lelseif -> elseif .)
    CHAR            reduce using rule 62 (lelseif -> elseif .)
    DOOBLE          reduce using rule 62 (lelseif -> elseif .)
    VOID            reduce using rule 62 (lelseif -> elseif .)
    DEFAULT         reduce using rule 62 (lelseif -> elseif .)
    CASE            reduce using rule 62 (lelseif -> elseif .)


state 259

    (48) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .

    LLAVDER         reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    error           reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IMPRIMIR        reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    ID              reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IF              reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    SWITCH          reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    BREAK           reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    WHILE           reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DO              reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    FOR             reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CONTINUE        reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    GOTO            reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    RETURN          reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    INT             reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    FLOAT           reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CHAR            reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DOOBLE          reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    VOID            reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DEFAULT         reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CASE            reduce using rule 48 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)


state 260

    (54) default_ins -> DEFAULT DOSP . instrucciones
    (55) default_ins -> DEFAULT DOSP .
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         reduce using rule 55 (default_ins -> DEFAULT DOSP .)
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 268
    instruccion                    shift and go to state 100
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 261

    (52) caso -> CASE expresion DOSP . instrucciones
    (53) caso -> CASE expresion DOSP .
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         reduce using rule 53 (caso -> CASE expresion DOSP .)
    DEFAULT         reduce using rule 53 (caso -> CASE expresion DOSP .)
    CASE            reduce using rule 53 (caso -> CASE expresion DOSP .)
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 269
    instruccion                    shift and go to state 100
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 262

    (46) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 270


state 263

    (42) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 271


state 264

    (63) elseif -> ELSE IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 272


state 265

    (58) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 273
    instruccion                    shift and go to state 100
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 266

    (59) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE . LLAVIZQ instrucciones LLAVDER
    (63) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 274
    IF              shift and go to state 264


state 267

    (61) lelseif -> lelseif elseif .

    ELSE            reduce using rule 61 (lelseif -> lelseif elseif .)
    LLAVDER         reduce using rule 61 (lelseif -> lelseif elseif .)
    error           reduce using rule 61 (lelseif -> lelseif elseif .)
    IMPRIMIR        reduce using rule 61 (lelseif -> lelseif elseif .)
    ID              reduce using rule 61 (lelseif -> lelseif elseif .)
    IF              reduce using rule 61 (lelseif -> lelseif elseif .)
    SWITCH          reduce using rule 61 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 61 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 61 (lelseif -> lelseif elseif .)
    DO              reduce using rule 61 (lelseif -> lelseif elseif .)
    FOR             reduce using rule 61 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 61 (lelseif -> lelseif elseif .)
    GOTO            reduce using rule 61 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 61 (lelseif -> lelseif elseif .)
    INT             reduce using rule 61 (lelseif -> lelseif elseif .)
    FLOAT           reduce using rule 61 (lelseif -> lelseif elseif .)
    CHAR            reduce using rule 61 (lelseif -> lelseif elseif .)
    DOOBLE          reduce using rule 61 (lelseif -> lelseif elseif .)
    VOID            reduce using rule 61 (lelseif -> lelseif elseif .)
    DEFAULT         reduce using rule 61 (lelseif -> lelseif elseif .)
    CASE            reduce using rule 61 (lelseif -> lelseif elseif .)


state 268

    (54) default_ins -> DEFAULT DOSP instrucciones .
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         reduce using rule 54 (default_ins -> DEFAULT DOSP instrucciones .)
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 174
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 269

    (52) caso -> CASE expresion DOSP instrucciones .
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         reduce using rule 52 (caso -> CASE expresion DOSP instrucciones .)
    DEFAULT         reduce using rule 52 (caso -> CASE expresion DOSP instrucciones .)
    CASE            reduce using rule 52 (caso -> CASE expresion DOSP instrucciones .)
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 174
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 270

    (46) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .

    LLAVDER         reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    error           reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    SWITCH          reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DO              reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    GOTO            reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    INT             reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    FLOAT           reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DOOBLE          reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    VOID            reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DEFAULT         reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CASE            reduce using rule 46 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)


state 271

    (42) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    asignacion                     shift and go to state 102
    instrucciones                  shift and go to state 275
    instruccion                    shift and go to state 100
    imprimir_instr                 shift and go to state 101
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 272

    (63) elseif -> ELSE IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (99) expresion -> . primitiva
    (100) expresion -> . expresion_numerica
    (101) expresion -> . expresion_relacional
    (102) expresion -> . expresion_unaria
    (103) expresion -> . expresion_logica
    (104) expresion -> . expresion_bit_bit
    (105) expresion -> . PARIZQ expresion PARDER
    (128) primitiva -> . ENTERO
    (129) primitiva -> . DECIMAL
    (130) primitiva -> . CADENA
    (131) primitiva -> . CADENAR_CHAR
    (132) primitiva -> . ID
    (133) primitiva -> . acceso_struct
    (134) primitiva -> . llamada
    (135) primitiva -> . acceso_lista
    (136) primitiva -> . array
    (123) expresion_numerica -> . expresion MAS expresion
    (124) expresion_numerica -> . expresion MENOS expresion
    (125) expresion_numerica -> . expresion POR expresion
    (126) expresion_numerica -> . expresion DIVIDIDO expresion
    (127) expresion_numerica -> . expresion RESTO expresion
    (117) expresion_relacional -> . expresion MENQUE expresion
    (118) expresion_relacional -> . expresion MAYQUE expresion
    (119) expresion_relacional -> . expresion MEIQUE expresion
    (120) expresion_relacional -> . expresion MAIQUE expresion
    (121) expresion_relacional -> . expresion IGUALQUE expresion
    (122) expresion_relacional -> . expresion NIGUALQUE expresion
    (106) expresion_unaria -> . MENOS expresion
    (107) expresion_logica -> . expresion AND expresion
    (108) expresion_logica -> . expresion OR expresion
    (109) expresion_logica -> . expresion XOR expresion
    (110) expresion_logica -> . NOT expresion
    (111) expresion_bit_bit -> . expresion PAND expresion
    (112) expresion_bit_bit -> . expresion BOR expresion
    (113) expresion_bit_bit -> . expresion XORR expresion
    (114) expresion_bit_bit -> . expresion SHIFTI expresion
    (115) expresion_bit_bit -> . expresion SHIFTD expresion
    (116) expresion_bit_bit -> . NOTR expresion
    (39) acceso_struct -> . ID PUNTO ID
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (84) acceso_lista -> . ID accesos
    (137) array -> . LLAVIZQ expresiones LLAVDER

    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA          shift and go to state 44
    CADENAR_CHAR    shift and go to state 45
    ID              shift and go to state 46
    MENOS           shift and go to state 51
    NOT             shift and go to state 52
    NOTR            shift and go to state 53
    LLAVIZQ         shift and go to state 54

    expresion                      shift and go to state 276
    primitiva                      shift and go to state 35
    expresion_numerica             shift and go to state 36
    expresion_relacional           shift and go to state 37
    expresion_unaria               shift and go to state 38
    expresion_logica               shift and go to state 39
    expresion_bit_bit              shift and go to state 40
    acceso_struct                  shift and go to state 47
    llamada                        shift and go to state 48
    acceso_lista                   shift and go to state 49
    array                          shift and go to state 50

state 273

    (58) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         shift and go to state 277
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 174
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 274

    (59) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 278
    instruccion                    shift and go to state 100
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 275

    (42) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         shift and go to state 279
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    asignacion                     shift and go to state 102
    instruccion                    shift and go to state 174
    imprimir_instr                 shift and go to state 101
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 276

    (63) elseif -> ELSE IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (123) expresion_numerica -> expresion . MAS expresion
    (124) expresion_numerica -> expresion . MENOS expresion
    (125) expresion_numerica -> expresion . POR expresion
    (126) expresion_numerica -> expresion . DIVIDIDO expresion
    (127) expresion_numerica -> expresion . RESTO expresion
    (117) expresion_relacional -> expresion . MENQUE expresion
    (118) expresion_relacional -> expresion . MAYQUE expresion
    (119) expresion_relacional -> expresion . MEIQUE expresion
    (120) expresion_relacional -> expresion . MAIQUE expresion
    (121) expresion_relacional -> expresion . IGUALQUE expresion
    (122) expresion_relacional -> expresion . NIGUALQUE expresion
    (107) expresion_logica -> expresion . AND expresion
    (108) expresion_logica -> expresion . OR expresion
    (109) expresion_logica -> expresion . XOR expresion
    (111) expresion_bit_bit -> expresion . PAND expresion
    (112) expresion_bit_bit -> expresion . BOR expresion
    (113) expresion_bit_bit -> expresion . XORR expresion
    (114) expresion_bit_bit -> expresion . SHIFTI expresion
    (115) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 280
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    RESTO           shift and go to state 71
    MENQUE          shift and go to state 72
    MAYQUE          shift and go to state 73
    MEIQUE          shift and go to state 74
    MAIQUE          shift and go to state 75
    IGUALQUE        shift and go to state 76
    NIGUALQUE       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    XOR             shift and go to state 80
    PAND            shift and go to state 81
    BOR             shift and go to state 82
    XORR            shift and go to state 83
    SHIFTI          shift and go to state 84
    SHIFTD          shift and go to state 85


state 277

    (58) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 58 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)


state 278

    (59) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         shift and go to state 281
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 174
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 279

    (42) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 42 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)


state 280

    (63) elseif -> ELSE IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 282


state 281

    (59) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 59 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)


state 282

    (63) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (17) instrucciones -> . instrucciones instruccion
    (18) instrucciones -> . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 283
    instruccion                    shift and go to state 100
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 283

    (63) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (17) instrucciones -> instrucciones . instruccion
    (19) instruccion -> . imprimir_instr
    (20) instruccion -> . asignacion PTCOMA
    (21) instruccion -> . declaracion PTCOMA
    (22) instruccion -> . sentencia_if
    (23) instruccion -> . sentencia_switch
    (24) instruccion -> . ins_break
    (25) instruccion -> . ins_while
    (26) instruccion -> . ins_for
    (27) instruccion -> . ins_continue
    (28) instruccion -> . ins_etiqueta
    (29) instruccion -> . ins_goto
    (30) instruccion -> . declaracion_struct PTCOMA
    (31) instruccion -> . llamada PTCOMA
    (32) instruccion -> . ins_return
    (33) instruccion -> . error
    (64) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (65) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (38) asignacion -> . acceso_struct IGUAL expresion
    (66) asignacion -> . ID IGUAL expresion
    (67) asignacion -> . acceso_lista IGUAL expresion
    (68) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (69) asignacion -> . ID MAS MAS
    (70) asignacion -> . ID MENOS MENOS
    (71) asignacion -> . ID ASUMA expresion
    (72) asignacion -> . ID ARESTA expresion
    (73) asignacion -> . ID MULTIPLICATIVA expresion
    (74) asignacion -> . ID DIVIDIDA expresion
    (75) asignacion -> . ID ARESTO expresion
    (76) asignacion -> . ID ABOR expresion
    (77) asignacion -> . ID APAND expresion
    (78) asignacion -> . ID ASHIFTD expresion
    (79) asignacion -> . ID ASHIFTI expresion
    (80) asignacion -> . ID AXORR expresion
    (85) declaracion -> . TIPO lista_id
    (86) declaracion -> . TIPO lista_id IGUAL expresion
    (87) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (57) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (58) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (59) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (60) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (48) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (49) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (56) ins_break -> . BREAK PTCOMA
    (45) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (46) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (42) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) ins_continue -> . CONTINUE PTCOMA
    (40) ins_etiqueta -> . ID DOSP
    (41) ins_goto -> . GOTO ID PTCOMA
    (37) declaracion_struct -> . ID lista_id
    (34) llamada -> . ID PARIZQ expresiones PARDER
    (35) llamada -> . ID PARIZQ PARDER
    (36) ins_return -> . RETURN expresion PTCOMA
    (39) acceso_struct -> . ID PUNTO ID
    (84) acceso_lista -> . ID accesos
    (92) TIPO -> . INT
    (93) TIPO -> . FLOAT
    (94) TIPO -> . CHAR
    (95) TIPO -> . DOOBLE
    (96) TIPO -> . VOID

    LLAVDER         shift and go to state 284
    error           shift and go to state 115
    IMPRIMIR        shift and go to state 116
    ID              shift and go to state 98
    IF              shift and go to state 119
    SWITCH          shift and go to state 120
    BREAK           shift and go to state 121
    WHILE           shift and go to state 122
    DO              shift and go to state 123
    FOR             shift and go to state 124
    CONTINUE        shift and go to state 125
    GOTO            shift and go to state 126
    RETURN          shift and go to state 127
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 174
    imprimir_instr                 shift and go to state 101
    asignacion                     shift and go to state 102
    declaracion                    shift and go to state 103
    sentencia_if                   shift and go to state 104
    sentencia_switch               shift and go to state 105
    ins_break                      shift and go to state 106
    ins_while                      shift and go to state 107
    ins_for                        shift and go to state 108
    ins_continue                   shift and go to state 109
    ins_etiqueta                   shift and go to state 110
    ins_goto                       shift and go to state 111
    declaracion_struct             shift and go to state 112
    llamada                        shift and go to state 113
    ins_return                     shift and go to state 114
    acceso_struct                  shift and go to state 117
    acceso_lista                   shift and go to state 118
    TIPO                           shift and go to state 61

state 284

    (63) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    ELSE            reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 63 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 143 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 143 resolved as shift
WARNING: shift/reduce conflict for POR in state 143 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 143 resolved as shift
WARNING: shift/reduce conflict for RESTO in state 143 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 143 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 143 resolved as shift
WARNING: shift/reduce conflict for MEIQUE in state 143 resolved as shift
WARNING: shift/reduce conflict for MAIQUE in state 143 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 143 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 143 resolved as shift
WARNING: shift/reduce conflict for AND in state 143 resolved as shift
WARNING: shift/reduce conflict for OR in state 143 resolved as shift
WARNING: shift/reduce conflict for XOR in state 143 resolved as shift
WARNING: shift/reduce conflict for PAND in state 143 resolved as shift
WARNING: shift/reduce conflict for BOR in state 143 resolved as shift
WARNING: shift/reduce conflict for XORR in state 143 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 143 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 143 resolved as shift
