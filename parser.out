Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> globales
Rule 2     init -> empty
Rule 3     globales -> globales iglobal
Rule 4     globales -> iglobal
Rule 5     iglobal -> funcion
Rule 6     iglobal -> declaracion PTCOMA
Rule 7     iglobal -> definicion_struct
Rule 8     definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA
Rule 9     declaraciones -> declaraciones declaracion PTCOMA
Rule 10    declaraciones -> declaracion PTCOMA
Rule 11    empty -> <empty>
Rule 12    funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
Rule 13    funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
Rule 14    parametros -> parametros COMA parametro
Rule 15    parametros -> parametro
Rule 16    parametro -> TIPO ID
Rule 17    parametro -> STRUCT ID ID
Rule 18    parametro -> TIPO PAND ID
Rule 19    parametro -> STRUCT ID PAND ID
Rule 20    instrucciones -> instrucciones instruccion
Rule 21    instrucciones -> instruccion
Rule 22    instruccion -> imprimir_instr
Rule 23    instruccion -> asignacion PTCOMA
Rule 24    instruccion -> declaracion PTCOMA
Rule 25    instruccion -> sentencia_if
Rule 26    instruccion -> sentencia_switch
Rule 27    instruccion -> ins_break
Rule 28    instruccion -> ins_while
Rule 29    instruccion -> ins_for
Rule 30    instruccion -> ins_continue
Rule 31    instruccion -> ins_etiqueta
Rule 32    instruccion -> ins_goto
Rule 33    instruccion -> declaracion_struct PTCOMA
Rule 34    instruccion -> llamada PTCOMA
Rule 35    instruccion -> ins_return
Rule 36    instruccion -> error
Rule 37    llamada -> ID PARIZQ expresiones PARDER
Rule 38    llamada -> ID PARIZQ PARDER
Rule 39    ins_return -> RETURN expresion PTCOMA
Rule 40    declaracion_struct -> STRUCT ID lista_id
Rule 41    asignacion -> acceso_struct IGUAL expresion
Rule 42    asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
Rule 43    acceso_struct -> tipo_var PUNTO tipo_var
Rule 44    ins_etiqueta -> ID DOSP
Rule 45    ins_goto -> GOTO ID PTCOMA
Rule 46    ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
Rule 47    instruccion_for -> asignacion
Rule 48    instruccion_for -> declaracion
Rule 49    ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 50    ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
Rule 51    ins_continue -> CONTINUE PTCOMA
Rule 52    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
Rule 53    sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
Rule 54    lista_case -> lista_case caso
Rule 55    lista_case -> caso
Rule 56    caso -> CASE expresion DOSP LLAVIZQ instrucciones LLAVDER
Rule 57    caso -> CASE expresion DOSP instruccion
Rule 58    caso -> CASE expresion DOSP
Rule 59    default_ins -> DEFAULT DOSP instruccion
Rule 60    default_ins -> DEFAULT DOSP LLAVIZQ instrucciones LLAVDER
Rule 61    default_ins -> DEFAULT DOSP
Rule 62    ins_break -> BREAK PTCOMA
Rule 63    asignacion -> ID IGUAL expresion UNARIO expresion DOSP expresion
Rule 64    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 65    sentencia_if -> IF PARIZQ expresion PARDER instruccion
Rule 66    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 67    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
Rule 68    sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
Rule 69    lelseif -> lelseif elseif
Rule 70    lelseif -> elseif
Rule 71    elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 72    imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
Rule 73    imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA
Rule 74    asignacion -> ID IGUAL expresion
Rule 75    asignacion -> ID IGUAL PARIZQ TIPO_DATO PARDER expresion
Rule 76    asignacion -> ID IGUAL PAND expresion
Rule 77    asignacion -> acceso_lista IGUAL expresion
Rule 78    asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
Rule 79    asignacion -> ID IGUAL SCAN PARIZQ PARDER
Rule 80    asignacion -> ID MAS MAS
Rule 81    asignacion -> ID MENOS MENOS
Rule 82    asignacion -> ID ASUMA expresion
Rule 83    asignacion -> ID ARESTA expresion
Rule 84    asignacion -> ID MULTIPLICATIVA expresion
Rule 85    asignacion -> ID DIVIDIDA expresion
Rule 86    asignacion -> ID ARESTO expresion
Rule 87    asignacion -> ID ABOR expresion
Rule 88    asignacion -> ID APAND expresion
Rule 89    asignacion -> ID ASHIFTD expresion
Rule 90    asignacion -> ID ASHIFTI expresion
Rule 91    asignacion -> ID AXORR expresion
Rule 92    accesos -> accesos acceso
Rule 93    accesos -> acceso
Rule 94    acceso -> CORIZQ expresion CORDER
Rule 95    acceso -> CORIZQ CORDER
Rule 96    acceso_lista -> ID accesos
Rule 97    acceso_lista -> STRUCT ID accesos
Rule 98    declaracion -> TIPO lista_id
Rule 99    declaracion -> TIPO lista_id IGUAL expresion
Rule 100   declaracion -> TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
Rule 101   declaracion -> TIPO lista_id IGUAL SCAN PARIZQ PARDER
Rule 102   lista_id -> lista_id COMA tipo_var
Rule 103   lista_id -> tipo_var
Rule 104   tipo_var -> ID
Rule 105   tipo_var -> acceso_lista
Rule 106   TIPO_DATO -> INT
Rule 107   TIPO_DATO -> FLOAT
Rule 108   TIPO_DATO -> CHAR
Rule 109   TIPO_DATO -> DOOBLE
Rule 110   TIPO_DATO -> VOID
Rule 111   TIPO -> INT
Rule 112   TIPO -> FLOAT
Rule 113   TIPO -> CHAR
Rule 114   TIPO -> DOOBLE
Rule 115   TIPO -> VOID
Rule 116   expresiones -> expresiones COMA expresion
Rule 117   expresiones -> expresion
Rule 118   expresion -> primitiva
Rule 119   expresion -> expresion_numerica
Rule 120   expresion -> expresion_relacional
Rule 121   expresion -> expresion_unaria
Rule 122   expresion -> expresion_logica
Rule 123   expresion -> expresion_bit_bit
Rule 124   expresion -> PARIZQ expresion PARDER
Rule 125   expresion_unaria -> MENOS expresion
Rule 126   expresion_logica -> expresion AND expresion
Rule 127   expresion_logica -> expresion OR expresion
Rule 128   expresion_logica -> expresion XOR expresion
Rule 129   expresion_logica -> NOT expresion
Rule 130   expresion_bit_bit -> expresion PAND expresion
Rule 131   expresion_bit_bit -> expresion BOR expresion
Rule 132   expresion_bit_bit -> expresion XORR expresion
Rule 133   expresion_bit_bit -> expresion SHIFTI expresion
Rule 134   expresion_bit_bit -> expresion SHIFTD expresion
Rule 135   expresion_bit_bit -> NOTR expresion
Rule 136   expresion_relacional -> expresion MENQUE expresion
Rule 137   expresion_relacional -> expresion MAYQUE expresion
Rule 138   expresion_relacional -> expresion MEIQUE expresion
Rule 139   expresion_relacional -> expresion MAIQUE expresion
Rule 140   expresion_relacional -> expresion IGUALQUE expresion
Rule 141   expresion_relacional -> expresion NIGUALQUE expresion
Rule 142   expresion_numerica -> expresion MAS expresion
Rule 143   expresion_numerica -> expresion MENOS expresion
Rule 144   expresion_numerica -> expresion POR expresion
Rule 145   expresion_numerica -> expresion DIVIDIDO expresion
Rule 146   expresion_numerica -> expresion RESTO expresion
Rule 147   primitiva -> ENTERO
Rule 148   primitiva -> DECIMAL
Rule 149   primitiva -> CADENA
Rule 150   primitiva -> CADENAR_CHAR
Rule 151   primitiva -> ID
Rule 152   primitiva -> acceso_struct
Rule 153   primitiva -> llamada
Rule 154   primitiva -> acceso_lista
Rule 155   primitiva -> array
Rule 156   array -> LLAVIZQ expresiones LLAVDER

Terminals, with rules where they appear

ABOR                 : 87
AND                  : 126
APAND                : 88
ARESTA               : 83
ARESTO               : 86
ASHIFTD              : 89
ASHIFTI              : 90
ASUMA                : 82
AXORR                : 91
BOR                  : 131
BREAK                : 62
CADENA               : 72 73 149
CADENAR_CHAR         : 150
CASE                 : 56 57 58
CHAR                 : 108 113
COMA                 : 14 72 102 116
CONTINUE             : 51
CORDER               : 94 95
CORIZQ               : 94 95
DECIMAL              : 148
DEFAULT              : 59 60 61
DIVIDIDA             : 85
DIVIDIDO             : 145
DO                   : 50
DOOBLE               : 109 114
DOSP                 : 44 56 57 58 59 60 61 63
ELSE                 : 66 67 71
ENTERO               : 147
FLOAT                : 107 112
FOR                  : 46
GOTO                 : 45
ID                   : 8 12 13 16 17 17 18 19 19 37 38 40 44 45 63 74 75 76 79 80 81 82 83 84 85 86 87 88 89 90 91 96 97 104 151
IF                   : 64 65 66 67 68 71
IGUAL                : 41 42 63 74 75 76 77 78 79 99 100 101
IGUALQUE             : 140
IMPRIMIR             : 72 73
INT                  : 106 111
LLAVDER              : 8 12 13 46 49 50 52 53 56 60 64 66 66 67 67 68 71 156
LLAVIZQ              : 8 12 13 46 49 50 52 53 56 60 64 66 66 67 67 68 71 156
MAIQUE               : 139
MAS                  : 80 80 142
MAYQUE               : 137
MEIQUE               : 138
MENOS                : 81 81 125 143
MENQUE               : 136
MULTIPLICATIVA       : 84
NIGUALQUE            : 141
NOT                  : 129
NOTR                 : 135
OR                   : 127
PAND                 : 18 19 76 130
PARDER               : 12 13 37 38 42 46 49 50 52 53 64 65 66 67 68 71 72 73 75 78 79 100 101 124
PARIZQ               : 12 13 37 38 42 46 49 50 52 53 64 65 66 67 68 71 72 73 75 78 79 100 101 124
POR                  : 144
PTCOMA               : 6 8 9 10 23 24 33 34 39 45 46 46 50 51 62 72 73
PUNTO                : 43
RESTO                : 146
RETURN               : 39
SCAN                 : 79 101
SHIFTD               : 134
SHIFTI               : 133
STRUCT               : 8 17 19 40 97
SWITCH               : 52 53
UNARIO               : 63
VOID                 : 110 115
WHILE                : 49 50
XOR                  : 128
XORR                 : 132
error                : 36

Nonterminals, with rules where they appear

TIPO                 : 12 13 16 18 98 99 100 101
TIPO_DATO            : 42 75 78 100
acceso               : 92 93
acceso_lista         : 77 78 105 154
acceso_struct        : 41 42 152
accesos              : 92 96 97
array                : 155
asignacion           : 23 46 47
caso                 : 54 55
declaracion          : 6 9 10 24 48
declaracion_struct   : 33
declaraciones        : 8 9
default_ins          : 52
definicion_struct    : 7
elseif               : 69 70
empty                : 2
expresion            : 39 41 42 46 49 50 52 53 56 57 58 63 63 63 64 65 66 67 68 71 74 75 76 77 78 82 83 84 85 86 87 88 89 90 91 94 99 100 116 117 124 125 126 126 127 127 128 128 129 130 130 131 131 132 132 133 133 134 134 135 136 136 137 137 138 138 139 139 140 140 141 141 142 142 143 143 144 144 145 145 146 146
expresion_bit_bit    : 123
expresion_logica     : 122
expresion_numerica   : 119
expresion_relacional : 120
expresion_unaria     : 121
expresiones          : 37 72 116 156
funcion              : 5
globales             : 1 3
iglobal              : 3 4
imprimir_instr       : 22
init                 : 0
ins_break            : 27
ins_continue         : 30
ins_etiqueta         : 31
ins_for              : 29
ins_goto             : 32
ins_return           : 35
ins_while            : 28
instruccion          : 20 21 57 59 65
instruccion_for      : 46
instrucciones        : 12 13 20 46 49 50 56 60 64 66 66 67 67 68 71
lelseif              : 67 68 69
lista_case           : 52 53 54
lista_id             : 40 98 99 100 101 102
llamada              : 34 153
parametro            : 14 15
parametros           : 13 14
primitiva            : 118
sentencia_if         : 25
sentencia_switch     : 26
tipo_var             : 43 43 102 103

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . globales
    (2) init -> . empty
    (3) globales -> . globales iglobal
    (4) globales -> . iglobal
    (11) empty -> .
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion PTCOMA
    (7) iglobal -> . definicion_struct
    (12) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (8) definicion_struct -> . STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID

    $end            reduce using rule 11 (empty -> .)
    STRUCT          shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    init                           shift and go to state 1
    globales                       shift and go to state 2
    empty                          shift and go to state 3
    iglobal                        shift and go to state 4
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    definicion_struct              shift and go to state 7
    TIPO                           shift and go to state 8

state 1

    (0) S' -> init .



state 2

    (1) init -> globales .
    (3) globales -> globales . iglobal
    (5) iglobal -> . funcion
    (6) iglobal -> . declaracion PTCOMA
    (7) iglobal -> . definicion_struct
    (12) funcion -> . TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> . TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (8) definicion_struct -> . STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID

    $end            reduce using rule 1 (init -> globales .)
    STRUCT          shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    iglobal                        shift and go to state 15
    funcion                        shift and go to state 5
    declaracion                    shift and go to state 6
    definicion_struct              shift and go to state 7
    TIPO                           shift and go to state 8

state 3

    (2) init -> empty .

    $end            reduce using rule 2 (init -> empty .)


state 4

    (4) globales -> iglobal .

    STRUCT          reduce using rule 4 (globales -> iglobal .)
    INT             reduce using rule 4 (globales -> iglobal .)
    FLOAT           reduce using rule 4 (globales -> iglobal .)
    CHAR            reduce using rule 4 (globales -> iglobal .)
    DOOBLE          reduce using rule 4 (globales -> iglobal .)
    VOID            reduce using rule 4 (globales -> iglobal .)
    $end            reduce using rule 4 (globales -> iglobal .)


state 5

    (5) iglobal -> funcion .

    STRUCT          reduce using rule 5 (iglobal -> funcion .)
    INT             reduce using rule 5 (iglobal -> funcion .)
    FLOAT           reduce using rule 5 (iglobal -> funcion .)
    CHAR            reduce using rule 5 (iglobal -> funcion .)
    DOOBLE          reduce using rule 5 (iglobal -> funcion .)
    VOID            reduce using rule 5 (iglobal -> funcion .)
    $end            reduce using rule 5 (iglobal -> funcion .)


state 6

    (6) iglobal -> declaracion . PTCOMA

    PTCOMA          shift and go to state 16


state 7

    (7) iglobal -> definicion_struct .

    STRUCT          reduce using rule 7 (iglobal -> definicion_struct .)
    INT             reduce using rule 7 (iglobal -> definicion_struct .)
    FLOAT           reduce using rule 7 (iglobal -> definicion_struct .)
    CHAR            reduce using rule 7 (iglobal -> definicion_struct .)
    DOOBLE          reduce using rule 7 (iglobal -> definicion_struct .)
    VOID            reduce using rule 7 (iglobal -> definicion_struct .)
    $end            reduce using rule 7 (iglobal -> definicion_struct .)


state 8

    (12) funcion -> TIPO . ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO . ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (98) declaracion -> TIPO . lista_id
    (99) declaracion -> TIPO . lista_id IGUAL expresion
    (100) declaracion -> TIPO . lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> TIPO . lista_id IGUAL SCAN PARIZQ PARDER
    (102) lista_id -> . lista_id COMA tipo_var
    (103) lista_id -> . tipo_var
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos

    ID              shift and go to state 17
    STRUCT          shift and go to state 21

    lista_id                       shift and go to state 18
    tipo_var                       shift and go to state 19
    acceso_lista                   shift and go to state 20

state 9

    (8) definicion_struct -> STRUCT . ID LLAVIZQ declaraciones LLAVDER PTCOMA

    ID              shift and go to state 22


state 10

    (111) TIPO -> INT .

    ID              reduce using rule 111 (TIPO -> INT .)
    STRUCT          reduce using rule 111 (TIPO -> INT .)
    PAND            reduce using rule 111 (TIPO -> INT .)


state 11

    (112) TIPO -> FLOAT .

    ID              reduce using rule 112 (TIPO -> FLOAT .)
    STRUCT          reduce using rule 112 (TIPO -> FLOAT .)
    PAND            reduce using rule 112 (TIPO -> FLOAT .)


state 12

    (113) TIPO -> CHAR .

    ID              reduce using rule 113 (TIPO -> CHAR .)
    STRUCT          reduce using rule 113 (TIPO -> CHAR .)
    PAND            reduce using rule 113 (TIPO -> CHAR .)


state 13

    (114) TIPO -> DOOBLE .

    ID              reduce using rule 114 (TIPO -> DOOBLE .)
    STRUCT          reduce using rule 114 (TIPO -> DOOBLE .)
    PAND            reduce using rule 114 (TIPO -> DOOBLE .)


state 14

    (115) TIPO -> VOID .

    ID              reduce using rule 115 (TIPO -> VOID .)
    STRUCT          reduce using rule 115 (TIPO -> VOID .)
    PAND            reduce using rule 115 (TIPO -> VOID .)


state 15

    (3) globales -> globales iglobal .

    STRUCT          reduce using rule 3 (globales -> globales iglobal .)
    INT             reduce using rule 3 (globales -> globales iglobal .)
    FLOAT           reduce using rule 3 (globales -> globales iglobal .)
    CHAR            reduce using rule 3 (globales -> globales iglobal .)
    DOOBLE          reduce using rule 3 (globales -> globales iglobal .)
    VOID            reduce using rule 3 (globales -> globales iglobal .)
    $end            reduce using rule 3 (globales -> globales iglobal .)


state 16

    (6) iglobal -> declaracion PTCOMA .

    STRUCT          reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    INT             reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    FLOAT           reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    CHAR            reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    VOID            reduce using rule 6 (iglobal -> declaracion PTCOMA .)
    $end            reduce using rule 6 (iglobal -> declaracion PTCOMA .)


state 17

    (12) funcion -> TIPO ID . PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO ID . PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER
    (104) tipo_var -> ID .
    (96) acceso_lista -> ID . accesos
    (92) accesos -> . accesos acceso
    (93) accesos -> . acceso
    (94) acceso -> . CORIZQ expresion CORDER
    (95) acceso -> . CORIZQ CORDER

    PARIZQ          shift and go to state 23
    IGUAL           reduce using rule 104 (tipo_var -> ID .)
    COMA            reduce using rule 104 (tipo_var -> ID .)
    PTCOMA          reduce using rule 104 (tipo_var -> ID .)
    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 24
    acceso                         shift and go to state 25

state 18

    (98) declaracion -> TIPO lista_id .
    (99) declaracion -> TIPO lista_id . IGUAL expresion
    (100) declaracion -> TIPO lista_id . IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> TIPO lista_id . IGUAL SCAN PARIZQ PARDER
    (102) lista_id -> lista_id . COMA tipo_var

    PTCOMA          reduce using rule 98 (declaracion -> TIPO lista_id .)
    IGUAL           shift and go to state 27
    COMA            shift and go to state 28


state 19

    (103) lista_id -> tipo_var .

    IGUAL           reduce using rule 103 (lista_id -> tipo_var .)
    COMA            reduce using rule 103 (lista_id -> tipo_var .)
    PTCOMA          reduce using rule 103 (lista_id -> tipo_var .)


state 20

    (105) tipo_var -> acceso_lista .

    IGUAL           reduce using rule 105 (tipo_var -> acceso_lista .)
    COMA            reduce using rule 105 (tipo_var -> acceso_lista .)
    PTCOMA          reduce using rule 105 (tipo_var -> acceso_lista .)
    CORDER          reduce using rule 105 (tipo_var -> acceso_lista .)
    MAS             reduce using rule 105 (tipo_var -> acceso_lista .)
    MENOS           reduce using rule 105 (tipo_var -> acceso_lista .)
    POR             reduce using rule 105 (tipo_var -> acceso_lista .)
    DIVIDIDO        reduce using rule 105 (tipo_var -> acceso_lista .)
    RESTO           reduce using rule 105 (tipo_var -> acceso_lista .)
    MENQUE          reduce using rule 105 (tipo_var -> acceso_lista .)
    MAYQUE          reduce using rule 105 (tipo_var -> acceso_lista .)
    MEIQUE          reduce using rule 105 (tipo_var -> acceso_lista .)
    MAIQUE          reduce using rule 105 (tipo_var -> acceso_lista .)
    IGUALQUE        reduce using rule 105 (tipo_var -> acceso_lista .)
    NIGUALQUE       reduce using rule 105 (tipo_var -> acceso_lista .)
    AND             reduce using rule 105 (tipo_var -> acceso_lista .)
    OR              reduce using rule 105 (tipo_var -> acceso_lista .)
    XOR             reduce using rule 105 (tipo_var -> acceso_lista .)
    PAND            reduce using rule 105 (tipo_var -> acceso_lista .)
    BOR             reduce using rule 105 (tipo_var -> acceso_lista .)
    XORR            reduce using rule 105 (tipo_var -> acceso_lista .)
    SHIFTI          reduce using rule 105 (tipo_var -> acceso_lista .)
    SHIFTD          reduce using rule 105 (tipo_var -> acceso_lista .)
    PARDER          reduce using rule 105 (tipo_var -> acceso_lista .)
    LLAVDER         reduce using rule 105 (tipo_var -> acceso_lista .)
    UNARIO          reduce using rule 105 (tipo_var -> acceso_lista .)
    DOSP            reduce using rule 105 (tipo_var -> acceso_lista .)


state 21

    (97) acceso_lista -> STRUCT . ID accesos

    ID              shift and go to state 29


state 22

    (8) definicion_struct -> STRUCT ID . LLAVIZQ declaraciones LLAVDER PTCOMA

    LLAVIZQ         shift and go to state 30


state 23

    (12) funcion -> TIPO ID PARIZQ . PARDER LLAVIZQ instrucciones LLAVDER
    (13) funcion -> TIPO ID PARIZQ . parametros PARDER LLAVIZQ instrucciones LLAVDER
    (14) parametros -> . parametros COMA parametro
    (15) parametros -> . parametro
    (16) parametro -> . TIPO ID
    (17) parametro -> . STRUCT ID ID
    (18) parametro -> . TIPO PAND ID
    (19) parametro -> . STRUCT ID PAND ID
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID

    PARDER          shift and go to state 32
    STRUCT          shift and go to state 35
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 31
    parametros                     shift and go to state 33
    parametro                      shift and go to state 34

state 24

    (96) acceso_lista -> ID accesos .
    (92) accesos -> accesos . acceso
    (94) acceso -> . CORIZQ expresion CORDER
    (95) acceso -> . CORIZQ CORDER

    IGUAL           reduce using rule 96 (acceso_lista -> ID accesos .)
    COMA            reduce using rule 96 (acceso_lista -> ID accesos .)
    PTCOMA          reduce using rule 96 (acceso_lista -> ID accesos .)
    CORDER          reduce using rule 96 (acceso_lista -> ID accesos .)
    MAS             reduce using rule 96 (acceso_lista -> ID accesos .)
    MENOS           reduce using rule 96 (acceso_lista -> ID accesos .)
    POR             reduce using rule 96 (acceso_lista -> ID accesos .)
    DIVIDIDO        reduce using rule 96 (acceso_lista -> ID accesos .)
    RESTO           reduce using rule 96 (acceso_lista -> ID accesos .)
    MENQUE          reduce using rule 96 (acceso_lista -> ID accesos .)
    MAYQUE          reduce using rule 96 (acceso_lista -> ID accesos .)
    MEIQUE          reduce using rule 96 (acceso_lista -> ID accesos .)
    MAIQUE          reduce using rule 96 (acceso_lista -> ID accesos .)
    IGUALQUE        reduce using rule 96 (acceso_lista -> ID accesos .)
    NIGUALQUE       reduce using rule 96 (acceso_lista -> ID accesos .)
    AND             reduce using rule 96 (acceso_lista -> ID accesos .)
    OR              reduce using rule 96 (acceso_lista -> ID accesos .)
    XOR             reduce using rule 96 (acceso_lista -> ID accesos .)
    PAND            reduce using rule 96 (acceso_lista -> ID accesos .)
    BOR             reduce using rule 96 (acceso_lista -> ID accesos .)
    XORR            reduce using rule 96 (acceso_lista -> ID accesos .)
    SHIFTI          reduce using rule 96 (acceso_lista -> ID accesos .)
    SHIFTD          reduce using rule 96 (acceso_lista -> ID accesos .)
    PUNTO           reduce using rule 96 (acceso_lista -> ID accesos .)
    PARDER          reduce using rule 96 (acceso_lista -> ID accesos .)
    LLAVDER         reduce using rule 96 (acceso_lista -> ID accesos .)
    UNARIO          reduce using rule 96 (acceso_lista -> ID accesos .)
    DOSP            reduce using rule 96 (acceso_lista -> ID accesos .)
    CORIZQ          shift and go to state 26

    acceso                         shift and go to state 36

state 25

    (93) accesos -> acceso .

    CORIZQ          reduce using rule 93 (accesos -> acceso .)
    IGUAL           reduce using rule 93 (accesos -> acceso .)
    COMA            reduce using rule 93 (accesos -> acceso .)
    PTCOMA          reduce using rule 93 (accesos -> acceso .)
    CORDER          reduce using rule 93 (accesos -> acceso .)
    MAS             reduce using rule 93 (accesos -> acceso .)
    MENOS           reduce using rule 93 (accesos -> acceso .)
    POR             reduce using rule 93 (accesos -> acceso .)
    DIVIDIDO        reduce using rule 93 (accesos -> acceso .)
    RESTO           reduce using rule 93 (accesos -> acceso .)
    MENQUE          reduce using rule 93 (accesos -> acceso .)
    MAYQUE          reduce using rule 93 (accesos -> acceso .)
    MEIQUE          reduce using rule 93 (accesos -> acceso .)
    MAIQUE          reduce using rule 93 (accesos -> acceso .)
    IGUALQUE        reduce using rule 93 (accesos -> acceso .)
    NIGUALQUE       reduce using rule 93 (accesos -> acceso .)
    AND             reduce using rule 93 (accesos -> acceso .)
    OR              reduce using rule 93 (accesos -> acceso .)
    XOR             reduce using rule 93 (accesos -> acceso .)
    PAND            reduce using rule 93 (accesos -> acceso .)
    BOR             reduce using rule 93 (accesos -> acceso .)
    XORR            reduce using rule 93 (accesos -> acceso .)
    SHIFTI          reduce using rule 93 (accesos -> acceso .)
    SHIFTD          reduce using rule 93 (accesos -> acceso .)
    PUNTO           reduce using rule 93 (accesos -> acceso .)
    PARDER          reduce using rule 93 (accesos -> acceso .)
    LLAVDER         reduce using rule 93 (accesos -> acceso .)
    UNARIO          reduce using rule 93 (accesos -> acceso .)
    DOSP            reduce using rule 93 (accesos -> acceso .)


state 26

    (94) acceso -> CORIZQ . expresion CORDER
    (95) acceso -> CORIZQ . CORDER
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    CORDER          shift and go to state 38
    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 37
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 27

    (99) declaracion -> TIPO lista_id IGUAL . expresion
    (100) declaracion -> TIPO lista_id IGUAL . PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> TIPO lista_id IGUAL . SCAN PARIZQ PARDER
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 61
    SCAN            shift and go to state 62
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 60
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 28

    (102) lista_id -> lista_id COMA . tipo_var
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos

    ID              shift and go to state 64
    STRUCT          shift and go to state 21

    tipo_var                       shift and go to state 63
    acceso_lista                   shift and go to state 20

state 29

    (97) acceso_lista -> STRUCT ID . accesos
    (92) accesos -> . accesos acceso
    (93) accesos -> . acceso
    (94) acceso -> . CORIZQ expresion CORDER
    (95) acceso -> . CORIZQ CORDER

    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 65
    acceso                         shift and go to state 25

state 30

    (8) definicion_struct -> STRUCT ID LLAVIZQ . declaraciones LLAVDER PTCOMA
    (9) declaraciones -> . declaraciones declaracion PTCOMA
    (10) declaraciones -> . declaracion PTCOMA
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    declaraciones                  shift and go to state 66
    declaracion                    shift and go to state 67
    TIPO                           shift and go to state 68

state 31

    (16) parametro -> TIPO . ID
    (18) parametro -> TIPO . PAND ID

    ID              shift and go to state 69
    PAND            shift and go to state 70


state 32

    (12) funcion -> TIPO ID PARIZQ PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 71


state 33

    (13) funcion -> TIPO ID PARIZQ parametros . PARDER LLAVIZQ instrucciones LLAVDER
    (14) parametros -> parametros . COMA parametro

    PARDER          shift and go to state 72
    COMA            shift and go to state 73


state 34

    (15) parametros -> parametro .

    PARDER          reduce using rule 15 (parametros -> parametro .)
    COMA            reduce using rule 15 (parametros -> parametro .)


state 35

    (17) parametro -> STRUCT . ID ID
    (19) parametro -> STRUCT . ID PAND ID

    ID              shift and go to state 74


state 36

    (92) accesos -> accesos acceso .

    CORIZQ          reduce using rule 92 (accesos -> accesos acceso .)
    IGUAL           reduce using rule 92 (accesos -> accesos acceso .)
    COMA            reduce using rule 92 (accesos -> accesos acceso .)
    PTCOMA          reduce using rule 92 (accesos -> accesos acceso .)
    CORDER          reduce using rule 92 (accesos -> accesos acceso .)
    MAS             reduce using rule 92 (accesos -> accesos acceso .)
    MENOS           reduce using rule 92 (accesos -> accesos acceso .)
    POR             reduce using rule 92 (accesos -> accesos acceso .)
    DIVIDIDO        reduce using rule 92 (accesos -> accesos acceso .)
    RESTO           reduce using rule 92 (accesos -> accesos acceso .)
    MENQUE          reduce using rule 92 (accesos -> accesos acceso .)
    MAYQUE          reduce using rule 92 (accesos -> accesos acceso .)
    MEIQUE          reduce using rule 92 (accesos -> accesos acceso .)
    MAIQUE          reduce using rule 92 (accesos -> accesos acceso .)
    IGUALQUE        reduce using rule 92 (accesos -> accesos acceso .)
    NIGUALQUE       reduce using rule 92 (accesos -> accesos acceso .)
    AND             reduce using rule 92 (accesos -> accesos acceso .)
    OR              reduce using rule 92 (accesos -> accesos acceso .)
    XOR             reduce using rule 92 (accesos -> accesos acceso .)
    PAND            reduce using rule 92 (accesos -> accesos acceso .)
    BOR             reduce using rule 92 (accesos -> accesos acceso .)
    XORR            reduce using rule 92 (accesos -> accesos acceso .)
    SHIFTI          reduce using rule 92 (accesos -> accesos acceso .)
    SHIFTD          reduce using rule 92 (accesos -> accesos acceso .)
    PUNTO           reduce using rule 92 (accesos -> accesos acceso .)
    PARDER          reduce using rule 92 (accesos -> accesos acceso .)
    LLAVDER         reduce using rule 92 (accesos -> accesos acceso .)
    UNARIO          reduce using rule 92 (accesos -> accesos acceso .)
    DOSP            reduce using rule 92 (accesos -> accesos acceso .)


state 37

    (94) acceso -> CORIZQ expresion . CORDER
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          shift and go to state 75
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 38

    (95) acceso -> CORIZQ CORDER .

    CORIZQ          reduce using rule 95 (acceso -> CORIZQ CORDER .)
    IGUAL           reduce using rule 95 (acceso -> CORIZQ CORDER .)
    COMA            reduce using rule 95 (acceso -> CORIZQ CORDER .)
    PTCOMA          reduce using rule 95 (acceso -> CORIZQ CORDER .)
    CORDER          reduce using rule 95 (acceso -> CORIZQ CORDER .)
    MAS             reduce using rule 95 (acceso -> CORIZQ CORDER .)
    MENOS           reduce using rule 95 (acceso -> CORIZQ CORDER .)
    POR             reduce using rule 95 (acceso -> CORIZQ CORDER .)
    DIVIDIDO        reduce using rule 95 (acceso -> CORIZQ CORDER .)
    RESTO           reduce using rule 95 (acceso -> CORIZQ CORDER .)
    MENQUE          reduce using rule 95 (acceso -> CORIZQ CORDER .)
    MAYQUE          reduce using rule 95 (acceso -> CORIZQ CORDER .)
    MEIQUE          reduce using rule 95 (acceso -> CORIZQ CORDER .)
    MAIQUE          reduce using rule 95 (acceso -> CORIZQ CORDER .)
    IGUALQUE        reduce using rule 95 (acceso -> CORIZQ CORDER .)
    NIGUALQUE       reduce using rule 95 (acceso -> CORIZQ CORDER .)
    AND             reduce using rule 95 (acceso -> CORIZQ CORDER .)
    OR              reduce using rule 95 (acceso -> CORIZQ CORDER .)
    XOR             reduce using rule 95 (acceso -> CORIZQ CORDER .)
    PAND            reduce using rule 95 (acceso -> CORIZQ CORDER .)
    BOR             reduce using rule 95 (acceso -> CORIZQ CORDER .)
    XORR            reduce using rule 95 (acceso -> CORIZQ CORDER .)
    SHIFTI          reduce using rule 95 (acceso -> CORIZQ CORDER .)
    SHIFTD          reduce using rule 95 (acceso -> CORIZQ CORDER .)
    PUNTO           reduce using rule 95 (acceso -> CORIZQ CORDER .)
    PARDER          reduce using rule 95 (acceso -> CORIZQ CORDER .)
    LLAVDER         reduce using rule 95 (acceso -> CORIZQ CORDER .)
    UNARIO          reduce using rule 95 (acceso -> CORIZQ CORDER .)
    DOSP            reduce using rule 95 (acceso -> CORIZQ CORDER .)


state 39

    (118) expresion -> primitiva .

    CORDER          reduce using rule 118 (expresion -> primitiva .)
    MAS             reduce using rule 118 (expresion -> primitiva .)
    MENOS           reduce using rule 118 (expresion -> primitiva .)
    POR             reduce using rule 118 (expresion -> primitiva .)
    DIVIDIDO        reduce using rule 118 (expresion -> primitiva .)
    RESTO           reduce using rule 118 (expresion -> primitiva .)
    MENQUE          reduce using rule 118 (expresion -> primitiva .)
    MAYQUE          reduce using rule 118 (expresion -> primitiva .)
    MEIQUE          reduce using rule 118 (expresion -> primitiva .)
    MAIQUE          reduce using rule 118 (expresion -> primitiva .)
    IGUALQUE        reduce using rule 118 (expresion -> primitiva .)
    NIGUALQUE       reduce using rule 118 (expresion -> primitiva .)
    AND             reduce using rule 118 (expresion -> primitiva .)
    OR              reduce using rule 118 (expresion -> primitiva .)
    XOR             reduce using rule 118 (expresion -> primitiva .)
    PAND            reduce using rule 118 (expresion -> primitiva .)
    BOR             reduce using rule 118 (expresion -> primitiva .)
    XORR            reduce using rule 118 (expresion -> primitiva .)
    SHIFTI          reduce using rule 118 (expresion -> primitiva .)
    SHIFTD          reduce using rule 118 (expresion -> primitiva .)
    PTCOMA          reduce using rule 118 (expresion -> primitiva .)
    PARDER          reduce using rule 118 (expresion -> primitiva .)
    LLAVDER         reduce using rule 118 (expresion -> primitiva .)
    COMA            reduce using rule 118 (expresion -> primitiva .)
    UNARIO          reduce using rule 118 (expresion -> primitiva .)
    DOSP            reduce using rule 118 (expresion -> primitiva .)


state 40

    (119) expresion -> expresion_numerica .

    CORDER          reduce using rule 119 (expresion -> expresion_numerica .)
    MAS             reduce using rule 119 (expresion -> expresion_numerica .)
    MENOS           reduce using rule 119 (expresion -> expresion_numerica .)
    POR             reduce using rule 119 (expresion -> expresion_numerica .)
    DIVIDIDO        reduce using rule 119 (expresion -> expresion_numerica .)
    RESTO           reduce using rule 119 (expresion -> expresion_numerica .)
    MENQUE          reduce using rule 119 (expresion -> expresion_numerica .)
    MAYQUE          reduce using rule 119 (expresion -> expresion_numerica .)
    MEIQUE          reduce using rule 119 (expresion -> expresion_numerica .)
    MAIQUE          reduce using rule 119 (expresion -> expresion_numerica .)
    IGUALQUE        reduce using rule 119 (expresion -> expresion_numerica .)
    NIGUALQUE       reduce using rule 119 (expresion -> expresion_numerica .)
    AND             reduce using rule 119 (expresion -> expresion_numerica .)
    OR              reduce using rule 119 (expresion -> expresion_numerica .)
    XOR             reduce using rule 119 (expresion -> expresion_numerica .)
    PAND            reduce using rule 119 (expresion -> expresion_numerica .)
    BOR             reduce using rule 119 (expresion -> expresion_numerica .)
    XORR            reduce using rule 119 (expresion -> expresion_numerica .)
    SHIFTI          reduce using rule 119 (expresion -> expresion_numerica .)
    SHIFTD          reduce using rule 119 (expresion -> expresion_numerica .)
    PTCOMA          reduce using rule 119 (expresion -> expresion_numerica .)
    PARDER          reduce using rule 119 (expresion -> expresion_numerica .)
    LLAVDER         reduce using rule 119 (expresion -> expresion_numerica .)
    COMA            reduce using rule 119 (expresion -> expresion_numerica .)
    UNARIO          reduce using rule 119 (expresion -> expresion_numerica .)
    DOSP            reduce using rule 119 (expresion -> expresion_numerica .)


state 41

    (120) expresion -> expresion_relacional .

    CORDER          reduce using rule 120 (expresion -> expresion_relacional .)
    MAS             reduce using rule 120 (expresion -> expresion_relacional .)
    MENOS           reduce using rule 120 (expresion -> expresion_relacional .)
    POR             reduce using rule 120 (expresion -> expresion_relacional .)
    DIVIDIDO        reduce using rule 120 (expresion -> expresion_relacional .)
    RESTO           reduce using rule 120 (expresion -> expresion_relacional .)
    MENQUE          reduce using rule 120 (expresion -> expresion_relacional .)
    MAYQUE          reduce using rule 120 (expresion -> expresion_relacional .)
    MEIQUE          reduce using rule 120 (expresion -> expresion_relacional .)
    MAIQUE          reduce using rule 120 (expresion -> expresion_relacional .)
    IGUALQUE        reduce using rule 120 (expresion -> expresion_relacional .)
    NIGUALQUE       reduce using rule 120 (expresion -> expresion_relacional .)
    AND             reduce using rule 120 (expresion -> expresion_relacional .)
    OR              reduce using rule 120 (expresion -> expresion_relacional .)
    XOR             reduce using rule 120 (expresion -> expresion_relacional .)
    PAND            reduce using rule 120 (expresion -> expresion_relacional .)
    BOR             reduce using rule 120 (expresion -> expresion_relacional .)
    XORR            reduce using rule 120 (expresion -> expresion_relacional .)
    SHIFTI          reduce using rule 120 (expresion -> expresion_relacional .)
    SHIFTD          reduce using rule 120 (expresion -> expresion_relacional .)
    PTCOMA          reduce using rule 120 (expresion -> expresion_relacional .)
    PARDER          reduce using rule 120 (expresion -> expresion_relacional .)
    LLAVDER         reduce using rule 120 (expresion -> expresion_relacional .)
    COMA            reduce using rule 120 (expresion -> expresion_relacional .)
    UNARIO          reduce using rule 120 (expresion -> expresion_relacional .)
    DOSP            reduce using rule 120 (expresion -> expresion_relacional .)


state 42

    (121) expresion -> expresion_unaria .

    CORDER          reduce using rule 121 (expresion -> expresion_unaria .)
    MAS             reduce using rule 121 (expresion -> expresion_unaria .)
    MENOS           reduce using rule 121 (expresion -> expresion_unaria .)
    POR             reduce using rule 121 (expresion -> expresion_unaria .)
    DIVIDIDO        reduce using rule 121 (expresion -> expresion_unaria .)
    RESTO           reduce using rule 121 (expresion -> expresion_unaria .)
    MENQUE          reduce using rule 121 (expresion -> expresion_unaria .)
    MAYQUE          reduce using rule 121 (expresion -> expresion_unaria .)
    MEIQUE          reduce using rule 121 (expresion -> expresion_unaria .)
    MAIQUE          reduce using rule 121 (expresion -> expresion_unaria .)
    IGUALQUE        reduce using rule 121 (expresion -> expresion_unaria .)
    NIGUALQUE       reduce using rule 121 (expresion -> expresion_unaria .)
    AND             reduce using rule 121 (expresion -> expresion_unaria .)
    OR              reduce using rule 121 (expresion -> expresion_unaria .)
    XOR             reduce using rule 121 (expresion -> expresion_unaria .)
    PAND            reduce using rule 121 (expresion -> expresion_unaria .)
    BOR             reduce using rule 121 (expresion -> expresion_unaria .)
    XORR            reduce using rule 121 (expresion -> expresion_unaria .)
    SHIFTI          reduce using rule 121 (expresion -> expresion_unaria .)
    SHIFTD          reduce using rule 121 (expresion -> expresion_unaria .)
    PTCOMA          reduce using rule 121 (expresion -> expresion_unaria .)
    PARDER          reduce using rule 121 (expresion -> expresion_unaria .)
    LLAVDER         reduce using rule 121 (expresion -> expresion_unaria .)
    COMA            reduce using rule 121 (expresion -> expresion_unaria .)
    UNARIO          reduce using rule 121 (expresion -> expresion_unaria .)
    DOSP            reduce using rule 121 (expresion -> expresion_unaria .)


state 43

    (122) expresion -> expresion_logica .

    CORDER          reduce using rule 122 (expresion -> expresion_logica .)
    MAS             reduce using rule 122 (expresion -> expresion_logica .)
    MENOS           reduce using rule 122 (expresion -> expresion_logica .)
    POR             reduce using rule 122 (expresion -> expresion_logica .)
    DIVIDIDO        reduce using rule 122 (expresion -> expresion_logica .)
    RESTO           reduce using rule 122 (expresion -> expresion_logica .)
    MENQUE          reduce using rule 122 (expresion -> expresion_logica .)
    MAYQUE          reduce using rule 122 (expresion -> expresion_logica .)
    MEIQUE          reduce using rule 122 (expresion -> expresion_logica .)
    MAIQUE          reduce using rule 122 (expresion -> expresion_logica .)
    IGUALQUE        reduce using rule 122 (expresion -> expresion_logica .)
    NIGUALQUE       reduce using rule 122 (expresion -> expresion_logica .)
    AND             reduce using rule 122 (expresion -> expresion_logica .)
    OR              reduce using rule 122 (expresion -> expresion_logica .)
    XOR             reduce using rule 122 (expresion -> expresion_logica .)
    PAND            reduce using rule 122 (expresion -> expresion_logica .)
    BOR             reduce using rule 122 (expresion -> expresion_logica .)
    XORR            reduce using rule 122 (expresion -> expresion_logica .)
    SHIFTI          reduce using rule 122 (expresion -> expresion_logica .)
    SHIFTD          reduce using rule 122 (expresion -> expresion_logica .)
    PTCOMA          reduce using rule 122 (expresion -> expresion_logica .)
    PARDER          reduce using rule 122 (expresion -> expresion_logica .)
    LLAVDER         reduce using rule 122 (expresion -> expresion_logica .)
    COMA            reduce using rule 122 (expresion -> expresion_logica .)
    UNARIO          reduce using rule 122 (expresion -> expresion_logica .)
    DOSP            reduce using rule 122 (expresion -> expresion_logica .)


state 44

    (123) expresion -> expresion_bit_bit .

    CORDER          reduce using rule 123 (expresion -> expresion_bit_bit .)
    MAS             reduce using rule 123 (expresion -> expresion_bit_bit .)
    MENOS           reduce using rule 123 (expresion -> expresion_bit_bit .)
    POR             reduce using rule 123 (expresion -> expresion_bit_bit .)
    DIVIDIDO        reduce using rule 123 (expresion -> expresion_bit_bit .)
    RESTO           reduce using rule 123 (expresion -> expresion_bit_bit .)
    MENQUE          reduce using rule 123 (expresion -> expresion_bit_bit .)
    MAYQUE          reduce using rule 123 (expresion -> expresion_bit_bit .)
    MEIQUE          reduce using rule 123 (expresion -> expresion_bit_bit .)
    MAIQUE          reduce using rule 123 (expresion -> expresion_bit_bit .)
    IGUALQUE        reduce using rule 123 (expresion -> expresion_bit_bit .)
    NIGUALQUE       reduce using rule 123 (expresion -> expresion_bit_bit .)
    AND             reduce using rule 123 (expresion -> expresion_bit_bit .)
    OR              reduce using rule 123 (expresion -> expresion_bit_bit .)
    XOR             reduce using rule 123 (expresion -> expresion_bit_bit .)
    PAND            reduce using rule 123 (expresion -> expresion_bit_bit .)
    BOR             reduce using rule 123 (expresion -> expresion_bit_bit .)
    XORR            reduce using rule 123 (expresion -> expresion_bit_bit .)
    SHIFTI          reduce using rule 123 (expresion -> expresion_bit_bit .)
    SHIFTD          reduce using rule 123 (expresion -> expresion_bit_bit .)
    PTCOMA          reduce using rule 123 (expresion -> expresion_bit_bit .)
    PARDER          reduce using rule 123 (expresion -> expresion_bit_bit .)
    LLAVDER         reduce using rule 123 (expresion -> expresion_bit_bit .)
    COMA            reduce using rule 123 (expresion -> expresion_bit_bit .)
    UNARIO          reduce using rule 123 (expresion -> expresion_bit_bit .)
    DOSP            reduce using rule 123 (expresion -> expresion_bit_bit .)


state 45

    (124) expresion -> PARIZQ . expresion PARDER
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 95
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 46

    (147) primitiva -> ENTERO .

    CORDER          reduce using rule 147 (primitiva -> ENTERO .)
    MAS             reduce using rule 147 (primitiva -> ENTERO .)
    MENOS           reduce using rule 147 (primitiva -> ENTERO .)
    POR             reduce using rule 147 (primitiva -> ENTERO .)
    DIVIDIDO        reduce using rule 147 (primitiva -> ENTERO .)
    RESTO           reduce using rule 147 (primitiva -> ENTERO .)
    MENQUE          reduce using rule 147 (primitiva -> ENTERO .)
    MAYQUE          reduce using rule 147 (primitiva -> ENTERO .)
    MEIQUE          reduce using rule 147 (primitiva -> ENTERO .)
    MAIQUE          reduce using rule 147 (primitiva -> ENTERO .)
    IGUALQUE        reduce using rule 147 (primitiva -> ENTERO .)
    NIGUALQUE       reduce using rule 147 (primitiva -> ENTERO .)
    AND             reduce using rule 147 (primitiva -> ENTERO .)
    OR              reduce using rule 147 (primitiva -> ENTERO .)
    XOR             reduce using rule 147 (primitiva -> ENTERO .)
    PAND            reduce using rule 147 (primitiva -> ENTERO .)
    BOR             reduce using rule 147 (primitiva -> ENTERO .)
    XORR            reduce using rule 147 (primitiva -> ENTERO .)
    SHIFTI          reduce using rule 147 (primitiva -> ENTERO .)
    SHIFTD          reduce using rule 147 (primitiva -> ENTERO .)
    PTCOMA          reduce using rule 147 (primitiva -> ENTERO .)
    PARDER          reduce using rule 147 (primitiva -> ENTERO .)
    LLAVDER         reduce using rule 147 (primitiva -> ENTERO .)
    COMA            reduce using rule 147 (primitiva -> ENTERO .)
    UNARIO          reduce using rule 147 (primitiva -> ENTERO .)
    DOSP            reduce using rule 147 (primitiva -> ENTERO .)


state 47

    (148) primitiva -> DECIMAL .

    CORDER          reduce using rule 148 (primitiva -> DECIMAL .)
    MAS             reduce using rule 148 (primitiva -> DECIMAL .)
    MENOS           reduce using rule 148 (primitiva -> DECIMAL .)
    POR             reduce using rule 148 (primitiva -> DECIMAL .)
    DIVIDIDO        reduce using rule 148 (primitiva -> DECIMAL .)
    RESTO           reduce using rule 148 (primitiva -> DECIMAL .)
    MENQUE          reduce using rule 148 (primitiva -> DECIMAL .)
    MAYQUE          reduce using rule 148 (primitiva -> DECIMAL .)
    MEIQUE          reduce using rule 148 (primitiva -> DECIMAL .)
    MAIQUE          reduce using rule 148 (primitiva -> DECIMAL .)
    IGUALQUE        reduce using rule 148 (primitiva -> DECIMAL .)
    NIGUALQUE       reduce using rule 148 (primitiva -> DECIMAL .)
    AND             reduce using rule 148 (primitiva -> DECIMAL .)
    OR              reduce using rule 148 (primitiva -> DECIMAL .)
    XOR             reduce using rule 148 (primitiva -> DECIMAL .)
    PAND            reduce using rule 148 (primitiva -> DECIMAL .)
    BOR             reduce using rule 148 (primitiva -> DECIMAL .)
    XORR            reduce using rule 148 (primitiva -> DECIMAL .)
    SHIFTI          reduce using rule 148 (primitiva -> DECIMAL .)
    SHIFTD          reduce using rule 148 (primitiva -> DECIMAL .)
    PTCOMA          reduce using rule 148 (primitiva -> DECIMAL .)
    PARDER          reduce using rule 148 (primitiva -> DECIMAL .)
    LLAVDER         reduce using rule 148 (primitiva -> DECIMAL .)
    COMA            reduce using rule 148 (primitiva -> DECIMAL .)
    UNARIO          reduce using rule 148 (primitiva -> DECIMAL .)
    DOSP            reduce using rule 148 (primitiva -> DECIMAL .)


state 48

    (149) primitiva -> CADENA .

    CORDER          reduce using rule 149 (primitiva -> CADENA .)
    MAS             reduce using rule 149 (primitiva -> CADENA .)
    MENOS           reduce using rule 149 (primitiva -> CADENA .)
    POR             reduce using rule 149 (primitiva -> CADENA .)
    DIVIDIDO        reduce using rule 149 (primitiva -> CADENA .)
    RESTO           reduce using rule 149 (primitiva -> CADENA .)
    MENQUE          reduce using rule 149 (primitiva -> CADENA .)
    MAYQUE          reduce using rule 149 (primitiva -> CADENA .)
    MEIQUE          reduce using rule 149 (primitiva -> CADENA .)
    MAIQUE          reduce using rule 149 (primitiva -> CADENA .)
    IGUALQUE        reduce using rule 149 (primitiva -> CADENA .)
    NIGUALQUE       reduce using rule 149 (primitiva -> CADENA .)
    AND             reduce using rule 149 (primitiva -> CADENA .)
    OR              reduce using rule 149 (primitiva -> CADENA .)
    XOR             reduce using rule 149 (primitiva -> CADENA .)
    PAND            reduce using rule 149 (primitiva -> CADENA .)
    BOR             reduce using rule 149 (primitiva -> CADENA .)
    XORR            reduce using rule 149 (primitiva -> CADENA .)
    SHIFTI          reduce using rule 149 (primitiva -> CADENA .)
    SHIFTD          reduce using rule 149 (primitiva -> CADENA .)
    PTCOMA          reduce using rule 149 (primitiva -> CADENA .)
    PARDER          reduce using rule 149 (primitiva -> CADENA .)
    LLAVDER         reduce using rule 149 (primitiva -> CADENA .)
    COMA            reduce using rule 149 (primitiva -> CADENA .)
    UNARIO          reduce using rule 149 (primitiva -> CADENA .)
    DOSP            reduce using rule 149 (primitiva -> CADENA .)


state 49

    (150) primitiva -> CADENAR_CHAR .

    CORDER          reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    MAS             reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    MENOS           reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    POR             reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    DIVIDIDO        reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    RESTO           reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    MENQUE          reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    MAYQUE          reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    MEIQUE          reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    MAIQUE          reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    IGUALQUE        reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    NIGUALQUE       reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    AND             reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    OR              reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    XOR             reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    PAND            reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    BOR             reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    XORR            reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    SHIFTI          reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    SHIFTD          reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    PTCOMA          reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    PARDER          reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    LLAVDER         reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    COMA            reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    UNARIO          reduce using rule 150 (primitiva -> CADENAR_CHAR .)
    DOSP            reduce using rule 150 (primitiva -> CADENAR_CHAR .)


state 50

    (151) primitiva -> ID .
    (37) llamada -> ID . PARIZQ expresiones PARDER
    (38) llamada -> ID . PARIZQ PARDER
    (96) acceso_lista -> ID . accesos
    (104) tipo_var -> ID .
    (92) accesos -> . accesos acceso
    (93) accesos -> . acceso
    (94) acceso -> . CORIZQ expresion CORDER
    (95) acceso -> . CORIZQ CORDER

    CORDER          reduce using rule 151 (primitiva -> ID .)
    MAS             reduce using rule 151 (primitiva -> ID .)
    MENOS           reduce using rule 151 (primitiva -> ID .)
    POR             reduce using rule 151 (primitiva -> ID .)
    DIVIDIDO        reduce using rule 151 (primitiva -> ID .)
    RESTO           reduce using rule 151 (primitiva -> ID .)
    MENQUE          reduce using rule 151 (primitiva -> ID .)
    MAYQUE          reduce using rule 151 (primitiva -> ID .)
    MEIQUE          reduce using rule 151 (primitiva -> ID .)
    MAIQUE          reduce using rule 151 (primitiva -> ID .)
    IGUALQUE        reduce using rule 151 (primitiva -> ID .)
    NIGUALQUE       reduce using rule 151 (primitiva -> ID .)
    AND             reduce using rule 151 (primitiva -> ID .)
    OR              reduce using rule 151 (primitiva -> ID .)
    XOR             reduce using rule 151 (primitiva -> ID .)
    PAND            reduce using rule 151 (primitiva -> ID .)
    BOR             reduce using rule 151 (primitiva -> ID .)
    XORR            reduce using rule 151 (primitiva -> ID .)
    SHIFTI          reduce using rule 151 (primitiva -> ID .)
    SHIFTD          reduce using rule 151 (primitiva -> ID .)
    PTCOMA          reduce using rule 151 (primitiva -> ID .)
    PARDER          reduce using rule 151 (primitiva -> ID .)
    LLAVDER         reduce using rule 151 (primitiva -> ID .)
    COMA            reduce using rule 151 (primitiva -> ID .)
    UNARIO          reduce using rule 151 (primitiva -> ID .)
    DOSP            reduce using rule 151 (primitiva -> ID .)
    PARIZQ          shift and go to state 96
    PUNTO           reduce using rule 104 (tipo_var -> ID .)
    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 24
    acceso                         shift and go to state 25

state 51

    (152) primitiva -> acceso_struct .

    CORDER          reduce using rule 152 (primitiva -> acceso_struct .)
    MAS             reduce using rule 152 (primitiva -> acceso_struct .)
    MENOS           reduce using rule 152 (primitiva -> acceso_struct .)
    POR             reduce using rule 152 (primitiva -> acceso_struct .)
    DIVIDIDO        reduce using rule 152 (primitiva -> acceso_struct .)
    RESTO           reduce using rule 152 (primitiva -> acceso_struct .)
    MENQUE          reduce using rule 152 (primitiva -> acceso_struct .)
    MAYQUE          reduce using rule 152 (primitiva -> acceso_struct .)
    MEIQUE          reduce using rule 152 (primitiva -> acceso_struct .)
    MAIQUE          reduce using rule 152 (primitiva -> acceso_struct .)
    IGUALQUE        reduce using rule 152 (primitiva -> acceso_struct .)
    NIGUALQUE       reduce using rule 152 (primitiva -> acceso_struct .)
    AND             reduce using rule 152 (primitiva -> acceso_struct .)
    OR              reduce using rule 152 (primitiva -> acceso_struct .)
    XOR             reduce using rule 152 (primitiva -> acceso_struct .)
    PAND            reduce using rule 152 (primitiva -> acceso_struct .)
    BOR             reduce using rule 152 (primitiva -> acceso_struct .)
    XORR            reduce using rule 152 (primitiva -> acceso_struct .)
    SHIFTI          reduce using rule 152 (primitiva -> acceso_struct .)
    SHIFTD          reduce using rule 152 (primitiva -> acceso_struct .)
    PTCOMA          reduce using rule 152 (primitiva -> acceso_struct .)
    PARDER          reduce using rule 152 (primitiva -> acceso_struct .)
    LLAVDER         reduce using rule 152 (primitiva -> acceso_struct .)
    COMA            reduce using rule 152 (primitiva -> acceso_struct .)
    UNARIO          reduce using rule 152 (primitiva -> acceso_struct .)
    DOSP            reduce using rule 152 (primitiva -> acceso_struct .)


state 52

    (153) primitiva -> llamada .

    CORDER          reduce using rule 153 (primitiva -> llamada .)
    MAS             reduce using rule 153 (primitiva -> llamada .)
    MENOS           reduce using rule 153 (primitiva -> llamada .)
    POR             reduce using rule 153 (primitiva -> llamada .)
    DIVIDIDO        reduce using rule 153 (primitiva -> llamada .)
    RESTO           reduce using rule 153 (primitiva -> llamada .)
    MENQUE          reduce using rule 153 (primitiva -> llamada .)
    MAYQUE          reduce using rule 153 (primitiva -> llamada .)
    MEIQUE          reduce using rule 153 (primitiva -> llamada .)
    MAIQUE          reduce using rule 153 (primitiva -> llamada .)
    IGUALQUE        reduce using rule 153 (primitiva -> llamada .)
    NIGUALQUE       reduce using rule 153 (primitiva -> llamada .)
    AND             reduce using rule 153 (primitiva -> llamada .)
    OR              reduce using rule 153 (primitiva -> llamada .)
    XOR             reduce using rule 153 (primitiva -> llamada .)
    PAND            reduce using rule 153 (primitiva -> llamada .)
    BOR             reduce using rule 153 (primitiva -> llamada .)
    XORR            reduce using rule 153 (primitiva -> llamada .)
    SHIFTI          reduce using rule 153 (primitiva -> llamada .)
    SHIFTD          reduce using rule 153 (primitiva -> llamada .)
    PTCOMA          reduce using rule 153 (primitiva -> llamada .)
    PARDER          reduce using rule 153 (primitiva -> llamada .)
    LLAVDER         reduce using rule 153 (primitiva -> llamada .)
    COMA            reduce using rule 153 (primitiva -> llamada .)
    UNARIO          reduce using rule 153 (primitiva -> llamada .)
    DOSP            reduce using rule 153 (primitiva -> llamada .)


state 53

    (154) primitiva -> acceso_lista .
    (105) tipo_var -> acceso_lista .

    CORDER          reduce using rule 154 (primitiva -> acceso_lista .)
    MAS             reduce using rule 154 (primitiva -> acceso_lista .)
    MENOS           reduce using rule 154 (primitiva -> acceso_lista .)
    POR             reduce using rule 154 (primitiva -> acceso_lista .)
    DIVIDIDO        reduce using rule 154 (primitiva -> acceso_lista .)
    RESTO           reduce using rule 154 (primitiva -> acceso_lista .)
    MENQUE          reduce using rule 154 (primitiva -> acceso_lista .)
    MAYQUE          reduce using rule 154 (primitiva -> acceso_lista .)
    MEIQUE          reduce using rule 154 (primitiva -> acceso_lista .)
    MAIQUE          reduce using rule 154 (primitiva -> acceso_lista .)
    IGUALQUE        reduce using rule 154 (primitiva -> acceso_lista .)
    NIGUALQUE       reduce using rule 154 (primitiva -> acceso_lista .)
    AND             reduce using rule 154 (primitiva -> acceso_lista .)
    OR              reduce using rule 154 (primitiva -> acceso_lista .)
    XOR             reduce using rule 154 (primitiva -> acceso_lista .)
    PAND            reduce using rule 154 (primitiva -> acceso_lista .)
    BOR             reduce using rule 154 (primitiva -> acceso_lista .)
    XORR            reduce using rule 154 (primitiva -> acceso_lista .)
    SHIFTI          reduce using rule 154 (primitiva -> acceso_lista .)
    SHIFTD          reduce using rule 154 (primitiva -> acceso_lista .)
    PTCOMA          reduce using rule 154 (primitiva -> acceso_lista .)
    PARDER          reduce using rule 154 (primitiva -> acceso_lista .)
    LLAVDER         reduce using rule 154 (primitiva -> acceso_lista .)
    COMA            reduce using rule 154 (primitiva -> acceso_lista .)
    UNARIO          reduce using rule 154 (primitiva -> acceso_lista .)
    DOSP            reduce using rule 154 (primitiva -> acceso_lista .)
    PUNTO           reduce using rule 105 (tipo_var -> acceso_lista .)


state 54

    (155) primitiva -> array .

    CORDER          reduce using rule 155 (primitiva -> array .)
    MAS             reduce using rule 155 (primitiva -> array .)
    MENOS           reduce using rule 155 (primitiva -> array .)
    POR             reduce using rule 155 (primitiva -> array .)
    DIVIDIDO        reduce using rule 155 (primitiva -> array .)
    RESTO           reduce using rule 155 (primitiva -> array .)
    MENQUE          reduce using rule 155 (primitiva -> array .)
    MAYQUE          reduce using rule 155 (primitiva -> array .)
    MEIQUE          reduce using rule 155 (primitiva -> array .)
    MAIQUE          reduce using rule 155 (primitiva -> array .)
    IGUALQUE        reduce using rule 155 (primitiva -> array .)
    NIGUALQUE       reduce using rule 155 (primitiva -> array .)
    AND             reduce using rule 155 (primitiva -> array .)
    OR              reduce using rule 155 (primitiva -> array .)
    XOR             reduce using rule 155 (primitiva -> array .)
    PAND            reduce using rule 155 (primitiva -> array .)
    BOR             reduce using rule 155 (primitiva -> array .)
    XORR            reduce using rule 155 (primitiva -> array .)
    SHIFTI          reduce using rule 155 (primitiva -> array .)
    SHIFTD          reduce using rule 155 (primitiva -> array .)
    PTCOMA          reduce using rule 155 (primitiva -> array .)
    PARDER          reduce using rule 155 (primitiva -> array .)
    LLAVDER         reduce using rule 155 (primitiva -> array .)
    COMA            reduce using rule 155 (primitiva -> array .)
    UNARIO          reduce using rule 155 (primitiva -> array .)
    DOSP            reduce using rule 155 (primitiva -> array .)


state 55

    (125) expresion_unaria -> MENOS . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 97
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 56

    (129) expresion_logica -> NOT . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 98
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 57

    (135) expresion_bit_bit -> NOTR . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 99
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 58

    (43) acceso_struct -> tipo_var . PUNTO tipo_var

    PUNTO           shift and go to state 100


state 59

    (156) array -> LLAVIZQ . expresiones LLAVDER
    (116) expresiones -> . expresiones COMA expresion
    (117) expresiones -> . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresiones                    shift and go to state 101
    expresion                      shift and go to state 102
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 60

    (99) declaracion -> TIPO lista_id IGUAL expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 99 (declaracion -> TIPO lista_id IGUAL expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 61

    (100) declaracion -> TIPO lista_id IGUAL PARIZQ . TIPO_DATO PARDER expresion
    (124) expresion -> PARIZQ . expresion PARDER
    (106) TIPO_DATO -> . INT
    (107) TIPO_DATO -> . FLOAT
    (108) TIPO_DATO -> . CHAR
    (109) TIPO_DATO -> . DOOBLE
    (110) TIPO_DATO -> . VOID
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    INT             shift and go to state 104
    FLOAT           shift and go to state 105
    CHAR            shift and go to state 106
    DOOBLE          shift and go to state 107
    VOID            shift and go to state 108
    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    TIPO_DATO                      shift and go to state 103
    expresion                      shift and go to state 95
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 62

    (101) declaracion -> TIPO lista_id IGUAL SCAN . PARIZQ PARDER

    PARIZQ          shift and go to state 109


state 63

    (102) lista_id -> lista_id COMA tipo_var .

    IGUAL           reduce using rule 102 (lista_id -> lista_id COMA tipo_var .)
    COMA            reduce using rule 102 (lista_id -> lista_id COMA tipo_var .)
    PTCOMA          reduce using rule 102 (lista_id -> lista_id COMA tipo_var .)


state 64

    (104) tipo_var -> ID .
    (96) acceso_lista -> ID . accesos
    (92) accesos -> . accesos acceso
    (93) accesos -> . acceso
    (94) acceso -> . CORIZQ expresion CORDER
    (95) acceso -> . CORIZQ CORDER

    IGUAL           reduce using rule 104 (tipo_var -> ID .)
    COMA            reduce using rule 104 (tipo_var -> ID .)
    PTCOMA          reduce using rule 104 (tipo_var -> ID .)
    CORDER          reduce using rule 104 (tipo_var -> ID .)
    MAS             reduce using rule 104 (tipo_var -> ID .)
    MENOS           reduce using rule 104 (tipo_var -> ID .)
    POR             reduce using rule 104 (tipo_var -> ID .)
    DIVIDIDO        reduce using rule 104 (tipo_var -> ID .)
    RESTO           reduce using rule 104 (tipo_var -> ID .)
    MENQUE          reduce using rule 104 (tipo_var -> ID .)
    MAYQUE          reduce using rule 104 (tipo_var -> ID .)
    MEIQUE          reduce using rule 104 (tipo_var -> ID .)
    MAIQUE          reduce using rule 104 (tipo_var -> ID .)
    IGUALQUE        reduce using rule 104 (tipo_var -> ID .)
    NIGUALQUE       reduce using rule 104 (tipo_var -> ID .)
    AND             reduce using rule 104 (tipo_var -> ID .)
    OR              reduce using rule 104 (tipo_var -> ID .)
    XOR             reduce using rule 104 (tipo_var -> ID .)
    PAND            reduce using rule 104 (tipo_var -> ID .)
    BOR             reduce using rule 104 (tipo_var -> ID .)
    XORR            reduce using rule 104 (tipo_var -> ID .)
    SHIFTI          reduce using rule 104 (tipo_var -> ID .)
    SHIFTD          reduce using rule 104 (tipo_var -> ID .)
    PARDER          reduce using rule 104 (tipo_var -> ID .)
    LLAVDER         reduce using rule 104 (tipo_var -> ID .)
    UNARIO          reduce using rule 104 (tipo_var -> ID .)
    DOSP            reduce using rule 104 (tipo_var -> ID .)
    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 24
    acceso                         shift and go to state 25

state 65

    (97) acceso_lista -> STRUCT ID accesos .
    (92) accesos -> accesos . acceso
    (94) acceso -> . CORIZQ expresion CORDER
    (95) acceso -> . CORIZQ CORDER

    IGUAL           reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    COMA            reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    PTCOMA          reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    CORDER          reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    MAS             reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    MENOS           reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    POR             reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    DIVIDIDO        reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    RESTO           reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    MENQUE          reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    MAYQUE          reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    MEIQUE          reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    MAIQUE          reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    IGUALQUE        reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    NIGUALQUE       reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    AND             reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    OR              reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    XOR             reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    PAND            reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    BOR             reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    XORR            reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    SHIFTI          reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    SHIFTD          reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    PUNTO           reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    PARDER          reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    LLAVDER         reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    UNARIO          reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    DOSP            reduce using rule 97 (acceso_lista -> STRUCT ID accesos .)
    CORIZQ          shift and go to state 26

    acceso                         shift and go to state 36

state 66

    (8) definicion_struct -> STRUCT ID LLAVIZQ declaraciones . LLAVDER PTCOMA
    (9) declaraciones -> declaraciones . declaracion PTCOMA
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID

    LLAVDER         shift and go to state 110
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    declaracion                    shift and go to state 111
    TIPO                           shift and go to state 68

state 67

    (10) declaraciones -> declaracion . PTCOMA

    PTCOMA          shift and go to state 112


state 68

    (98) declaracion -> TIPO . lista_id
    (99) declaracion -> TIPO . lista_id IGUAL expresion
    (100) declaracion -> TIPO . lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> TIPO . lista_id IGUAL SCAN PARIZQ PARDER
    (102) lista_id -> . lista_id COMA tipo_var
    (103) lista_id -> . tipo_var
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos

    ID              shift and go to state 64
    STRUCT          shift and go to state 21

    lista_id                       shift and go to state 18
    tipo_var                       shift and go to state 19
    acceso_lista                   shift and go to state 20

state 69

    (16) parametro -> TIPO ID .

    PARDER          reduce using rule 16 (parametro -> TIPO ID .)
    COMA            reduce using rule 16 (parametro -> TIPO ID .)


state 70

    (18) parametro -> TIPO PAND . ID

    ID              shift and go to state 113


state 71

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ . instrucciones LLAVDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 68
    instrucciones                  shift and go to state 115
    instruccion                    shift and go to state 116
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    tipo_var                       shift and go to state 58

state 72

    (13) funcion -> TIPO ID PARIZQ parametros PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 145


state 73

    (14) parametros -> parametros COMA . parametro
    (16) parametro -> . TIPO ID
    (17) parametro -> . STRUCT ID ID
    (18) parametro -> . TIPO PAND ID
    (19) parametro -> . STRUCT ID PAND ID
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID

    STRUCT          shift and go to state 35
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    parametro                      shift and go to state 146
    TIPO                           shift and go to state 31

state 74

    (17) parametro -> STRUCT ID . ID
    (19) parametro -> STRUCT ID . PAND ID

    ID              shift and go to state 147
    PAND            shift and go to state 148


state 75

    (94) acceso -> CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    IGUAL           reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    POR             reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    RESTO           reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    MENQUE          reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    MAYQUE          reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    MEIQUE          reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    MAIQUE          reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    NIGUALQUE       reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    AND             reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    OR              reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    XOR             reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    PAND            reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    BOR             reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    XORR            reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    SHIFTI          reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    SHIFTD          reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    LLAVDER         reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    UNARIO          reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)
    DOSP            reduce using rule 94 (acceso -> CORIZQ expresion CORDER .)


state 76

    (142) expresion_numerica -> expresion MAS . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 149
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 77

    (143) expresion_numerica -> expresion MENOS . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 150
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 78

    (144) expresion_numerica -> expresion POR . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 151
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 79

    (145) expresion_numerica -> expresion DIVIDIDO . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 152
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 80

    (146) expresion_numerica -> expresion RESTO . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 153
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 81

    (136) expresion_relacional -> expresion MENQUE . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 154
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 82

    (137) expresion_relacional -> expresion MAYQUE . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 155
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 83

    (138) expresion_relacional -> expresion MEIQUE . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 156
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 84

    (139) expresion_relacional -> expresion MAIQUE . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 157
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 85

    (140) expresion_relacional -> expresion IGUALQUE . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 158
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 86

    (141) expresion_relacional -> expresion NIGUALQUE . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 159
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 87

    (126) expresion_logica -> expresion AND . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 160
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 88

    (127) expresion_logica -> expresion OR . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 161
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 89

    (128) expresion_logica -> expresion XOR . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 162
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 90

    (130) expresion_bit_bit -> expresion PAND . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 163
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 91

    (131) expresion_bit_bit -> expresion BOR . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 164
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 92

    (132) expresion_bit_bit -> expresion XORR . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 165
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 93

    (133) expresion_bit_bit -> expresion SHIFTI . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 166
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 94

    (134) expresion_bit_bit -> expresion SHIFTD . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 167
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 95

    (124) expresion -> PARIZQ expresion . PARDER
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 168
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 96

    (37) llamada -> ID PARIZQ . expresiones PARDER
    (38) llamada -> ID PARIZQ . PARDER
    (116) expresiones -> . expresiones COMA expresion
    (117) expresiones -> . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARDER          shift and go to state 170
    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresiones                    shift and go to state 169
    expresion                      shift and go to state 102
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 97

    (125) expresion_unaria -> MENOS expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    MAS             reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    MENOS           reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    POR             reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    DIVIDIDO        reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    RESTO           reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    MENQUE          reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    MAYQUE          reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    MEIQUE          reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    MAIQUE          reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    IGUALQUE        reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    NIGUALQUE       reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    AND             reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    OR              reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    XOR             reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    PAND            reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    BOR             reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    XORR            reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    SHIFTI          reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    SHIFTD          reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    PTCOMA          reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    PARDER          reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    LLAVDER         reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    COMA            reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    UNARIO          reduce using rule 125 (expresion_unaria -> MENOS expresion .)
    DOSP            reduce using rule 125 (expresion_unaria -> MENOS expresion .)

  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! POR             [ shift and go to state 78 ]
  ! DIVIDIDO        [ shift and go to state 79 ]
  ! RESTO           [ shift and go to state 80 ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]
  ! SHIFTI          [ shift and go to state 93 ]
  ! SHIFTD          [ shift and go to state 94 ]


state 98

    (129) expresion_logica -> NOT expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 129 (expresion_logica -> NOT expresion .)
    MAS             reduce using rule 129 (expresion_logica -> NOT expresion .)
    MENOS           reduce using rule 129 (expresion_logica -> NOT expresion .)
    POR             reduce using rule 129 (expresion_logica -> NOT expresion .)
    DIVIDIDO        reduce using rule 129 (expresion_logica -> NOT expresion .)
    RESTO           reduce using rule 129 (expresion_logica -> NOT expresion .)
    MENQUE          reduce using rule 129 (expresion_logica -> NOT expresion .)
    MAYQUE          reduce using rule 129 (expresion_logica -> NOT expresion .)
    MEIQUE          reduce using rule 129 (expresion_logica -> NOT expresion .)
    MAIQUE          reduce using rule 129 (expresion_logica -> NOT expresion .)
    IGUALQUE        reduce using rule 129 (expresion_logica -> NOT expresion .)
    NIGUALQUE       reduce using rule 129 (expresion_logica -> NOT expresion .)
    AND             reduce using rule 129 (expresion_logica -> NOT expresion .)
    OR              reduce using rule 129 (expresion_logica -> NOT expresion .)
    XOR             reduce using rule 129 (expresion_logica -> NOT expresion .)
    PAND            reduce using rule 129 (expresion_logica -> NOT expresion .)
    BOR             reduce using rule 129 (expresion_logica -> NOT expresion .)
    XORR            reduce using rule 129 (expresion_logica -> NOT expresion .)
    SHIFTI          reduce using rule 129 (expresion_logica -> NOT expresion .)
    SHIFTD          reduce using rule 129 (expresion_logica -> NOT expresion .)
    PTCOMA          reduce using rule 129 (expresion_logica -> NOT expresion .)
    PARDER          reduce using rule 129 (expresion_logica -> NOT expresion .)
    LLAVDER         reduce using rule 129 (expresion_logica -> NOT expresion .)
    COMA            reduce using rule 129 (expresion_logica -> NOT expresion .)
    UNARIO          reduce using rule 129 (expresion_logica -> NOT expresion .)
    DOSP            reduce using rule 129 (expresion_logica -> NOT expresion .)

  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! POR             [ shift and go to state 78 ]
  ! DIVIDIDO        [ shift and go to state 79 ]
  ! RESTO           [ shift and go to state 80 ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]
  ! SHIFTI          [ shift and go to state 93 ]
  ! SHIFTD          [ shift and go to state 94 ]


state 99

    (135) expresion_bit_bit -> NOTR expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    MAS             reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    MENOS           reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    POR             reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    DIVIDIDO        reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    RESTO           reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    MENQUE          reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    MAYQUE          reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    MEIQUE          reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    MAIQUE          reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    IGUALQUE        reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    NIGUALQUE       reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    AND             reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    OR              reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    XOR             reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    PAND            reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    BOR             reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    XORR            reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    SHIFTI          reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    SHIFTD          reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    PTCOMA          reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    PARDER          reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    LLAVDER         reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    COMA            reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    UNARIO          reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)
    DOSP            reduce using rule 135 (expresion_bit_bit -> NOTR expresion .)

  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! POR             [ shift and go to state 78 ]
  ! DIVIDIDO        [ shift and go to state 79 ]
  ! RESTO           [ shift and go to state 80 ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]
  ! SHIFTI          [ shift and go to state 93 ]
  ! SHIFTD          [ shift and go to state 94 ]


state 100

    (43) acceso_struct -> tipo_var PUNTO . tipo_var
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos

    ID              shift and go to state 64
    STRUCT          shift and go to state 21

    tipo_var                       shift and go to state 171
    acceso_lista                   shift and go to state 20

state 101

    (156) array -> LLAVIZQ expresiones . LLAVDER
    (116) expresiones -> expresiones . COMA expresion

    LLAVDER         shift and go to state 172
    COMA            shift and go to state 173


state 102

    (117) expresiones -> expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    LLAVDER         reduce using rule 117 (expresiones -> expresion .)
    COMA            reduce using rule 117 (expresiones -> expresion .)
    PARDER          reduce using rule 117 (expresiones -> expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 103

    (100) declaracion -> TIPO lista_id IGUAL PARIZQ TIPO_DATO . PARDER expresion

    PARDER          shift and go to state 174


state 104

    (106) TIPO_DATO -> INT .

    PARDER          reduce using rule 106 (TIPO_DATO -> INT .)


state 105

    (107) TIPO_DATO -> FLOAT .

    PARDER          reduce using rule 107 (TIPO_DATO -> FLOAT .)


state 106

    (108) TIPO_DATO -> CHAR .

    PARDER          reduce using rule 108 (TIPO_DATO -> CHAR .)


state 107

    (109) TIPO_DATO -> DOOBLE .

    PARDER          reduce using rule 109 (TIPO_DATO -> DOOBLE .)


state 108

    (110) TIPO_DATO -> VOID .

    PARDER          reduce using rule 110 (TIPO_DATO -> VOID .)


state 109

    (101) declaracion -> TIPO lista_id IGUAL SCAN PARIZQ . PARDER

    PARDER          shift and go to state 175


state 110

    (8) definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER . PTCOMA

    PTCOMA          shift and go to state 176


state 111

    (9) declaraciones -> declaraciones declaracion . PTCOMA

    PTCOMA          shift and go to state 177


state 112

    (10) declaraciones -> declaracion PTCOMA .

    LLAVDER         reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    INT             reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    FLOAT           reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    CHAR            reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 10 (declaraciones -> declaracion PTCOMA .)
    VOID            reduce using rule 10 (declaraciones -> declaracion PTCOMA .)


state 113

    (18) parametro -> TIPO PAND ID .

    PARDER          reduce using rule 18 (parametro -> TIPO PAND ID .)
    COMA            reduce using rule 18 (parametro -> TIPO PAND ID .)


state 114

    (63) asignacion -> ID . IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> ID . IGUAL expresion
    (75) asignacion -> ID . IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> ID . IGUAL PAND expresion
    (79) asignacion -> ID . IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> ID . MAS MAS
    (81) asignacion -> ID . MENOS MENOS
    (82) asignacion -> ID . ASUMA expresion
    (83) asignacion -> ID . ARESTA expresion
    (84) asignacion -> ID . MULTIPLICATIVA expresion
    (85) asignacion -> ID . DIVIDIDA expresion
    (86) asignacion -> ID . ARESTO expresion
    (87) asignacion -> ID . ABOR expresion
    (88) asignacion -> ID . APAND expresion
    (89) asignacion -> ID . ASHIFTD expresion
    (90) asignacion -> ID . ASHIFTI expresion
    (91) asignacion -> ID . AXORR expresion
    (44) ins_etiqueta -> ID . DOSP
    (37) llamada -> ID . PARIZQ expresiones PARDER
    (38) llamada -> ID . PARIZQ PARDER
    (96) acceso_lista -> ID . accesos
    (104) tipo_var -> ID .
    (92) accesos -> . accesos acceso
    (93) accesos -> . acceso
    (94) acceso -> . CORIZQ expresion CORDER
    (95) acceso -> . CORIZQ CORDER

    IGUAL           shift and go to state 178
    MAS             shift and go to state 180
    MENOS           shift and go to state 181
    ASUMA           shift and go to state 182
    ARESTA          shift and go to state 183
    MULTIPLICATIVA  shift and go to state 184
    DIVIDIDA        shift and go to state 185
    ARESTO          shift and go to state 186
    ABOR            shift and go to state 187
    APAND           shift and go to state 188
    ASHIFTD         shift and go to state 189
    ASHIFTI         shift and go to state 190
    AXORR           shift and go to state 191
    DOSP            shift and go to state 179
    PARIZQ          shift and go to state 96
    PUNTO           reduce using rule 104 (tipo_var -> ID .)
    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 24
    acceso                         shift and go to state 25

state 115

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones . LLAVDER
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 192
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 68
    instruccion                    shift and go to state 193
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    tipo_var                       shift and go to state 58

state 116

    (21) instrucciones -> instruccion .

    LLAVDER         reduce using rule 21 (instrucciones -> instruccion .)
    error           reduce using rule 21 (instrucciones -> instruccion .)
    IMPRIMIR        reduce using rule 21 (instrucciones -> instruccion .)
    ID              reduce using rule 21 (instrucciones -> instruccion .)
    IF              reduce using rule 21 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 21 (instrucciones -> instruccion .)
    BREAK           reduce using rule 21 (instrucciones -> instruccion .)
    WHILE           reduce using rule 21 (instrucciones -> instruccion .)
    DO              reduce using rule 21 (instrucciones -> instruccion .)
    FOR             reduce using rule 21 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 21 (instrucciones -> instruccion .)
    GOTO            reduce using rule 21 (instrucciones -> instruccion .)
    STRUCT          reduce using rule 21 (instrucciones -> instruccion .)
    RETURN          reduce using rule 21 (instrucciones -> instruccion .)
    INT             reduce using rule 21 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 21 (instrucciones -> instruccion .)
    CHAR            reduce using rule 21 (instrucciones -> instruccion .)
    DOOBLE          reduce using rule 21 (instrucciones -> instruccion .)
    VOID            reduce using rule 21 (instrucciones -> instruccion .)


state 117

    (22) instruccion -> imprimir_instr .

    LLAVDER         reduce using rule 22 (instruccion -> imprimir_instr .)
    error           reduce using rule 22 (instruccion -> imprimir_instr .)
    IMPRIMIR        reduce using rule 22 (instruccion -> imprimir_instr .)
    ID              reduce using rule 22 (instruccion -> imprimir_instr .)
    IF              reduce using rule 22 (instruccion -> imprimir_instr .)
    SWITCH          reduce using rule 22 (instruccion -> imprimir_instr .)
    BREAK           reduce using rule 22 (instruccion -> imprimir_instr .)
    WHILE           reduce using rule 22 (instruccion -> imprimir_instr .)
    DO              reduce using rule 22 (instruccion -> imprimir_instr .)
    FOR             reduce using rule 22 (instruccion -> imprimir_instr .)
    CONTINUE        reduce using rule 22 (instruccion -> imprimir_instr .)
    GOTO            reduce using rule 22 (instruccion -> imprimir_instr .)
    STRUCT          reduce using rule 22 (instruccion -> imprimir_instr .)
    RETURN          reduce using rule 22 (instruccion -> imprimir_instr .)
    INT             reduce using rule 22 (instruccion -> imprimir_instr .)
    FLOAT           reduce using rule 22 (instruccion -> imprimir_instr .)
    CHAR            reduce using rule 22 (instruccion -> imprimir_instr .)
    DOOBLE          reduce using rule 22 (instruccion -> imprimir_instr .)
    VOID            reduce using rule 22 (instruccion -> imprimir_instr .)
    DEFAULT         reduce using rule 22 (instruccion -> imprimir_instr .)
    CASE            reduce using rule 22 (instruccion -> imprimir_instr .)


state 118

    (23) instruccion -> asignacion . PTCOMA

    PTCOMA          shift and go to state 194


state 119

    (24) instruccion -> declaracion . PTCOMA

    PTCOMA          shift and go to state 195


state 120

    (25) instruccion -> sentencia_if .

    LLAVDER         reduce using rule 25 (instruccion -> sentencia_if .)
    error           reduce using rule 25 (instruccion -> sentencia_if .)
    IMPRIMIR        reduce using rule 25 (instruccion -> sentencia_if .)
    ID              reduce using rule 25 (instruccion -> sentencia_if .)
    IF              reduce using rule 25 (instruccion -> sentencia_if .)
    SWITCH          reduce using rule 25 (instruccion -> sentencia_if .)
    BREAK           reduce using rule 25 (instruccion -> sentencia_if .)
    WHILE           reduce using rule 25 (instruccion -> sentencia_if .)
    DO              reduce using rule 25 (instruccion -> sentencia_if .)
    FOR             reduce using rule 25 (instruccion -> sentencia_if .)
    CONTINUE        reduce using rule 25 (instruccion -> sentencia_if .)
    GOTO            reduce using rule 25 (instruccion -> sentencia_if .)
    STRUCT          reduce using rule 25 (instruccion -> sentencia_if .)
    RETURN          reduce using rule 25 (instruccion -> sentencia_if .)
    INT             reduce using rule 25 (instruccion -> sentencia_if .)
    FLOAT           reduce using rule 25 (instruccion -> sentencia_if .)
    CHAR            reduce using rule 25 (instruccion -> sentencia_if .)
    DOOBLE          reduce using rule 25 (instruccion -> sentencia_if .)
    VOID            reduce using rule 25 (instruccion -> sentencia_if .)
    DEFAULT         reduce using rule 25 (instruccion -> sentencia_if .)
    CASE            reduce using rule 25 (instruccion -> sentencia_if .)


state 121

    (26) instruccion -> sentencia_switch .

    LLAVDER         reduce using rule 26 (instruccion -> sentencia_switch .)
    error           reduce using rule 26 (instruccion -> sentencia_switch .)
    IMPRIMIR        reduce using rule 26 (instruccion -> sentencia_switch .)
    ID              reduce using rule 26 (instruccion -> sentencia_switch .)
    IF              reduce using rule 26 (instruccion -> sentencia_switch .)
    SWITCH          reduce using rule 26 (instruccion -> sentencia_switch .)
    BREAK           reduce using rule 26 (instruccion -> sentencia_switch .)
    WHILE           reduce using rule 26 (instruccion -> sentencia_switch .)
    DO              reduce using rule 26 (instruccion -> sentencia_switch .)
    FOR             reduce using rule 26 (instruccion -> sentencia_switch .)
    CONTINUE        reduce using rule 26 (instruccion -> sentencia_switch .)
    GOTO            reduce using rule 26 (instruccion -> sentencia_switch .)
    STRUCT          reduce using rule 26 (instruccion -> sentencia_switch .)
    RETURN          reduce using rule 26 (instruccion -> sentencia_switch .)
    INT             reduce using rule 26 (instruccion -> sentencia_switch .)
    FLOAT           reduce using rule 26 (instruccion -> sentencia_switch .)
    CHAR            reduce using rule 26 (instruccion -> sentencia_switch .)
    DOOBLE          reduce using rule 26 (instruccion -> sentencia_switch .)
    VOID            reduce using rule 26 (instruccion -> sentencia_switch .)
    DEFAULT         reduce using rule 26 (instruccion -> sentencia_switch .)
    CASE            reduce using rule 26 (instruccion -> sentencia_switch .)


state 122

    (27) instruccion -> ins_break .

    LLAVDER         reduce using rule 27 (instruccion -> ins_break .)
    error           reduce using rule 27 (instruccion -> ins_break .)
    IMPRIMIR        reduce using rule 27 (instruccion -> ins_break .)
    ID              reduce using rule 27 (instruccion -> ins_break .)
    IF              reduce using rule 27 (instruccion -> ins_break .)
    SWITCH          reduce using rule 27 (instruccion -> ins_break .)
    BREAK           reduce using rule 27 (instruccion -> ins_break .)
    WHILE           reduce using rule 27 (instruccion -> ins_break .)
    DO              reduce using rule 27 (instruccion -> ins_break .)
    FOR             reduce using rule 27 (instruccion -> ins_break .)
    CONTINUE        reduce using rule 27 (instruccion -> ins_break .)
    GOTO            reduce using rule 27 (instruccion -> ins_break .)
    STRUCT          reduce using rule 27 (instruccion -> ins_break .)
    RETURN          reduce using rule 27 (instruccion -> ins_break .)
    INT             reduce using rule 27 (instruccion -> ins_break .)
    FLOAT           reduce using rule 27 (instruccion -> ins_break .)
    CHAR            reduce using rule 27 (instruccion -> ins_break .)
    DOOBLE          reduce using rule 27 (instruccion -> ins_break .)
    VOID            reduce using rule 27 (instruccion -> ins_break .)
    DEFAULT         reduce using rule 27 (instruccion -> ins_break .)
    CASE            reduce using rule 27 (instruccion -> ins_break .)


state 123

    (28) instruccion -> ins_while .

    LLAVDER         reduce using rule 28 (instruccion -> ins_while .)
    error           reduce using rule 28 (instruccion -> ins_while .)
    IMPRIMIR        reduce using rule 28 (instruccion -> ins_while .)
    ID              reduce using rule 28 (instruccion -> ins_while .)
    IF              reduce using rule 28 (instruccion -> ins_while .)
    SWITCH          reduce using rule 28 (instruccion -> ins_while .)
    BREAK           reduce using rule 28 (instruccion -> ins_while .)
    WHILE           reduce using rule 28 (instruccion -> ins_while .)
    DO              reduce using rule 28 (instruccion -> ins_while .)
    FOR             reduce using rule 28 (instruccion -> ins_while .)
    CONTINUE        reduce using rule 28 (instruccion -> ins_while .)
    GOTO            reduce using rule 28 (instruccion -> ins_while .)
    STRUCT          reduce using rule 28 (instruccion -> ins_while .)
    RETURN          reduce using rule 28 (instruccion -> ins_while .)
    INT             reduce using rule 28 (instruccion -> ins_while .)
    FLOAT           reduce using rule 28 (instruccion -> ins_while .)
    CHAR            reduce using rule 28 (instruccion -> ins_while .)
    DOOBLE          reduce using rule 28 (instruccion -> ins_while .)
    VOID            reduce using rule 28 (instruccion -> ins_while .)
    DEFAULT         reduce using rule 28 (instruccion -> ins_while .)
    CASE            reduce using rule 28 (instruccion -> ins_while .)


state 124

    (29) instruccion -> ins_for .

    LLAVDER         reduce using rule 29 (instruccion -> ins_for .)
    error           reduce using rule 29 (instruccion -> ins_for .)
    IMPRIMIR        reduce using rule 29 (instruccion -> ins_for .)
    ID              reduce using rule 29 (instruccion -> ins_for .)
    IF              reduce using rule 29 (instruccion -> ins_for .)
    SWITCH          reduce using rule 29 (instruccion -> ins_for .)
    BREAK           reduce using rule 29 (instruccion -> ins_for .)
    WHILE           reduce using rule 29 (instruccion -> ins_for .)
    DO              reduce using rule 29 (instruccion -> ins_for .)
    FOR             reduce using rule 29 (instruccion -> ins_for .)
    CONTINUE        reduce using rule 29 (instruccion -> ins_for .)
    GOTO            reduce using rule 29 (instruccion -> ins_for .)
    STRUCT          reduce using rule 29 (instruccion -> ins_for .)
    RETURN          reduce using rule 29 (instruccion -> ins_for .)
    INT             reduce using rule 29 (instruccion -> ins_for .)
    FLOAT           reduce using rule 29 (instruccion -> ins_for .)
    CHAR            reduce using rule 29 (instruccion -> ins_for .)
    DOOBLE          reduce using rule 29 (instruccion -> ins_for .)
    VOID            reduce using rule 29 (instruccion -> ins_for .)
    DEFAULT         reduce using rule 29 (instruccion -> ins_for .)
    CASE            reduce using rule 29 (instruccion -> ins_for .)


state 125

    (30) instruccion -> ins_continue .

    LLAVDER         reduce using rule 30 (instruccion -> ins_continue .)
    error           reduce using rule 30 (instruccion -> ins_continue .)
    IMPRIMIR        reduce using rule 30 (instruccion -> ins_continue .)
    ID              reduce using rule 30 (instruccion -> ins_continue .)
    IF              reduce using rule 30 (instruccion -> ins_continue .)
    SWITCH          reduce using rule 30 (instruccion -> ins_continue .)
    BREAK           reduce using rule 30 (instruccion -> ins_continue .)
    WHILE           reduce using rule 30 (instruccion -> ins_continue .)
    DO              reduce using rule 30 (instruccion -> ins_continue .)
    FOR             reduce using rule 30 (instruccion -> ins_continue .)
    CONTINUE        reduce using rule 30 (instruccion -> ins_continue .)
    GOTO            reduce using rule 30 (instruccion -> ins_continue .)
    STRUCT          reduce using rule 30 (instruccion -> ins_continue .)
    RETURN          reduce using rule 30 (instruccion -> ins_continue .)
    INT             reduce using rule 30 (instruccion -> ins_continue .)
    FLOAT           reduce using rule 30 (instruccion -> ins_continue .)
    CHAR            reduce using rule 30 (instruccion -> ins_continue .)
    DOOBLE          reduce using rule 30 (instruccion -> ins_continue .)
    VOID            reduce using rule 30 (instruccion -> ins_continue .)
    DEFAULT         reduce using rule 30 (instruccion -> ins_continue .)
    CASE            reduce using rule 30 (instruccion -> ins_continue .)


state 126

    (31) instruccion -> ins_etiqueta .

    LLAVDER         reduce using rule 31 (instruccion -> ins_etiqueta .)
    error           reduce using rule 31 (instruccion -> ins_etiqueta .)
    IMPRIMIR        reduce using rule 31 (instruccion -> ins_etiqueta .)
    ID              reduce using rule 31 (instruccion -> ins_etiqueta .)
    IF              reduce using rule 31 (instruccion -> ins_etiqueta .)
    SWITCH          reduce using rule 31 (instruccion -> ins_etiqueta .)
    BREAK           reduce using rule 31 (instruccion -> ins_etiqueta .)
    WHILE           reduce using rule 31 (instruccion -> ins_etiqueta .)
    DO              reduce using rule 31 (instruccion -> ins_etiqueta .)
    FOR             reduce using rule 31 (instruccion -> ins_etiqueta .)
    CONTINUE        reduce using rule 31 (instruccion -> ins_etiqueta .)
    GOTO            reduce using rule 31 (instruccion -> ins_etiqueta .)
    STRUCT          reduce using rule 31 (instruccion -> ins_etiqueta .)
    RETURN          reduce using rule 31 (instruccion -> ins_etiqueta .)
    INT             reduce using rule 31 (instruccion -> ins_etiqueta .)
    FLOAT           reduce using rule 31 (instruccion -> ins_etiqueta .)
    CHAR            reduce using rule 31 (instruccion -> ins_etiqueta .)
    DOOBLE          reduce using rule 31 (instruccion -> ins_etiqueta .)
    VOID            reduce using rule 31 (instruccion -> ins_etiqueta .)
    DEFAULT         reduce using rule 31 (instruccion -> ins_etiqueta .)
    CASE            reduce using rule 31 (instruccion -> ins_etiqueta .)


state 127

    (32) instruccion -> ins_goto .

    LLAVDER         reduce using rule 32 (instruccion -> ins_goto .)
    error           reduce using rule 32 (instruccion -> ins_goto .)
    IMPRIMIR        reduce using rule 32 (instruccion -> ins_goto .)
    ID              reduce using rule 32 (instruccion -> ins_goto .)
    IF              reduce using rule 32 (instruccion -> ins_goto .)
    SWITCH          reduce using rule 32 (instruccion -> ins_goto .)
    BREAK           reduce using rule 32 (instruccion -> ins_goto .)
    WHILE           reduce using rule 32 (instruccion -> ins_goto .)
    DO              reduce using rule 32 (instruccion -> ins_goto .)
    FOR             reduce using rule 32 (instruccion -> ins_goto .)
    CONTINUE        reduce using rule 32 (instruccion -> ins_goto .)
    GOTO            reduce using rule 32 (instruccion -> ins_goto .)
    STRUCT          reduce using rule 32 (instruccion -> ins_goto .)
    RETURN          reduce using rule 32 (instruccion -> ins_goto .)
    INT             reduce using rule 32 (instruccion -> ins_goto .)
    FLOAT           reduce using rule 32 (instruccion -> ins_goto .)
    CHAR            reduce using rule 32 (instruccion -> ins_goto .)
    DOOBLE          reduce using rule 32 (instruccion -> ins_goto .)
    VOID            reduce using rule 32 (instruccion -> ins_goto .)
    DEFAULT         reduce using rule 32 (instruccion -> ins_goto .)
    CASE            reduce using rule 32 (instruccion -> ins_goto .)


state 128

    (33) instruccion -> declaracion_struct . PTCOMA

    PTCOMA          shift and go to state 196


state 129

    (34) instruccion -> llamada . PTCOMA

    PTCOMA          shift and go to state 197


state 130

    (35) instruccion -> ins_return .

    LLAVDER         reduce using rule 35 (instruccion -> ins_return .)
    error           reduce using rule 35 (instruccion -> ins_return .)
    IMPRIMIR        reduce using rule 35 (instruccion -> ins_return .)
    ID              reduce using rule 35 (instruccion -> ins_return .)
    IF              reduce using rule 35 (instruccion -> ins_return .)
    SWITCH          reduce using rule 35 (instruccion -> ins_return .)
    BREAK           reduce using rule 35 (instruccion -> ins_return .)
    WHILE           reduce using rule 35 (instruccion -> ins_return .)
    DO              reduce using rule 35 (instruccion -> ins_return .)
    FOR             reduce using rule 35 (instruccion -> ins_return .)
    CONTINUE        reduce using rule 35 (instruccion -> ins_return .)
    GOTO            reduce using rule 35 (instruccion -> ins_return .)
    STRUCT          reduce using rule 35 (instruccion -> ins_return .)
    RETURN          reduce using rule 35 (instruccion -> ins_return .)
    INT             reduce using rule 35 (instruccion -> ins_return .)
    FLOAT           reduce using rule 35 (instruccion -> ins_return .)
    CHAR            reduce using rule 35 (instruccion -> ins_return .)
    DOOBLE          reduce using rule 35 (instruccion -> ins_return .)
    VOID            reduce using rule 35 (instruccion -> ins_return .)
    DEFAULT         reduce using rule 35 (instruccion -> ins_return .)
    CASE            reduce using rule 35 (instruccion -> ins_return .)


state 131

    (36) instruccion -> error .

    LLAVDER         reduce using rule 36 (instruccion -> error .)
    error           reduce using rule 36 (instruccion -> error .)
    IMPRIMIR        reduce using rule 36 (instruccion -> error .)
    ID              reduce using rule 36 (instruccion -> error .)
    IF              reduce using rule 36 (instruccion -> error .)
    SWITCH          reduce using rule 36 (instruccion -> error .)
    BREAK           reduce using rule 36 (instruccion -> error .)
    WHILE           reduce using rule 36 (instruccion -> error .)
    DO              reduce using rule 36 (instruccion -> error .)
    FOR             reduce using rule 36 (instruccion -> error .)
    CONTINUE        reduce using rule 36 (instruccion -> error .)
    GOTO            reduce using rule 36 (instruccion -> error .)
    STRUCT          reduce using rule 36 (instruccion -> error .)
    RETURN          reduce using rule 36 (instruccion -> error .)
    INT             reduce using rule 36 (instruccion -> error .)
    FLOAT           reduce using rule 36 (instruccion -> error .)
    CHAR            reduce using rule 36 (instruccion -> error .)
    DOOBLE          reduce using rule 36 (instruccion -> error .)
    VOID            reduce using rule 36 (instruccion -> error .)
    DEFAULT         reduce using rule 36 (instruccion -> error .)
    CASE            reduce using rule 36 (instruccion -> error .)


state 132

    (72) imprimir_instr -> IMPRIMIR . PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> IMPRIMIR . PARIZQ CADENA PARDER PTCOMA

    PARIZQ          shift and go to state 198


state 133

    (41) asignacion -> acceso_struct . IGUAL expresion
    (42) asignacion -> acceso_struct . IGUAL PARIZQ TIPO_DATO PARDER expresion

    IGUAL           shift and go to state 199


state 134

    (77) asignacion -> acceso_lista . IGUAL expresion
    (78) asignacion -> acceso_lista . IGUAL PARIZQ TIPO_DATO PARDER expresion
    (105) tipo_var -> acceso_lista .

    IGUAL           shift and go to state 200
    PUNTO           reduce using rule 105 (tipo_var -> acceso_lista .)


state 135

    (64) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> IF . PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif

    PARIZQ          shift and go to state 201


state 136

    (52) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> SWITCH . PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER

    PARIZQ          shift and go to state 202


state 137

    (62) ins_break -> BREAK . PTCOMA

    PTCOMA          shift and go to state 203


state 138

    (49) ins_while -> WHILE . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 204


state 139

    (50) ins_while -> DO . LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA

    LLAVIZQ         shift and go to state 205


state 140

    (46) ins_for -> FOR . PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 206


state 141

    (51) ins_continue -> CONTINUE . PTCOMA

    PTCOMA          shift and go to state 207


state 142

    (45) ins_goto -> GOTO . ID PTCOMA

    ID              shift and go to state 208


state 143

    (40) declaracion_struct -> STRUCT . ID lista_id
    (97) acceso_lista -> STRUCT . ID accesos

    ID              shift and go to state 209


state 144

    (39) ins_return -> RETURN . expresion PTCOMA
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 210
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 145

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ . instrucciones LLAVDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 68
    instrucciones                  shift and go to state 211
    instruccion                    shift and go to state 116
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    tipo_var                       shift and go to state 58

state 146

    (14) parametros -> parametros COMA parametro .

    PARDER          reduce using rule 14 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 14 (parametros -> parametros COMA parametro .)


state 147

    (17) parametro -> STRUCT ID ID .

    PARDER          reduce using rule 17 (parametro -> STRUCT ID ID .)
    COMA            reduce using rule 17 (parametro -> STRUCT ID ID .)


state 148

    (19) parametro -> STRUCT ID PAND . ID

    ID              shift and go to state 212


state 149

    (142) expresion_numerica -> expresion MAS expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    MAS             reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    MENOS           reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    MENQUE          reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    MAYQUE          reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    MEIQUE          reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    MAIQUE          reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    NIGUALQUE       reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    AND             reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    OR              reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    XOR             reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    PAND            reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    BOR             reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    XORR            reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    SHIFTI          reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    SHIFTD          reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    PTCOMA          reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    PARDER          reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    LLAVDER         reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    COMA            reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    UNARIO          reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    DOSP            reduce using rule 142 (expresion_numerica -> expresion MAS expresion .)
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80

  ! POR             [ reduce using rule 142 (expresion_numerica -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 142 (expresion_numerica -> expresion MAS expresion .) ]
  ! RESTO           [ reduce using rule 142 (expresion_numerica -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]
  ! SHIFTI          [ shift and go to state 93 ]
  ! SHIFTD          [ shift and go to state 94 ]


state 150

    (143) expresion_numerica -> expresion MENOS expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    MAS             reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    MENOS           reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    MENQUE          reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    MAYQUE          reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    MEIQUE          reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    MAIQUE          reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    NIGUALQUE       reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    AND             reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    OR              reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    XOR             reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    PAND            reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    BOR             reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    XORR            reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTI          reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    SHIFTD          reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    PARDER          reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    LLAVDER         reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    COMA            reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    UNARIO          reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    DOSP            reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .)
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80

  ! POR             [ reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .) ]
  ! RESTO           [ reduce using rule 143 (expresion_numerica -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]
  ! SHIFTI          [ shift and go to state 93 ]
  ! SHIFTD          [ shift and go to state 94 ]


state 151

    (144) expresion_numerica -> expresion POR expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    MAS             reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    MENOS           reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    POR             reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    RESTO           reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    MENQUE          reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    MAYQUE          reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    MEIQUE          reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    MAIQUE          reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    IGUALQUE        reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    NIGUALQUE       reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    AND             reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    OR              reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    XOR             reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    PAND            reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    BOR             reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    XORR            reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    SHIFTI          reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    SHIFTD          reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    PTCOMA          reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    PARDER          reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    LLAVDER         reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    COMA            reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    UNARIO          reduce using rule 144 (expresion_numerica -> expresion POR expresion .)
    DOSP            reduce using rule 144 (expresion_numerica -> expresion POR expresion .)

  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! POR             [ shift and go to state 78 ]
  ! DIVIDIDO        [ shift and go to state 79 ]
  ! RESTO           [ shift and go to state 80 ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]
  ! SHIFTI          [ shift and go to state 93 ]
  ! SHIFTD          [ shift and go to state 94 ]


state 152

    (145) expresion_numerica -> expresion DIVIDIDO expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    RESTO           reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MENQUE          reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAYQUE          reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MEIQUE          reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    MAIQUE          reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    NIGUALQUE       reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XOR             reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PAND            reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    BOR             reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    XORR            reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTI          reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    SHIFTD          reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    LLAVDER         reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    UNARIO          reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)
    DOSP            reduce using rule 145 (expresion_numerica -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! POR             [ shift and go to state 78 ]
  ! DIVIDIDO        [ shift and go to state 79 ]
  ! RESTO           [ shift and go to state 80 ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]
  ! SHIFTI          [ shift and go to state 93 ]
  ! SHIFTD          [ shift and go to state 94 ]


state 153

    (146) expresion_numerica -> expresion RESTO expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    MAS             reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    MENOS           reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    POR             reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    DIVIDIDO        reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    RESTO           reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    MENQUE          reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    MAYQUE          reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    MEIQUE          reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    MAIQUE          reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    IGUALQUE        reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    NIGUALQUE       reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    AND             reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    OR              reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    XOR             reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    PAND            reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    BOR             reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    XORR            reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTI          reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    SHIFTD          reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    PTCOMA          reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    PARDER          reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    LLAVDER         reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    COMA            reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    UNARIO          reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)
    DOSP            reduce using rule 146 (expresion_numerica -> expresion RESTO expresion .)

  ! MAS             [ shift and go to state 76 ]
  ! MENOS           [ shift and go to state 77 ]
  ! POR             [ shift and go to state 78 ]
  ! DIVIDIDO        [ shift and go to state 79 ]
  ! RESTO           [ shift and go to state 80 ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]
  ! SHIFTI          [ shift and go to state 93 ]
  ! SHIFTD          [ shift and go to state 94 ]


state 154

    (136) expresion_relacional -> expresion MENQUE expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    MENQUE          reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    MAYQUE          reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    MEIQUE          reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    MAIQUE          reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    IGUALQUE        reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    NIGUALQUE       reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    AND             reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    XOR             reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    PAND            reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    BOR             reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    XORR            reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    PTCOMA          reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    PARDER          reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    LLAVDER         reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    COMA            reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    UNARIO          reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    DOSP            reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENOS           [ reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! POR             [ reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! RESTO           [ reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 136 (expresion_relacional -> expresion MENQUE expresion .) ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]


state 155

    (137) expresion_relacional -> expresion MAYQUE expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    MENQUE          reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    MAYQUE          reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    MEIQUE          reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    MAIQUE          reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    IGUALQUE        reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    NIGUALQUE       reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    AND             reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    XOR             reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    PAND            reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    BOR             reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    XORR            reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    PTCOMA          reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    PARDER          reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    LLAVDER         reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    COMA            reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    UNARIO          reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    DOSP            reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENOS           [ reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! POR             [ reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! RESTO           [ reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 137 (expresion_relacional -> expresion MAYQUE expresion .) ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]


state 156

    (138) expresion_relacional -> expresion MEIQUE expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    MENQUE          reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    MAYQUE          reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    MEIQUE          reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    MAIQUE          reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    IGUALQUE        reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    NIGUALQUE       reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    AND             reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    OR              reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    XOR             reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    PAND            reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    BOR             reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    XORR            reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    PTCOMA          reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    PARDER          reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    LLAVDER         reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    COMA            reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    UNARIO          reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    DOSP            reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENOS           [ reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! POR             [ reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! RESTO           [ reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 138 (expresion_relacional -> expresion MEIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]


state 157

    (139) expresion_relacional -> expresion MAIQUE expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    MENQUE          reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    MAYQUE          reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    MEIQUE          reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    MAIQUE          reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    IGUALQUE        reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    NIGUALQUE       reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    AND             reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    OR              reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    XOR             reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    PAND            reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    BOR             reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    XORR            reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    PTCOMA          reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    PARDER          reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    LLAVDER         reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    COMA            reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    UNARIO          reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    DOSP            reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENOS           [ reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! POR             [ reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! RESTO           [ reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 139 (expresion_relacional -> expresion MAIQUE expresion .) ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]


state 158

    (140) expresion_relacional -> expresion IGUALQUE expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    NIGUALQUE       reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    AND             reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    OR              reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    XOR             reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    PAND            reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    BOR             reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    XORR            reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    LLAVDER         reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    COMA            reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    UNARIO          reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    DOSP            reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 140 (expresion_relacional -> expresion IGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]


state 159

    (141) expresion_relacional -> expresion NIGUALQUE expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    IGUALQUE        reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    NIGUALQUE       reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    AND             reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    OR              reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XOR             reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PAND            reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    BOR             reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    XORR            reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PTCOMA          reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    PARDER          reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    LLAVDER         reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    COMA            reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    UNARIO          reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    DOSP            reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! RESTO           [ reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MENQUE          [ reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAYQUE          [ reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MEIQUE          [ reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! MAIQUE          [ reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTI          [ reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! SHIFTD          [ reduce using rule 141 (expresion_relacional -> expresion NIGUALQUE expresion .) ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]


state 160

    (126) expresion_logica -> expresion AND expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 126 (expresion_logica -> expresion AND expresion .)
    AND             reduce using rule 126 (expresion_logica -> expresion AND expresion .)
    OR              reduce using rule 126 (expresion_logica -> expresion AND expresion .)
    XOR             reduce using rule 126 (expresion_logica -> expresion AND expresion .)
    PTCOMA          reduce using rule 126 (expresion_logica -> expresion AND expresion .)
    PARDER          reduce using rule 126 (expresion_logica -> expresion AND expresion .)
    LLAVDER         reduce using rule 126 (expresion_logica -> expresion AND expresion .)
    COMA            reduce using rule 126 (expresion_logica -> expresion AND expresion .)
    UNARIO          reduce using rule 126 (expresion_logica -> expresion AND expresion .)
    DOSP            reduce using rule 126 (expresion_logica -> expresion AND expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! RESTO           [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! MENQUE          [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! MAYQUE          [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! MEIQUE          [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! MAIQUE          [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! PAND            [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! BOR             [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! XORR            [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTI          [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! SHIFTD          [ reduce using rule 126 (expresion_logica -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]


state 161

    (127) expresion_logica -> expresion OR expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 127 (expresion_logica -> expresion OR expresion .)
    OR              reduce using rule 127 (expresion_logica -> expresion OR expresion .)
    XOR             reduce using rule 127 (expresion_logica -> expresion OR expresion .)
    PTCOMA          reduce using rule 127 (expresion_logica -> expresion OR expresion .)
    PARDER          reduce using rule 127 (expresion_logica -> expresion OR expresion .)
    LLAVDER         reduce using rule 127 (expresion_logica -> expresion OR expresion .)
    COMA            reduce using rule 127 (expresion_logica -> expresion OR expresion .)
    UNARIO          reduce using rule 127 (expresion_logica -> expresion OR expresion .)
    DOSP            reduce using rule 127 (expresion_logica -> expresion OR expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! RESTO           [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! MENQUE          [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! MAYQUE          [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! MEIQUE          [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! MAIQUE          [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! PAND            [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! BOR             [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! XORR            [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTI          [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! SHIFTD          [ reduce using rule 127 (expresion_logica -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]


state 162

    (128) expresion_logica -> expresion XOR expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for RESTO resolved as shift
  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MEIQUE resolved as shift
  ! shift/reduce conflict for MAIQUE resolved as shift
  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for PAND resolved as shift
  ! shift/reduce conflict for BOR resolved as shift
  ! shift/reduce conflict for XORR resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
    CORDER          reduce using rule 128 (expresion_logica -> expresion XOR expresion .)
    PTCOMA          reduce using rule 128 (expresion_logica -> expresion XOR expresion .)
    PARDER          reduce using rule 128 (expresion_logica -> expresion XOR expresion .)
    LLAVDER         reduce using rule 128 (expresion_logica -> expresion XOR expresion .)
    COMA            reduce using rule 128 (expresion_logica -> expresion XOR expresion .)
    UNARIO          reduce using rule 128 (expresion_logica -> expresion XOR expresion .)
    DOSP            reduce using rule 128 (expresion_logica -> expresion XOR expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! MENOS           [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! POR             [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! RESTO           [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! MENQUE          [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! MAYQUE          [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! MEIQUE          [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! MAIQUE          [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! AND             [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! OR              [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! XOR             [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! PAND            [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! BOR             [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! XORR            [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTI          [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]
  ! SHIFTD          [ reduce using rule 128 (expresion_logica -> expresion XOR expresion .) ]


state 163

    (130) expresion_bit_bit -> expresion PAND expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    AND             reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    OR              reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    XOR             reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    PAND            reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    BOR             reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    XORR            reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    PTCOMA          reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    PARDER          reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    LLAVDER         reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    COMA            reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    UNARIO          reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    DOSP            reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENOS           [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! POR             [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! RESTO           [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MENQUE          [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAYQUE          [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MEIQUE          [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! MAIQUE          [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! IGUALQUE        [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTI          [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! SHIFTD          [ reduce using rule 130 (expresion_bit_bit -> expresion PAND expresion .) ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]


state 164

    (131) expresion_bit_bit -> expresion BOR expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .)
    AND             reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .)
    OR              reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .)
    XOR             reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .)
    BOR             reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .)
    PTCOMA          reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .)
    PARDER          reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .)
    LLAVDER         reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .)
    COMA            reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .)
    UNARIO          reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .)
    DOSP            reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    PAND            shift and go to state 90
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENOS           [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! POR             [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! RESTO           [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MENQUE          [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAYQUE          [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MEIQUE          [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! MAIQUE          [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! IGUALQUE        [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! PAND            [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! XORR            [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTI          [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! SHIFTD          [ reduce using rule 131 (expresion_bit_bit -> expresion BOR expresion .) ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! BOR             [ shift and go to state 91 ]


state 165

    (132) expresion_bit_bit -> expresion XORR expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    AND             reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    OR              reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    XOR             reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    BOR             reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    XORR            reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    PTCOMA          reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    PARDER          reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    LLAVDER         reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    COMA            reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    UNARIO          reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    DOSP            reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    PAND            shift and go to state 90
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94

  ! MAS             [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENOS           [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! POR             [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! RESTO           [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MENQUE          [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAYQUE          [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MEIQUE          [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! MAIQUE          [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! IGUALQUE        [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! PAND            [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTI          [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! SHIFTD          [ reduce using rule 132 (expresion_bit_bit -> expresion XORR expresion .) ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]


state 166

    (133) expresion_bit_bit -> expresion SHIFTI expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MENQUE          reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAYQUE          reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MEIQUE          reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAIQUE          reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    IGUALQUE        reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    NIGUALQUE       reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    AND             reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    OR              reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XOR             reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PAND            reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    BOR             reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    XORR            reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTI          reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    SHIFTD          reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PTCOMA          reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    PARDER          reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    LLAVDER         reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    COMA            reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    UNARIO          reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    DOSP            reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80

  ! MAS             [ reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENOS           [ reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! POR             [ reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! DIVIDIDO        [ reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! RESTO           [ reduce using rule 133 (expresion_bit_bit -> expresion SHIFTI expresion .) ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]
  ! SHIFTI          [ shift and go to state 93 ]
  ! SHIFTD          [ shift and go to state 94 ]


state 167

    (134) expresion_bit_bit -> expresion SHIFTD expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    CORDER          reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MENQUE          reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAYQUE          reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MEIQUE          reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAIQUE          reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    IGUALQUE        reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    NIGUALQUE       reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    AND             reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    OR              reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XOR             reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PAND            reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    BOR             reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    XORR            reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTI          reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    SHIFTD          reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PTCOMA          reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    PARDER          reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    LLAVDER         reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    COMA            reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    UNARIO          reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    DOSP            reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80

  ! MAS             [ reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENOS           [ reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! POR             [ reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! DIVIDIDO        [ reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! RESTO           [ reduce using rule 134 (expresion_bit_bit -> expresion SHIFTD expresion .) ]
  ! MENQUE          [ shift and go to state 81 ]
  ! MAYQUE          [ shift and go to state 82 ]
  ! MEIQUE          [ shift and go to state 83 ]
  ! MAIQUE          [ shift and go to state 84 ]
  ! IGUALQUE        [ shift and go to state 85 ]
  ! NIGUALQUE       [ shift and go to state 86 ]
  ! AND             [ shift and go to state 87 ]
  ! OR              [ shift and go to state 88 ]
  ! XOR             [ shift and go to state 89 ]
  ! PAND            [ shift and go to state 90 ]
  ! BOR             [ shift and go to state 91 ]
  ! XORR            [ shift and go to state 92 ]
  ! SHIFTI          [ shift and go to state 93 ]
  ! SHIFTD          [ shift and go to state 94 ]


state 168

    (124) expresion -> PARIZQ expresion PARDER .

    CORDER          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    RESTO           reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MENQUE          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MAYQUE          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MEIQUE          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    MAIQUE          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    NIGUALQUE       reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    XOR             reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    PAND            reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    BOR             reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    XORR            reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    SHIFTI          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    SHIFTD          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    LLAVDER         reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    UNARIO          reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)
    DOSP            reduce using rule 124 (expresion -> PARIZQ expresion PARDER .)


state 169

    (37) llamada -> ID PARIZQ expresiones . PARDER
    (116) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 213
    COMA            shift and go to state 173


state 170

    (38) llamada -> ID PARIZQ PARDER .

    CORDER          reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    MAS             reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    POR             reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    RESTO           reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    MENQUE          reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    MAYQUE          reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    MEIQUE          reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    MAIQUE          reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    AND             reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    OR              reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    XOR             reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    PAND            reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    BOR             reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    XORR            reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    SHIFTI          reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    SHIFTD          reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    PTCOMA          reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    LLAVDER         reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    COMA            reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    UNARIO          reduce using rule 38 (llamada -> ID PARIZQ PARDER .)
    DOSP            reduce using rule 38 (llamada -> ID PARIZQ PARDER .)


state 171

    (43) acceso_struct -> tipo_var PUNTO tipo_var .

    CORDER          reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MAS             reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MENOS           reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    POR             reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    DIVIDIDO        reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    RESTO           reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MENQUE          reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MAYQUE          reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MEIQUE          reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    MAIQUE          reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    IGUALQUE        reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    NIGUALQUE       reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    AND             reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    OR              reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    XOR             reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    PAND            reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    BOR             reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    XORR            reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    SHIFTI          reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    SHIFTD          reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    PTCOMA          reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    PARDER          reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    LLAVDER         reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    COMA            reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    UNARIO          reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    DOSP            reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)
    IGUAL           reduce using rule 43 (acceso_struct -> tipo_var PUNTO tipo_var .)


state 172

    (156) array -> LLAVIZQ expresiones LLAVDER .

    CORDER          reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    MAS             reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    MENOS           reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    POR             reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    DIVIDIDO        reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    RESTO           reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    MENQUE          reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    MAYQUE          reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    MEIQUE          reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    MAIQUE          reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    IGUALQUE        reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    NIGUALQUE       reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    AND             reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    OR              reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    XOR             reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    PAND            reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    BOR             reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    XORR            reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    SHIFTI          reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    SHIFTD          reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    PTCOMA          reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    PARDER          reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    LLAVDER         reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    COMA            reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    UNARIO          reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)
    DOSP            reduce using rule 156 (array -> LLAVIZQ expresiones LLAVDER .)


state 173

    (116) expresiones -> expresiones COMA . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 214
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 174

    (100) declaracion -> TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 215
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 175

    (101) declaracion -> TIPO lista_id IGUAL SCAN PARIZQ PARDER .

    PTCOMA          reduce using rule 101 (declaracion -> TIPO lista_id IGUAL SCAN PARIZQ PARDER .)


state 176

    (8) definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .

    STRUCT          reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    INT             reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    FLOAT           reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    CHAR            reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    DOOBLE          reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    VOID            reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)
    $end            reduce using rule 8 (definicion_struct -> STRUCT ID LLAVIZQ declaraciones LLAVDER PTCOMA .)


state 177

    (9) declaraciones -> declaraciones declaracion PTCOMA .

    LLAVDER         reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    INT             reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    FLOAT           reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    CHAR            reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    DOOBLE          reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)
    VOID            reduce using rule 9 (declaraciones -> declaraciones declaracion PTCOMA .)


state 178

    (63) asignacion -> ID IGUAL . expresion UNARIO expresion DOSP expresion
    (74) asignacion -> ID IGUAL . expresion
    (75) asignacion -> ID IGUAL . PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> ID IGUAL . PAND expresion
    (79) asignacion -> ID IGUAL . SCAN PARIZQ PARDER
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 217
    PAND            shift and go to state 218
    SCAN            shift and go to state 219
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 216
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 179

    (44) ins_etiqueta -> ID DOSP .

    LLAVDER         reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    error           reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    IMPRIMIR        reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    ID              reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    IF              reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    SWITCH          reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    BREAK           reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    WHILE           reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    DO              reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    FOR             reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    CONTINUE        reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    GOTO            reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    STRUCT          reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    RETURN          reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    INT             reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    FLOAT           reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    CHAR            reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    DOOBLE          reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    VOID            reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    DEFAULT         reduce using rule 44 (ins_etiqueta -> ID DOSP .)
    CASE            reduce using rule 44 (ins_etiqueta -> ID DOSP .)


state 180

    (80) asignacion -> ID MAS . MAS

    MAS             shift and go to state 220


state 181

    (81) asignacion -> ID MENOS . MENOS

    MENOS           shift and go to state 221


state 182

    (82) asignacion -> ID ASUMA . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 222
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 183

    (83) asignacion -> ID ARESTA . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 223
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 184

    (84) asignacion -> ID MULTIPLICATIVA . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 224
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 185

    (85) asignacion -> ID DIVIDIDA . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 225
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 186

    (86) asignacion -> ID ARESTO . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 226
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 187

    (87) asignacion -> ID ABOR . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 227
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 188

    (88) asignacion -> ID APAND . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 228
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 189

    (89) asignacion -> ID ASHIFTD . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 229
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 190

    (90) asignacion -> ID ASHIFTI . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 230
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 191

    (91) asignacion -> ID AXORR . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 231
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 192

    (12) funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .

    STRUCT          reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 12 (funcion -> TIPO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)


state 193

    (20) instrucciones -> instrucciones instruccion .

    LLAVDER         reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    error           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    IMPRIMIR        reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    DO              reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    GOTO            reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    STRUCT          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    DOOBLE          reduce using rule 20 (instrucciones -> instrucciones instruccion .)
    VOID            reduce using rule 20 (instrucciones -> instrucciones instruccion .)


state 194

    (23) instruccion -> asignacion PTCOMA .

    LLAVDER         reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    error           reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    IMPRIMIR        reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    IF              reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    SWITCH          reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    BREAK           reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    WHILE           reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    DO              reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    FOR             reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    CONTINUE        reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    GOTO            reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    STRUCT          reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    RETURN          reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    INT             reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    FLOAT           reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    CHAR            reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    DOOBLE          reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    VOID            reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    DEFAULT         reduce using rule 23 (instruccion -> asignacion PTCOMA .)
    CASE            reduce using rule 23 (instruccion -> asignacion PTCOMA .)


state 195

    (24) instruccion -> declaracion PTCOMA .

    LLAVDER         reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    error           reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    IMPRIMIR        reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    ID              reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    IF              reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    SWITCH          reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    BREAK           reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    WHILE           reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    DO              reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    FOR             reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    CONTINUE        reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    GOTO            reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    STRUCT          reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    RETURN          reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    INT             reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    FLOAT           reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    CHAR            reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    DOOBLE          reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    VOID            reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    DEFAULT         reduce using rule 24 (instruccion -> declaracion PTCOMA .)
    CASE            reduce using rule 24 (instruccion -> declaracion PTCOMA .)


state 196

    (33) instruccion -> declaracion_struct PTCOMA .

    LLAVDER         reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    error           reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    IMPRIMIR        reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    ID              reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    IF              reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    SWITCH          reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    BREAK           reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    WHILE           reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    DO              reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    FOR             reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    CONTINUE        reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    GOTO            reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    STRUCT          reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    RETURN          reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    INT             reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    FLOAT           reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    CHAR            reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    DOOBLE          reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    VOID            reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    DEFAULT         reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)
    CASE            reduce using rule 33 (instruccion -> declaracion_struct PTCOMA .)


state 197

    (34) instruccion -> llamada PTCOMA .

    LLAVDER         reduce using rule 34 (instruccion -> llamada PTCOMA .)
    error           reduce using rule 34 (instruccion -> llamada PTCOMA .)
    IMPRIMIR        reduce using rule 34 (instruccion -> llamada PTCOMA .)
    ID              reduce using rule 34 (instruccion -> llamada PTCOMA .)
    IF              reduce using rule 34 (instruccion -> llamada PTCOMA .)
    SWITCH          reduce using rule 34 (instruccion -> llamada PTCOMA .)
    BREAK           reduce using rule 34 (instruccion -> llamada PTCOMA .)
    WHILE           reduce using rule 34 (instruccion -> llamada PTCOMA .)
    DO              reduce using rule 34 (instruccion -> llamada PTCOMA .)
    FOR             reduce using rule 34 (instruccion -> llamada PTCOMA .)
    CONTINUE        reduce using rule 34 (instruccion -> llamada PTCOMA .)
    GOTO            reduce using rule 34 (instruccion -> llamada PTCOMA .)
    STRUCT          reduce using rule 34 (instruccion -> llamada PTCOMA .)
    RETURN          reduce using rule 34 (instruccion -> llamada PTCOMA .)
    INT             reduce using rule 34 (instruccion -> llamada PTCOMA .)
    FLOAT           reduce using rule 34 (instruccion -> llamada PTCOMA .)
    CHAR            reduce using rule 34 (instruccion -> llamada PTCOMA .)
    DOOBLE          reduce using rule 34 (instruccion -> llamada PTCOMA .)
    VOID            reduce using rule 34 (instruccion -> llamada PTCOMA .)
    DEFAULT         reduce using rule 34 (instruccion -> llamada PTCOMA .)
    CASE            reduce using rule 34 (instruccion -> llamada PTCOMA .)


state 198

    (72) imprimir_instr -> IMPRIMIR PARIZQ . CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> IMPRIMIR PARIZQ . CADENA PARDER PTCOMA

    CADENA          shift and go to state 232


state 199

    (41) asignacion -> acceso_struct IGUAL . expresion
    (42) asignacion -> acceso_struct IGUAL . PARIZQ TIPO_DATO PARDER expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 234
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    acceso_struct                  shift and go to state 51
    expresion                      shift and go to state 233
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 200

    (77) asignacion -> acceso_lista IGUAL . expresion
    (78) asignacion -> acceso_lista IGUAL . PARIZQ TIPO_DATO PARDER expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 236
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    acceso_lista                   shift and go to state 53
    expresion                      shift and go to state 235
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 201

    (64) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> IF PARIZQ . expresion PARDER instruccion
    (66) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 237
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 202

    (52) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> SWITCH PARIZQ . expresion PARDER LLAVIZQ lista_case LLAVDER
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 238
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 203

    (62) ins_break -> BREAK PTCOMA .

    LLAVDER         reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    error           reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    IMPRIMIR        reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    ID              reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    IF              reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    SWITCH          reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    BREAK           reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    WHILE           reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    DO              reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    FOR             reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    CONTINUE        reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    GOTO            reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    STRUCT          reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    RETURN          reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    INT             reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    FLOAT           reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    CHAR            reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    DOOBLE          reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    VOID            reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    DEFAULT         reduce using rule 62 (ins_break -> BREAK PTCOMA .)
    CASE            reduce using rule 62 (ins_break -> BREAK PTCOMA .)


state 204

    (49) ins_while -> WHILE PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 239
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 205

    (50) ins_while -> DO LLAVIZQ . instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 240
    instruccion                    shift and go to state 116
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 206

    (46) ins_for -> FOR PARIZQ . instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (47) instruccion_for -> . asignacion
    (48) instruccion_for -> . declaracion
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    ID              shift and go to state 244
    STRUCT          shift and go to state 21
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion_for                shift and go to state 241
    asignacion                     shift and go to state 242
    declaracion                    shift and go to state 243
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 207

    (51) ins_continue -> CONTINUE PTCOMA .

    LLAVDER         reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    error           reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    IMPRIMIR        reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    ID              reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    IF              reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    SWITCH          reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    BREAK           reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    WHILE           reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    DO              reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    FOR             reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    CONTINUE        reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    GOTO            reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    STRUCT          reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    RETURN          reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    INT             reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    FLOAT           reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    CHAR            reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    DOOBLE          reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    VOID            reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    DEFAULT         reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)
    CASE            reduce using rule 51 (ins_continue -> CONTINUE PTCOMA .)


state 208

    (45) ins_goto -> GOTO ID . PTCOMA

    PTCOMA          shift and go to state 245


state 209

    (40) declaracion_struct -> STRUCT ID . lista_id
    (97) acceso_lista -> STRUCT ID . accesos
    (102) lista_id -> . lista_id COMA tipo_var
    (103) lista_id -> . tipo_var
    (92) accesos -> . accesos acceso
    (93) accesos -> . acceso
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista
    (94) acceso -> . CORIZQ expresion CORDER
    (95) acceso -> . CORIZQ CORDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos

    ID              shift and go to state 64
    CORIZQ          shift and go to state 26
    STRUCT          shift and go to state 21

    lista_id                       shift and go to state 246
    accesos                        shift and go to state 65
    tipo_var                       shift and go to state 19
    acceso                         shift and go to state 25
    acceso_lista                   shift and go to state 20

state 210

    (39) ins_return -> RETURN expresion . PTCOMA
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 247
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 211

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones . LLAVDER
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 248
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    TIPO                           shift and go to state 68
    instruccion                    shift and go to state 193
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    tipo_var                       shift and go to state 58

state 212

    (19) parametro -> STRUCT ID PAND ID .

    PARDER          reduce using rule 19 (parametro -> STRUCT ID PAND ID .)
    COMA            reduce using rule 19 (parametro -> STRUCT ID PAND ID .)


state 213

    (37) llamada -> ID PARIZQ expresiones PARDER .

    CORDER          reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    MAS             reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    MENOS           reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    POR             reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    DIVIDIDO        reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    RESTO           reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    MENQUE          reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    MAYQUE          reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    MEIQUE          reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    MAIQUE          reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    IGUALQUE        reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    NIGUALQUE       reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    AND             reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    OR              reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    XOR             reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    PAND            reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    BOR             reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    XORR            reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    SHIFTI          reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    SHIFTD          reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    PTCOMA          reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    PARDER          reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    LLAVDER         reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    COMA            reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    UNARIO          reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)
    DOSP            reduce using rule 37 (llamada -> ID PARIZQ expresiones PARDER .)


state 214

    (116) expresiones -> expresiones COMA expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    LLAVDER         reduce using rule 116 (expresiones -> expresiones COMA expresion .)
    COMA            reduce using rule 116 (expresiones -> expresiones COMA expresion .)
    PARDER          reduce using rule 116 (expresiones -> expresiones COMA expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 215

    (100) declaracion -> TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 100 (declaracion -> TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 216

    (63) asignacion -> ID IGUAL expresion . UNARIO expresion DOSP expresion
    (74) asignacion -> ID IGUAL expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    UNARIO          shift and go to state 249
    PTCOMA          reduce using rule 74 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 74 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 217

    (75) asignacion -> ID IGUAL PARIZQ . TIPO_DATO PARDER expresion
    (124) expresion -> PARIZQ . expresion PARDER
    (106) TIPO_DATO -> . INT
    (107) TIPO_DATO -> . FLOAT
    (108) TIPO_DATO -> . CHAR
    (109) TIPO_DATO -> . DOOBLE
    (110) TIPO_DATO -> . VOID
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    INT             shift and go to state 104
    FLOAT           shift and go to state 105
    CHAR            shift and go to state 106
    DOOBLE          shift and go to state 107
    VOID            shift and go to state 108
    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    TIPO_DATO                      shift and go to state 250
    expresion                      shift and go to state 95
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 218

    (76) asignacion -> ID IGUAL PAND . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 251
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 219

    (79) asignacion -> ID IGUAL SCAN . PARIZQ PARDER

    PARIZQ          shift and go to state 252


state 220

    (80) asignacion -> ID MAS MAS .

    PTCOMA          reduce using rule 80 (asignacion -> ID MAS MAS .)
    PARDER          reduce using rule 80 (asignacion -> ID MAS MAS .)


state 221

    (81) asignacion -> ID MENOS MENOS .

    PTCOMA          reduce using rule 81 (asignacion -> ID MENOS MENOS .)
    PARDER          reduce using rule 81 (asignacion -> ID MENOS MENOS .)


state 222

    (82) asignacion -> ID ASUMA expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 82 (asignacion -> ID ASUMA expresion .)
    PARDER          reduce using rule 82 (asignacion -> ID ASUMA expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 223

    (83) asignacion -> ID ARESTA expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 83 (asignacion -> ID ARESTA expresion .)
    PARDER          reduce using rule 83 (asignacion -> ID ARESTA expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 224

    (84) asignacion -> ID MULTIPLICATIVA expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 84 (asignacion -> ID MULTIPLICATIVA expresion .)
    PARDER          reduce using rule 84 (asignacion -> ID MULTIPLICATIVA expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 225

    (85) asignacion -> ID DIVIDIDA expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 85 (asignacion -> ID DIVIDIDA expresion .)
    PARDER          reduce using rule 85 (asignacion -> ID DIVIDIDA expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 226

    (86) asignacion -> ID ARESTO expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 86 (asignacion -> ID ARESTO expresion .)
    PARDER          reduce using rule 86 (asignacion -> ID ARESTO expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 227

    (87) asignacion -> ID ABOR expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 87 (asignacion -> ID ABOR expresion .)
    PARDER          reduce using rule 87 (asignacion -> ID ABOR expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 228

    (88) asignacion -> ID APAND expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 88 (asignacion -> ID APAND expresion .)
    PARDER          reduce using rule 88 (asignacion -> ID APAND expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 229

    (89) asignacion -> ID ASHIFTD expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 89 (asignacion -> ID ASHIFTD expresion .)
    PARDER          reduce using rule 89 (asignacion -> ID ASHIFTD expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 230

    (90) asignacion -> ID ASHIFTI expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 90 (asignacion -> ID ASHIFTI expresion .)
    PARDER          reduce using rule 90 (asignacion -> ID ASHIFTI expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 231

    (91) asignacion -> ID AXORR expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 91 (asignacion -> ID AXORR expresion .)
    PARDER          reduce using rule 91 (asignacion -> ID AXORR expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 232

    (72) imprimir_instr -> IMPRIMIR PARIZQ CADENA . COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> IMPRIMIR PARIZQ CADENA . PARDER PTCOMA

    COMA            shift and go to state 253
    PARDER          shift and go to state 254


state 233

    (41) asignacion -> acceso_struct IGUAL expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 41 (asignacion -> acceso_struct IGUAL expresion .)
    PARDER          reduce using rule 41 (asignacion -> acceso_struct IGUAL expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 234

    (42) asignacion -> acceso_struct IGUAL PARIZQ . TIPO_DATO PARDER expresion
    (124) expresion -> PARIZQ . expresion PARDER
    (106) TIPO_DATO -> . INT
    (107) TIPO_DATO -> . FLOAT
    (108) TIPO_DATO -> . CHAR
    (109) TIPO_DATO -> . DOOBLE
    (110) TIPO_DATO -> . VOID
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    INT             shift and go to state 104
    FLOAT           shift and go to state 105
    CHAR            shift and go to state 106
    DOOBLE          shift and go to state 107
    VOID            shift and go to state 108
    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    acceso_struct                  shift and go to state 51
    TIPO_DATO                      shift and go to state 255
    expresion                      shift and go to state 95
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 235

    (77) asignacion -> acceso_lista IGUAL expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 77 (asignacion -> acceso_lista IGUAL expresion .)
    PARDER          reduce using rule 77 (asignacion -> acceso_lista IGUAL expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 236

    (78) asignacion -> acceso_lista IGUAL PARIZQ . TIPO_DATO PARDER expresion
    (124) expresion -> PARIZQ . expresion PARDER
    (106) TIPO_DATO -> . INT
    (107) TIPO_DATO -> . FLOAT
    (108) TIPO_DATO -> . CHAR
    (109) TIPO_DATO -> . DOOBLE
    (110) TIPO_DATO -> . VOID
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    INT             shift and go to state 104
    FLOAT           shift and go to state 105
    CHAR            shift and go to state 106
    DOOBLE          shift and go to state 107
    VOID            shift and go to state 108
    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    acceso_lista                   shift and go to state 53
    TIPO_DATO                      shift and go to state 256
    expresion                      shift and go to state 95
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 237

    (64) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> IF PARIZQ expresion . PARDER instruccion
    (66) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 257
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 238

    (52) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> SWITCH PARIZQ expresion . PARDER LLAVIZQ lista_case LLAVDER
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 258
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 239

    (49) ins_while -> WHILE PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 259
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 240

    (50) ins_while -> DO LLAVIZQ instrucciones . LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 260
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 193
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 241

    (46) ins_for -> FOR PARIZQ instruccion_for . PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER

    PTCOMA          shift and go to state 261


state 242

    (47) instruccion_for -> asignacion .

    PTCOMA          reduce using rule 47 (instruccion_for -> asignacion .)


state 243

    (48) instruccion_for -> declaracion .

    PTCOMA          reduce using rule 48 (instruccion_for -> declaracion .)


state 244

    (63) asignacion -> ID . IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> ID . IGUAL expresion
    (75) asignacion -> ID . IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> ID . IGUAL PAND expresion
    (79) asignacion -> ID . IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> ID . MAS MAS
    (81) asignacion -> ID . MENOS MENOS
    (82) asignacion -> ID . ASUMA expresion
    (83) asignacion -> ID . ARESTA expresion
    (84) asignacion -> ID . MULTIPLICATIVA expresion
    (85) asignacion -> ID . DIVIDIDA expresion
    (86) asignacion -> ID . ARESTO expresion
    (87) asignacion -> ID . ABOR expresion
    (88) asignacion -> ID . APAND expresion
    (89) asignacion -> ID . ASHIFTD expresion
    (90) asignacion -> ID . ASHIFTI expresion
    (91) asignacion -> ID . AXORR expresion
    (96) acceso_lista -> ID . accesos
    (104) tipo_var -> ID .
    (92) accesos -> . accesos acceso
    (93) accesos -> . acceso
    (94) acceso -> . CORIZQ expresion CORDER
    (95) acceso -> . CORIZQ CORDER

    IGUAL           shift and go to state 178
    MAS             shift and go to state 180
    MENOS           shift and go to state 181
    ASUMA           shift and go to state 182
    ARESTA          shift and go to state 183
    MULTIPLICATIVA  shift and go to state 184
    DIVIDIDA        shift and go to state 185
    ARESTO          shift and go to state 186
    ABOR            shift and go to state 187
    APAND           shift and go to state 188
    ASHIFTD         shift and go to state 189
    ASHIFTI         shift and go to state 190
    AXORR           shift and go to state 191
    PUNTO           reduce using rule 104 (tipo_var -> ID .)
    CORIZQ          shift and go to state 26

    accesos                        shift and go to state 24
    acceso                         shift and go to state 25

state 245

    (45) ins_goto -> GOTO ID PTCOMA .

    LLAVDER         reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    error           reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    IMPRIMIR        reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    ID              reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    IF              reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    SWITCH          reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    BREAK           reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    WHILE           reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    DO              reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    FOR             reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    CONTINUE        reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    GOTO            reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    STRUCT          reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    RETURN          reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    INT             reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    FLOAT           reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    CHAR            reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    DOOBLE          reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    VOID            reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    DEFAULT         reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)
    CASE            reduce using rule 45 (ins_goto -> GOTO ID PTCOMA .)


state 246

    (40) declaracion_struct -> STRUCT ID lista_id .
    (102) lista_id -> lista_id . COMA tipo_var

    PTCOMA          reduce using rule 40 (declaracion_struct -> STRUCT ID lista_id .)
    COMA            shift and go to state 28


state 247

    (39) ins_return -> RETURN expresion PTCOMA .

    LLAVDER         reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    error           reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    IMPRIMIR        reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    ID              reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    IF              reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    SWITCH          reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    BREAK           reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    WHILE           reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    DO              reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    FOR             reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    CONTINUE        reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    GOTO            reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    STRUCT          reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    RETURN          reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    INT             reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    FLOAT           reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    CHAR            reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    DOOBLE          reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    VOID            reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    DEFAULT         reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)
    CASE            reduce using rule 39 (ins_return -> RETURN expresion PTCOMA .)


state 248

    (13) funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .

    STRUCT          reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 13 (funcion -> TIPO ID PARIZQ parametros PARDER LLAVIZQ instrucciones LLAVDER .)


state 249

    (63) asignacion -> ID IGUAL expresion UNARIO . expresion DOSP expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 262
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 250

    (75) asignacion -> ID IGUAL PARIZQ TIPO_DATO . PARDER expresion

    PARDER          shift and go to state 263


state 251

    (76) asignacion -> ID IGUAL PAND expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 76 (asignacion -> ID IGUAL PAND expresion .)
    PARDER          reduce using rule 76 (asignacion -> ID IGUAL PAND expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 252

    (79) asignacion -> ID IGUAL SCAN PARIZQ . PARDER

    PARDER          shift and go to state 264


state 253

    (72) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA . expresiones PARDER PTCOMA
    (116) expresiones -> . expresiones COMA expresion
    (117) expresiones -> . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresiones                    shift and go to state 265
    expresion                      shift and go to state 102
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 254

    (73) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER . PTCOMA

    PTCOMA          shift and go to state 266


state 255

    (42) asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO . PARDER expresion

    PARDER          shift and go to state 267


state 256

    (78) asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO . PARDER expresion

    PARDER          shift and go to state 268


state 257

    (64) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> IF PARIZQ expresion PARDER . instruccion
    (66) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER lelseif
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVIZQ         shift and go to state 269
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 270
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 258

    (52) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> SWITCH PARIZQ expresion PARDER . LLAVIZQ lista_case LLAVDER

    LLAVIZQ         shift and go to state 271


state 259

    (49) ins_while -> WHILE PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 272


state 260

    (50) ins_while -> DO LLAVIZQ instrucciones LLAVDER . WHILE PARIZQ expresion PARDER PTCOMA

    WHILE           shift and go to state 273


state 261

    (46) ins_for -> FOR PARIZQ instruccion_for PTCOMA . expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 274
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 262

    (63) asignacion -> ID IGUAL expresion UNARIO expresion . DOSP expresion
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    DOSP            shift and go to state 275
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 263

    (75) asignacion -> ID IGUAL PARIZQ TIPO_DATO PARDER . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 276
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 264

    (79) asignacion -> ID IGUAL SCAN PARIZQ PARDER .

    PTCOMA          reduce using rule 79 (asignacion -> ID IGUAL SCAN PARIZQ PARDER .)
    PARDER          reduce using rule 79 (asignacion -> ID IGUAL SCAN PARIZQ PARDER .)


state 265

    (72) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones . PARDER PTCOMA
    (116) expresiones -> expresiones . COMA expresion

    PARDER          shift and go to state 277
    COMA            shift and go to state 173


state 266

    (73) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .

    LLAVDER         reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    error           reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    ID              reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IF              reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    SWITCH          reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    BREAK           reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    WHILE           reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DO              reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    FOR             reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CONTINUE        reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    GOTO            reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    STRUCT          reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    RETURN          reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    INT             reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    FLOAT           reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CHAR            reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DOOBLE          reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    VOID            reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    DEFAULT         reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    CASE            reduce using rule 73 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)


state 267

    (42) asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO PARDER . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    acceso_struct                  shift and go to state 51
    expresion                      shift and go to state 278
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 268

    (78) asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO PARDER . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    acceso_lista                   shift and go to state 53
    expresion                      shift and go to state 279
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 269

    (64) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (66) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER lelseif
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 280
    instruccion                    shift and go to state 116
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 270

    (65) sentencia_if -> IF PARIZQ expresion PARDER instruccion .

    LLAVDER         reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    error           reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    IMPRIMIR        reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    ID              reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    IF              reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    SWITCH          reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    BREAK           reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    WHILE           reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    DO              reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    FOR             reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    CONTINUE        reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    GOTO            reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    STRUCT          reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    RETURN          reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    INT             reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    FLOAT           reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    CHAR            reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    DOOBLE          reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    VOID            reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    DEFAULT         reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)
    CASE            reduce using rule 65 (sentencia_if -> IF PARIZQ expresion PARDER instruccion .)


state 271

    (52) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case default_ins LLAVDER
    (53) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ . lista_case LLAVDER
    (54) lista_case -> . lista_case caso
    (55) lista_case -> . caso
    (56) caso -> . CASE expresion DOSP LLAVIZQ instrucciones LLAVDER
    (57) caso -> . CASE expresion DOSP instruccion
    (58) caso -> . CASE expresion DOSP

    CASE            shift and go to state 283

    lista_case                     shift and go to state 281
    caso                           shift and go to state 282

state 272

    (49) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 284
    instruccion                    shift and go to state 116
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 273

    (50) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 285


state 274

    (46) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion . PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          shift and go to state 286
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 275

    (63) asignacion -> ID IGUAL expresion UNARIO expresion DOSP . expresion
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 287
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 276

    (75) asignacion -> ID IGUAL PARIZQ TIPO_DATO PARDER expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 75 (asignacion -> ID IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    PARDER          reduce using rule 75 (asignacion -> ID IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 277

    (72) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 288


state 278

    (42) asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 42 (asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    PARDER          reduce using rule 42 (asignacion -> acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 279

    (78) asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 78 (asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    PARDER          reduce using rule 78 (asignacion -> acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 280

    (64) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (66) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER lelseif
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 289
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 193
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 281

    (52) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . default_ins LLAVDER
    (53) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case . LLAVDER
    (54) lista_case -> lista_case . caso
    (59) default_ins -> . DEFAULT DOSP instruccion
    (60) default_ins -> . DEFAULT DOSP LLAVIZQ instrucciones LLAVDER
    (61) default_ins -> . DEFAULT DOSP
    (56) caso -> . CASE expresion DOSP LLAVIZQ instrucciones LLAVDER
    (57) caso -> . CASE expresion DOSP instruccion
    (58) caso -> . CASE expresion DOSP

    LLAVDER         shift and go to state 291
    DEFAULT         shift and go to state 293
    CASE            shift and go to state 283

    default_ins                    shift and go to state 290
    caso                           shift and go to state 292

state 282

    (55) lista_case -> caso .

    LLAVDER         reduce using rule 55 (lista_case -> caso .)
    DEFAULT         reduce using rule 55 (lista_case -> caso .)
    CASE            reduce using rule 55 (lista_case -> caso .)


state 283

    (56) caso -> CASE . expresion DOSP LLAVIZQ instrucciones LLAVDER
    (57) caso -> CASE . expresion DOSP instruccion
    (58) caso -> CASE . expresion DOSP
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 294
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 284

    (49) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 295
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 193
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 285

    (50) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ . expresion PARDER PTCOMA
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 296
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 286

    (46) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA . asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    ID              shift and go to state 244
    STRUCT          shift and go to state 21

    asignacion                     shift and go to state 297
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    tipo_var                       shift and go to state 58

state 287

    (63) asignacion -> ID IGUAL expresion UNARIO expresion DOSP expresion .
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PTCOMA          reduce using rule 63 (asignacion -> ID IGUAL expresion UNARIO expresion DOSP expresion .)
    PARDER          reduce using rule 63 (asignacion -> ID IGUAL expresion UNARIO expresion DOSP expresion .)
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 288

    (72) imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .

    LLAVDER         reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    error           reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    ID              reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    IF              reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    SWITCH          reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    BREAK           reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    WHILE           reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DO              reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    FOR             reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CONTINUE        reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    GOTO            reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    STRUCT          reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    RETURN          reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    INT             reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    FLOAT           reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CHAR            reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DOOBLE          reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    VOID            reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    DEFAULT         reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)
    CASE            reduce using rule 72 (imprimir_instr -> IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA .)


state 289

    (64) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .
    (66) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . lelseif
    (69) lelseif -> . lelseif elseif
    (70) lelseif -> . elseif
    (71) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVDER         reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 64 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 298

    lelseif                        shift and go to state 299
    elseif                         shift and go to state 300

state 290

    (52) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins . LLAVDER

    LLAVDER         shift and go to state 301


state 291

    (53) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .

    LLAVDER         reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    error           reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IMPRIMIR        reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    ID              reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    IF              reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    SWITCH          reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    BREAK           reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    WHILE           reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DO              reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    FOR             reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CONTINUE        reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    GOTO            reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    STRUCT          reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    RETURN          reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    INT             reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    FLOAT           reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CHAR            reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DOOBLE          reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    VOID            reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    DEFAULT         reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)
    CASE            reduce using rule 53 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER .)


state 292

    (54) lista_case -> lista_case caso .

    LLAVDER         reduce using rule 54 (lista_case -> lista_case caso .)
    DEFAULT         reduce using rule 54 (lista_case -> lista_case caso .)
    CASE            reduce using rule 54 (lista_case -> lista_case caso .)


state 293

    (59) default_ins -> DEFAULT . DOSP instruccion
    (60) default_ins -> DEFAULT . DOSP LLAVIZQ instrucciones LLAVDER
    (61) default_ins -> DEFAULT . DOSP

    DOSP            shift and go to state 302


state 294

    (56) caso -> CASE expresion . DOSP LLAVIZQ instrucciones LLAVDER
    (57) caso -> CASE expresion . DOSP instruccion
    (58) caso -> CASE expresion . DOSP
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    DOSP            shift and go to state 303
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 295

    (49) ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 49 (ins_while -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)


state 296

    (50) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion . PARDER PTCOMA
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 304
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 297

    (46) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 305


state 298

    (66) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER
    (71) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 307
    IF              shift and go to state 306


state 299

    (67) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif . ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .
    (69) lelseif -> lelseif . elseif
    (71) elseif -> . ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    ELSE            shift and go to state 308
    LLAVDER         reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    error           reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IMPRIMIR        reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    ID              reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    IF              reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    SWITCH          reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    BREAK           reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    WHILE           reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DO              reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    FOR             reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CONTINUE        reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    GOTO            reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    STRUCT          reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    RETURN          reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    INT             reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    FLOAT           reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CHAR            reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DOOBLE          reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    VOID            reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    DEFAULT         reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)
    CASE            reduce using rule 68 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif .)

    elseif                         shift and go to state 309

state 300

    (70) lelseif -> elseif .

    ELSE            reduce using rule 70 (lelseif -> elseif .)
    LLAVDER         reduce using rule 70 (lelseif -> elseif .)
    error           reduce using rule 70 (lelseif -> elseif .)
    IMPRIMIR        reduce using rule 70 (lelseif -> elseif .)
    ID              reduce using rule 70 (lelseif -> elseif .)
    IF              reduce using rule 70 (lelseif -> elseif .)
    SWITCH          reduce using rule 70 (lelseif -> elseif .)
    BREAK           reduce using rule 70 (lelseif -> elseif .)
    WHILE           reduce using rule 70 (lelseif -> elseif .)
    DO              reduce using rule 70 (lelseif -> elseif .)
    FOR             reduce using rule 70 (lelseif -> elseif .)
    CONTINUE        reduce using rule 70 (lelseif -> elseif .)
    GOTO            reduce using rule 70 (lelseif -> elseif .)
    STRUCT          reduce using rule 70 (lelseif -> elseif .)
    RETURN          reduce using rule 70 (lelseif -> elseif .)
    INT             reduce using rule 70 (lelseif -> elseif .)
    FLOAT           reduce using rule 70 (lelseif -> elseif .)
    CHAR            reduce using rule 70 (lelseif -> elseif .)
    DOOBLE          reduce using rule 70 (lelseif -> elseif .)
    VOID            reduce using rule 70 (lelseif -> elseif .)
    DEFAULT         reduce using rule 70 (lelseif -> elseif .)
    CASE            reduce using rule 70 (lelseif -> elseif .)


state 301

    (52) sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .

    LLAVDER         reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    error           reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IMPRIMIR        reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    ID              reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    IF              reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    SWITCH          reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    BREAK           reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    WHILE           reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DO              reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    FOR             reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CONTINUE        reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    GOTO            reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    STRUCT          reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    RETURN          reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    INT             reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    FLOAT           reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CHAR            reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DOOBLE          reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    VOID            reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    DEFAULT         reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)
    CASE            reduce using rule 52 (sentencia_switch -> SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER .)


state 302

    (59) default_ins -> DEFAULT DOSP . instruccion
    (60) default_ins -> DEFAULT DOSP . LLAVIZQ instrucciones LLAVDER
    (61) default_ins -> DEFAULT DOSP .
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVIZQ         shift and go to state 311
    LLAVDER         reduce using rule 61 (default_ins -> DEFAULT DOSP .)
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 310
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 303

    (56) caso -> CASE expresion DOSP . LLAVIZQ instrucciones LLAVDER
    (57) caso -> CASE expresion DOSP . instruccion
    (58) caso -> CASE expresion DOSP .
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVIZQ         shift and go to state 312
    LLAVDER         reduce using rule 58 (caso -> CASE expresion DOSP .)
    DEFAULT         reduce using rule 58 (caso -> CASE expresion DOSP .)
    CASE            reduce using rule 58 (caso -> CASE expresion DOSP .)
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 313
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 304

    (50) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 314


state 305

    (46) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 315


state 306

    (71) elseif -> ELSE IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 316


state 307

    (66) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 317
    instruccion                    shift and go to state 116
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 308

    (67) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE . LLAVIZQ instrucciones LLAVDER
    (71) elseif -> ELSE . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 318
    IF              shift and go to state 306


state 309

    (69) lelseif -> lelseif elseif .

    ELSE            reduce using rule 69 (lelseif -> lelseif elseif .)
    LLAVDER         reduce using rule 69 (lelseif -> lelseif elseif .)
    error           reduce using rule 69 (lelseif -> lelseif elseif .)
    IMPRIMIR        reduce using rule 69 (lelseif -> lelseif elseif .)
    ID              reduce using rule 69 (lelseif -> lelseif elseif .)
    IF              reduce using rule 69 (lelseif -> lelseif elseif .)
    SWITCH          reduce using rule 69 (lelseif -> lelseif elseif .)
    BREAK           reduce using rule 69 (lelseif -> lelseif elseif .)
    WHILE           reduce using rule 69 (lelseif -> lelseif elseif .)
    DO              reduce using rule 69 (lelseif -> lelseif elseif .)
    FOR             reduce using rule 69 (lelseif -> lelseif elseif .)
    CONTINUE        reduce using rule 69 (lelseif -> lelseif elseif .)
    GOTO            reduce using rule 69 (lelseif -> lelseif elseif .)
    STRUCT          reduce using rule 69 (lelseif -> lelseif elseif .)
    RETURN          reduce using rule 69 (lelseif -> lelseif elseif .)
    INT             reduce using rule 69 (lelseif -> lelseif elseif .)
    FLOAT           reduce using rule 69 (lelseif -> lelseif elseif .)
    CHAR            reduce using rule 69 (lelseif -> lelseif elseif .)
    DOOBLE          reduce using rule 69 (lelseif -> lelseif elseif .)
    VOID            reduce using rule 69 (lelseif -> lelseif elseif .)
    DEFAULT         reduce using rule 69 (lelseif -> lelseif elseif .)
    CASE            reduce using rule 69 (lelseif -> lelseif elseif .)


state 310

    (59) default_ins -> DEFAULT DOSP instruccion .

    LLAVDER         reduce using rule 59 (default_ins -> DEFAULT DOSP instruccion .)


state 311

    (60) default_ins -> DEFAULT DOSP LLAVIZQ . instrucciones LLAVDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 319
    instruccion                    shift and go to state 116
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 312

    (56) caso -> CASE expresion DOSP LLAVIZQ . instrucciones LLAVDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 320
    instruccion                    shift and go to state 116
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 313

    (57) caso -> CASE expresion DOSP instruccion .

    LLAVDER         reduce using rule 57 (caso -> CASE expresion DOSP instruccion .)
    DEFAULT         reduce using rule 57 (caso -> CASE expresion DOSP instruccion .)
    CASE            reduce using rule 57 (caso -> CASE expresion DOSP instruccion .)


state 314

    (50) ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .

    LLAVDER         reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    error           reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    SWITCH          reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    BREAK           reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DO              reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    FOR             reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CONTINUE        reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    GOTO            reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    STRUCT          reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    RETURN          reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    INT             reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    FLOAT           reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CHAR            reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DOOBLE          reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    VOID            reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    DEFAULT         reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)
    CASE            reduce using rule 50 (ins_while -> DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA .)


state 315

    (46) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ . instrucciones LLAVDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    asignacion                     shift and go to state 118
    instrucciones                  shift and go to state 321
    instruccion                    shift and go to state 116
    imprimir_instr                 shift and go to state 117
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 316

    (71) elseif -> ELSE IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (118) expresion -> . primitiva
    (119) expresion -> . expresion_numerica
    (120) expresion -> . expresion_relacional
    (121) expresion -> . expresion_unaria
    (122) expresion -> . expresion_logica
    (123) expresion -> . expresion_bit_bit
    (124) expresion -> . PARIZQ expresion PARDER
    (147) primitiva -> . ENTERO
    (148) primitiva -> . DECIMAL
    (149) primitiva -> . CADENA
    (150) primitiva -> . CADENAR_CHAR
    (151) primitiva -> . ID
    (152) primitiva -> . acceso_struct
    (153) primitiva -> . llamada
    (154) primitiva -> . acceso_lista
    (155) primitiva -> . array
    (142) expresion_numerica -> . expresion MAS expresion
    (143) expresion_numerica -> . expresion MENOS expresion
    (144) expresion_numerica -> . expresion POR expresion
    (145) expresion_numerica -> . expresion DIVIDIDO expresion
    (146) expresion_numerica -> . expresion RESTO expresion
    (136) expresion_relacional -> . expresion MENQUE expresion
    (137) expresion_relacional -> . expresion MAYQUE expresion
    (138) expresion_relacional -> . expresion MEIQUE expresion
    (139) expresion_relacional -> . expresion MAIQUE expresion
    (140) expresion_relacional -> . expresion IGUALQUE expresion
    (141) expresion_relacional -> . expresion NIGUALQUE expresion
    (125) expresion_unaria -> . MENOS expresion
    (126) expresion_logica -> . expresion AND expresion
    (127) expresion_logica -> . expresion OR expresion
    (128) expresion_logica -> . expresion XOR expresion
    (129) expresion_logica -> . NOT expresion
    (130) expresion_bit_bit -> . expresion PAND expresion
    (131) expresion_bit_bit -> . expresion BOR expresion
    (132) expresion_bit_bit -> . expresion XORR expresion
    (133) expresion_bit_bit -> . expresion SHIFTI expresion
    (134) expresion_bit_bit -> . expresion SHIFTD expresion
    (135) expresion_bit_bit -> . NOTR expresion
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (156) array -> . LLAVIZQ expresiones LLAVDER
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    PARIZQ          shift and go to state 45
    ENTERO          shift and go to state 46
    DECIMAL         shift and go to state 47
    CADENA          shift and go to state 48
    CADENAR_CHAR    shift and go to state 49
    ID              shift and go to state 50
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    NOTR            shift and go to state 57
    STRUCT          shift and go to state 21
    LLAVIZQ         shift and go to state 59

    expresion                      shift and go to state 322
    primitiva                      shift and go to state 39
    expresion_numerica             shift and go to state 40
    expresion_relacional           shift and go to state 41
    expresion_unaria               shift and go to state 42
    expresion_logica               shift and go to state 43
    expresion_bit_bit              shift and go to state 44
    acceso_struct                  shift and go to state 51
    llamada                        shift and go to state 52
    acceso_lista                   shift and go to state 53
    array                          shift and go to state 54
    tipo_var                       shift and go to state 58

state 317

    (66) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 323
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 193
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 318

    (67) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ . instrucciones LLAVDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 324
    instruccion                    shift and go to state 116
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 319

    (60) default_ins -> DEFAULT DOSP LLAVIZQ instrucciones . LLAVDER
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 325
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 193
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 320

    (56) caso -> CASE expresion DOSP LLAVIZQ instrucciones . LLAVDER
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 326
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 193
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 321

    (46) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones . LLAVDER
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 327
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    asignacion                     shift and go to state 118
    instruccion                    shift and go to state 193
    imprimir_instr                 shift and go to state 117
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 322

    (71) elseif -> ELSE IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (142) expresion_numerica -> expresion . MAS expresion
    (143) expresion_numerica -> expresion . MENOS expresion
    (144) expresion_numerica -> expresion . POR expresion
    (145) expresion_numerica -> expresion . DIVIDIDO expresion
    (146) expresion_numerica -> expresion . RESTO expresion
    (136) expresion_relacional -> expresion . MENQUE expresion
    (137) expresion_relacional -> expresion . MAYQUE expresion
    (138) expresion_relacional -> expresion . MEIQUE expresion
    (139) expresion_relacional -> expresion . MAIQUE expresion
    (140) expresion_relacional -> expresion . IGUALQUE expresion
    (141) expresion_relacional -> expresion . NIGUALQUE expresion
    (126) expresion_logica -> expresion . AND expresion
    (127) expresion_logica -> expresion . OR expresion
    (128) expresion_logica -> expresion . XOR expresion
    (130) expresion_bit_bit -> expresion . PAND expresion
    (131) expresion_bit_bit -> expresion . BOR expresion
    (132) expresion_bit_bit -> expresion . XORR expresion
    (133) expresion_bit_bit -> expresion . SHIFTI expresion
    (134) expresion_bit_bit -> expresion . SHIFTD expresion

    PARDER          shift and go to state 328
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    POR             shift and go to state 78
    DIVIDIDO        shift and go to state 79
    RESTO           shift and go to state 80
    MENQUE          shift and go to state 81
    MAYQUE          shift and go to state 82
    MEIQUE          shift and go to state 83
    MAIQUE          shift and go to state 84
    IGUALQUE        shift and go to state 85
    NIGUALQUE       shift and go to state 86
    AND             shift and go to state 87
    OR              shift and go to state 88
    XOR             shift and go to state 89
    PAND            shift and go to state 90
    BOR             shift and go to state 91
    XORR            shift and go to state 92
    SHIFTI          shift and go to state 93
    SHIFTD          shift and go to state 94


state 323

    (66) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 66 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)


state 324

    (67) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones . LLAVDER
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 329
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 193
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 325

    (60) default_ins -> DEFAULT DOSP LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 60 (default_ins -> DEFAULT DOSP LLAVIZQ instrucciones LLAVDER .)


state 326

    (56) caso -> CASE expresion DOSP LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 56 (caso -> CASE expresion DOSP LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 56 (caso -> CASE expresion DOSP LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 56 (caso -> CASE expresion DOSP LLAVIZQ instrucciones LLAVDER .)


state 327

    (46) ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 46 (ins_for -> FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER .)


state 328

    (71) elseif -> ELSE IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 330


state 329

    (67) sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .

    LLAVDER         reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 67 (sentencia_if -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER .)


state 330

    (71) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (20) instrucciones -> . instrucciones instruccion
    (21) instrucciones -> . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instrucciones                  shift and go to state 331
    instruccion                    shift and go to state 116
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 331

    (71) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (20) instrucciones -> instrucciones . instruccion
    (22) instruccion -> . imprimir_instr
    (23) instruccion -> . asignacion PTCOMA
    (24) instruccion -> . declaracion PTCOMA
    (25) instruccion -> . sentencia_if
    (26) instruccion -> . sentencia_switch
    (27) instruccion -> . ins_break
    (28) instruccion -> . ins_while
    (29) instruccion -> . ins_for
    (30) instruccion -> . ins_continue
    (31) instruccion -> . ins_etiqueta
    (32) instruccion -> . ins_goto
    (33) instruccion -> . declaracion_struct PTCOMA
    (34) instruccion -> . llamada PTCOMA
    (35) instruccion -> . ins_return
    (36) instruccion -> . error
    (72) imprimir_instr -> . IMPRIMIR PARIZQ CADENA COMA expresiones PARDER PTCOMA
    (73) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (41) asignacion -> . acceso_struct IGUAL expresion
    (42) asignacion -> . acceso_struct IGUAL PARIZQ TIPO_DATO PARDER expresion
    (63) asignacion -> . ID IGUAL expresion UNARIO expresion DOSP expresion
    (74) asignacion -> . ID IGUAL expresion
    (75) asignacion -> . ID IGUAL PARIZQ TIPO_DATO PARDER expresion
    (76) asignacion -> . ID IGUAL PAND expresion
    (77) asignacion -> . acceso_lista IGUAL expresion
    (78) asignacion -> . acceso_lista IGUAL PARIZQ TIPO_DATO PARDER expresion
    (79) asignacion -> . ID IGUAL SCAN PARIZQ PARDER
    (80) asignacion -> . ID MAS MAS
    (81) asignacion -> . ID MENOS MENOS
    (82) asignacion -> . ID ASUMA expresion
    (83) asignacion -> . ID ARESTA expresion
    (84) asignacion -> . ID MULTIPLICATIVA expresion
    (85) asignacion -> . ID DIVIDIDA expresion
    (86) asignacion -> . ID ARESTO expresion
    (87) asignacion -> . ID ABOR expresion
    (88) asignacion -> . ID APAND expresion
    (89) asignacion -> . ID ASHIFTD expresion
    (90) asignacion -> . ID ASHIFTI expresion
    (91) asignacion -> . ID AXORR expresion
    (98) declaracion -> . TIPO lista_id
    (99) declaracion -> . TIPO lista_id IGUAL expresion
    (100) declaracion -> . TIPO lista_id IGUAL PARIZQ TIPO_DATO PARDER expresion
    (101) declaracion -> . TIPO lista_id IGUAL SCAN PARIZQ PARDER
    (64) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (65) sentencia_if -> . IF PARIZQ expresion PARDER instruccion
    (66) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (67) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif ELSE LLAVIZQ instrucciones LLAVDER
    (68) sentencia_if -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER lelseif
    (52) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case default_ins LLAVDER
    (53) sentencia_switch -> . SWITCH PARIZQ expresion PARDER LLAVIZQ lista_case LLAVDER
    (62) ins_break -> . BREAK PTCOMA
    (49) ins_while -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (50) ins_while -> . DO LLAVIZQ instrucciones LLAVDER WHILE PARIZQ expresion PARDER PTCOMA
    (46) ins_for -> . FOR PARIZQ instruccion_for PTCOMA expresion PTCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER
    (51) ins_continue -> . CONTINUE PTCOMA
    (44) ins_etiqueta -> . ID DOSP
    (45) ins_goto -> . GOTO ID PTCOMA
    (40) declaracion_struct -> . STRUCT ID lista_id
    (37) llamada -> . ID PARIZQ expresiones PARDER
    (38) llamada -> . ID PARIZQ PARDER
    (39) ins_return -> . RETURN expresion PTCOMA
    (43) acceso_struct -> . tipo_var PUNTO tipo_var
    (96) acceso_lista -> . ID accesos
    (97) acceso_lista -> . STRUCT ID accesos
    (111) TIPO -> . INT
    (112) TIPO -> . FLOAT
    (113) TIPO -> . CHAR
    (114) TIPO -> . DOOBLE
    (115) TIPO -> . VOID
    (104) tipo_var -> . ID
    (105) tipo_var -> . acceso_lista

    LLAVDER         shift and go to state 332
    error           shift and go to state 131
    IMPRIMIR        shift and go to state 132
    ID              shift and go to state 114
    IF              shift and go to state 135
    SWITCH          shift and go to state 136
    BREAK           shift and go to state 137
    WHILE           shift and go to state 138
    DO              shift and go to state 139
    FOR             shift and go to state 140
    CONTINUE        shift and go to state 141
    GOTO            shift and go to state 142
    STRUCT          shift and go to state 143
    RETURN          shift and go to state 144
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOOBLE          shift and go to state 13
    VOID            shift and go to state 14

    instruccion                    shift and go to state 193
    imprimir_instr                 shift and go to state 117
    asignacion                     shift and go to state 118
    declaracion                    shift and go to state 119
    sentencia_if                   shift and go to state 120
    sentencia_switch               shift and go to state 121
    ins_break                      shift and go to state 122
    ins_while                      shift and go to state 123
    ins_for                        shift and go to state 124
    ins_continue                   shift and go to state 125
    ins_etiqueta                   shift and go to state 126
    ins_goto                       shift and go to state 127
    declaracion_struct             shift and go to state 128
    llamada                        shift and go to state 129
    ins_return                     shift and go to state 130
    acceso_struct                  shift and go to state 133
    acceso_lista                   shift and go to state 134
    TIPO                           shift and go to state 68
    tipo_var                       shift and go to state 58

state 332

    (71) elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    ELSE            reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    error           reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IMPRIMIR        reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    SWITCH          reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    BREAK           reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DO              reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FOR             reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CONTINUE        reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    GOTO            reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    STRUCT          reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    RETURN          reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    INT             reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FLOAT           reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DOOBLE          reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VOID            reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DEFAULT         reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CASE            reduce using rule 71 (elseif -> ELSE IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 162 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 162 resolved as shift
WARNING: shift/reduce conflict for POR in state 162 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 162 resolved as shift
WARNING: shift/reduce conflict for RESTO in state 162 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 162 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 162 resolved as shift
WARNING: shift/reduce conflict for MEIQUE in state 162 resolved as shift
WARNING: shift/reduce conflict for MAIQUE in state 162 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 162 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 162 resolved as shift
WARNING: shift/reduce conflict for AND in state 162 resolved as shift
WARNING: shift/reduce conflict for OR in state 162 resolved as shift
WARNING: shift/reduce conflict for XOR in state 162 resolved as shift
WARNING: shift/reduce conflict for PAND in state 162 resolved as shift
WARNING: shift/reduce conflict for BOR in state 162 resolved as shift
WARNING: shift/reduce conflict for XORR in state 162 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 162 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 162 resolved as shift
